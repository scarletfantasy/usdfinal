#usda 1.0

def "xform1"
{
    def Mesh "mesh0"
    {
        custom matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (57.06452941894531, 35.70355224609375, -16.2744197845459, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh383"
    {
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, 11.229999542236328, 0, 0), (0, 0, 11.229999542236328, 0), (50.16452932357788, 0, -23.2744197845459, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh384"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.08543544, -0.08539558, -0.25), (0.08543544, 0.08539558, 0.25)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 13, 12, 8, 13, 14, 12, 12, 14, 15, 16, 15, 14, 17, 15, 16, 18, 17, 16, 19, 17, 18, 18, 20, 19, 19, 20, 21, 20, 22, 21, 21, 22, 23, 22, 24, 23, 23, 24, 25, 27, 26, 28, 28, 26, 29, 26, 30, 29, 31, 30, 26, 31, 32, 30, 30, 32, 33, 34, 33, 32, 35, 33, 34, 36, 35, 34, 37, 35, 36, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 49, 48, 44, 49, 50, 48, 48, 50, 51, 52, 51, 50, 53, 51, 52, 54, 53, 52, 55, 53, 54, 54, 56, 55, 55, 56, 57, 56, 58, 57, 57, 58, 59, 58, 60, 59, 59, 60, 61, 63, 62, 64, 64, 62, 65, 62, 66, 65, 67, 66, 62, 67, 68, 66, 66, 68, 69, 70, 69, 68, 71, 69, 70, 72, 71, 70, 73, 71, 72, 72, 74, 73, 73, 74, 75, 74, 76, 75, 75, 76, 77, 76, 78, 77, 77, 78, 79]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.00852655), (0, -0.99996364, 0.00852655), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-0.99996793, 0.00090847147, 0.0079542585), (0, -0.99996364, 0.008526588), (-0.99997246, 0.0008766487, 0.007379305), (0, -0.99996364, 0.00852655), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 0.9999685, -0.007943587), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0.9999685, -0.007943257), (-0.99997246, 0.0008766487, 0.007379305), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, 0.9999685, -0.007943587), (0, -0.99996364, 0.00852655), (0, 0.9999685, -0.007943257), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.059417114), (-0.049999997, -0.050040245, 0.059417114), (-0.08543544, -0.08531528, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (-0.085355334, -0.08539558, 0.049999997), (0.085355334, -0.08539558, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (-0.049999997, -0.050040245, -0.049999997), (0.049999997, -0.050040245, -0.049999997), (-0.049999997, -0.050040245, -0.14999999), (0.049999997, -0.050040245, -0.14999999), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.059417114), (-0.049999997, 0.049959753, 0.060131416), (-0.08527466, 0.08539558, 0.060131416), (-0.08543544, -0.08531528, 0.059417114), (-0.085355334, 0.08531509, 0.049999997), (-0.085355334, -0.08539558, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (-0.049999997, 0.049959753, -0.049999997), (-0.049999997, -0.050040245, -0.049999997), (-0.049999997, 0.049959753, -0.14999999), (-0.049999997, -0.050040245, -0.14999999), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.060131416), (0.049999997, 0.049959753, 0.060131416), (0.08527466, 0.08539558, 0.060131416), (-0.08527466, 0.08539558, 0.060131416), (0.085355334, 0.08531509, 0.049999997), (-0.085355334, 0.08531509, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (0.049999997, 0.049959753, -0.049999997), (-0.049999997, 0.049959753, -0.049999997), (0.049999997, 0.049959753, -0.14999999), (-0.049999997, 0.049959753, -0.14999999), (0.049999997, 0.049959753, -0.25), (-0.049999997, 0.049959753, -0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.060131416), (0.049999997, -0.050040245, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (0.08527466, 0.08539558, 0.060131416), (0.085355334, -0.08539558, 0.049999997), (0.085355334, 0.08531509, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (0.049999997, -0.050040245, -0.049999997), (0.049999997, 0.049959753, -0.049999997), (0.049999997, -0.050040245, -0.14999999), (0.049999997, 0.049959753, -0.14999999), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.381166), (1, 0.381166), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.379737), (1, 0.379737), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.379737), (1, 0.379737), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.381166), (1, 0.381166), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0.10592148, 0.0084676435, 0.99433845, -1), (0, 1, 0, -1), (0, 0.0085144015, 0.99996376, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.007981067, 0.113470644, 0.99350935, -1), (1, 0, 0, -1), (0.0074112844, 0.1179655, 0.99299, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0.10592148, -0.0084676435, -0.99433845, -1), (0.11365506, -0.007873522, -0.99348915, -1), (0, -0.008514402, -0.99996376, -1), (0, -0.007939033, -0.9999685, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.04888392588498, 2.807499885559082, -21.325405562841695, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh385"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.06220169, -0.06647457, -0.15615116), (0.06220169, 0.06647457, 0.15615116)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.06220169, 0.06647457, 0.15615116), (0.06220169, 0.06647457, 0.15615116), (0.06220169, -0.06647457, 0.15615116), (-0.06220169, -0.06647457, 0.15615116), (-0.06220169, 0.06647457, -0.15615116), (-0.06220169, -0.06647457, -0.15615116), (0.06220169, -0.06647457, -0.15615116), (0.06220169, 0.06647457, -0.15615116), (-0.06220169, -0.06647457, -0.15615116), (-0.06220169, -0.06647457, 0.15615116), (0.06220169, -0.06647457, 0.15615116), (0.06220169, -0.06647457, -0.15615116), (-0.06220169, 0.06647457, -0.15615116), (-0.06220169, 0.06647457, 0.15615116), (-0.06220169, -0.06647457, 0.15615116), (-0.06220169, -0.06647457, -0.15615116), (0.06220169, 0.06647457, -0.15615116), (0.06220169, 0.06647457, 0.15615116), (-0.06220169, 0.06647457, 0.15615116), (-0.06220169, 0.06647457, -0.15615116), (0.06220169, -0.06647457, -0.15615116), (0.06220169, -0.06647457, 0.15615116), (0.06220169, 0.06647457, 0.15615116), (0.06220169, 0.06647457, -0.15615116)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.96645289479932, 1.753577462032979, -24.597720922605248, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh386"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.94133643705652, 1.1149371934690464, -20.448138992359873, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh387"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.94133643705652, 1.1149371934690464, -22.18781024660845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh388"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.18166060218687, 1.1149371934690464, -20.448177145887485, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh389"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.18166060218687, 1.1149371934690464, -22.190691507303285, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh390"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.18166060218687, 1.1149371934690464, -21.830747697341565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh391"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.18166060218687, 1.1149374444790965, -20.82318381794437, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh392"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.93051187965693, 1.1149374444790965, -20.82318381794437, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh393"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.93051187965693, 1.1149371934690464, -21.830747697341565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh394"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.600505008109735, 1.1149374444790965, -22.228098112676207, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh395"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.60806938952703, 1.1149371934690464, -22.228098112676207, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh396"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.600505008109735, 1.1149374444790965, -20.462737067512307, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh397"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.60806938952703, 1.1149371934690464, -20.462737067512307, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh398"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.08543544, -0.08539558, -0.25), (0.08543544, 0.08539558, 0.25)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 4, 8, 7, 9, 8, 4, 9, 10, 8, 8, 10, 11, 12, 11, 10, 13, 11, 12, 14, 13, 12, 15, 13, 14, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 18, 20, 19, 19, 20, 21, 23, 22, 24, 24, 22, 25, 22, 26, 25, 27, 26, 22, 27, 28, 26, 26, 28, 29, 30, 29, 28, 31, 29, 30, 32, 31, 30, 33, 31, 32, 32, 34, 33, 33, 34, 35, 34, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 41, 41, 40, 42, 44, 43, 45, 45, 43, 46, 43, 47, 46, 48, 47, 43, 48, 49, 47, 47, 49, 50, 51, 50, 49, 52, 50, 51, 53, 52, 51, 54, 52, 53, 53, 55, 54, 54, 55, 56, 55, 57, 56, 56, 57, 58, 57, 59, 58, 58, 59, 60, 59, 61, 60, 60, 61, 62, 61, 63, 62, 62, 63, 64, 62, 64, 65, 61, 66, 63, 66, 64, 63, 65, 64, 67, 67, 64, 66, 65, 67, 68, 68, 67, 66, 68, 66, 61, 70, 69, 61, 71, 69, 70, 73, 72, 74, 74, 72, 75, 72, 76, 75, 77, 76, 72, 77, 78, 76, 76, 78, 79, 80, 79, 78, 81, 79, 80, 82, 81, 80, 83, 81, 82, 82, 84, 83, 83, 84, 85, 84, 86, 85, 85, 86, 87, 86, 88, 87, 87, 88, 89, 91, 90, 92, 92, 90, 93, 90, 94, 93, 93, 94, 95, 96, 95, 94, 97, 95, 96, 99, 98, 100, 100, 98, 101, 98, 102, 101, 101, 102, 103, 104, 103, 102, 105, 103, 104, 107, 106, 108, 108, 106, 109, 106, 110, 109, 109, 110, 111, 112, 111, 110, 113, 111, 112, 115, 114, 116, 116, 114, 117, 114, 118, 117, 117, 118, 119, 120, 119, 118, 121, 119, 120, 123, 122, 124, 124, 122, 125]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.00852655), (0, -0.99996364, 0.00852655), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-0.99996793, 0.00090847147, 0.0079542585), (0, -0.99996364, 0.008526588), (-0.99997246, 0.0008766487, 0.007379305), (0, -0.99996364, 0.00852655), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0.07836796, 0, -0.99692446), (0, -1, 0), (0, 0.07836796, -0.99692446), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 0.9999685, -0.007943587), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0.9999685, -0.007943257), (-0.99997246, 0.0008766487, 0.007379305), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, -0.07836796, -0.99692446), (0.07836796, 0, -0.99692446), (0, 0, -1), (0, 0, -1), (0, 0.07836796, -0.99692446), (0, 0, -1), (0, 0, -1), (0, 0.07836796, -0.99692446), (0, 0.07836796, -0.99692446), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, 0.9999685, -0.007943587), (0, -0.99996364, 0.00852655), (0, 0.9999685, -0.007943257), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -0.99996364, 0.00852655), (0, 0, -1), (0, 0, -1), (0, -0.99996364, 0.00852655), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.008526588), (0, 0, 1), (0, 0, 1), (0, 0.9999685, -0.007943257), (0, 0, -1), (0, 0, -1), (0, -0.99996364, 0.00852655), (0, 0.9999685, -0.007943587), (0, -0.99996364, 0.008526588), (0, 0, 1), (0, 0, 1), (-0.99997246, 0.0008766487, 0.007379305), (0, 0, -1), (0, 0, -1), (0, 0.9999685, -0.007943257), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0.9999685, -0.007943587), (-0.007174998, -0.007141998, 0.99994874), (0, 0, 1), (0, -0.99996364, 0.00852655), (0, 0, -1), (0, 0, -1), (-0.99997246, 0.0008766487, 0.007379305), (0, -0.99996364, 0.008526588), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0, 1), (-0.007174998, -0.007141998, 0.99994874), (0, 0.07836796, -0.99692446), (0, -1, 0), (0, -1, 0), (0, 0.07836796, -0.99692446)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.059417114), (-0.049999997, -0.050040245, 0.059417114), (-0.08543544, -0.08531528, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (-0.085355334, -0.08539558, 0.049999997), (0.085355334, -0.08539558, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (-0.049999997, -0.050040245, -0.049999997), (0.049999997, -0.050040245, -0.049999997), (-0.049999997, -0.050040245, -0.14999999), (0.049999997, -0.050040245, -0.14999999), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.059417114), (-0.049999997, 0.049959753, 0.060131416), (-0.08527466, 0.08539558, 0.060131416), (-0.08543544, -0.08531528, 0.059417114), (-0.085355334, 0.08531509, 0.049999997), (-0.085355334, -0.08539558, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (-0.049999997, 0.049959753, -0.049999997), (-0.049999997, -0.050040245, -0.049999997), (-0.049999997, 0.049959753, -0.14999999), (-0.049999997, -0.050040245, -0.14999999), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (-0.04479885, 0.044758607, -0.24959114), (-0.049999997, -0.050040245, -0.25), (-0.04479885, -0.044839095, -0.24959114), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.060131416), (0.049999997, 0.049959753, 0.060131416), (0.08527466, 0.08539558, 0.060131416), (-0.08527466, 0.08539558, 0.060131416), (0.085355334, 0.08531509, 0.049999997), (-0.085355334, 0.08531509, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (0.049999997, 0.049959753, -0.049999997), (-0.049999997, 0.049959753, -0.049999997), (0.049999997, 0.049959753, -0.14999999), (-0.049999997, 0.049959753, -0.14999999), (0.049999997, 0.049959753, -0.25), (-0.049999997, 0.049959753, -0.25), (0.04479885, 0.044758607, -0.24959114), (-0.04479885, 0.044758607, -0.24959114), (0.04479885, 0.044758607, -0.23484565), (-0.04479885, 0.044758607, -0.23484565), (-0.04479885, -0.044839095, -0.24959114), (0.04479885, -0.044839095, -0.23484565), (-0.04479885, -0.044839095, -0.23484565), (0.04479885, -0.044839095, -0.24959114), (0.04479885, -0.044839095, -0.24959114), (0.049999997, 0.049959753, -0.25), (0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.060131416), (0.049999997, -0.050040245, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (0.08527466, 0.08539558, 0.060131416), (0.085355334, -0.08539558, 0.049999997), (0.085355334, 0.08531509, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (0.049999997, -0.050040245, -0.049999997), (0.049999997, 0.049959753, -0.049999997), (0.049999997, -0.050040245, -0.14999999), (0.049999997, 0.049959753, -0.14999999), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25), (0.085355334, -0.08539558, -0.15056522), (0.049999997, -0.050040245, -0.15056522), (-0.049999997, -0.050040245, -0.15056522), (-0.085355334, -0.08539558, -0.15056522), (0.08543544, -0.08531528, -0.1411481), (-0.08543544, -0.08531528, -0.1411481), (0.049999997, -0.050040245, -0.1411481), (-0.049999997, -0.050040245, -0.1411481), (0.085355334, 0.08531509, -0.15056522), (0.049999997, 0.049959753, -0.15056522), (0.049999997, -0.050040245, -0.15056522), (0.085355334, -0.08539558, -0.15056522), (0.08527466, 0.08539558, -0.14043385), (0.08543544, -0.08531528, -0.1411481), (0.049999997, 0.049959753, -0.14043385), (0.049999997, -0.050040245, -0.1411481), (-0.085355334, 0.08531509, -0.15056522), (-0.049999997, 0.049959753, -0.15056522), (0.049999997, 0.049959753, -0.15056522), (0.085355334, 0.08531509, -0.15056522), (-0.08527466, 0.08539558, -0.14043385), (0.08527466, 0.08539558, -0.14043385), (-0.049999997, 0.049959753, -0.14043385), (0.049999997, 0.049959753, -0.14043385), (-0.085355334, -0.08539558, -0.15056522), (-0.049999997, -0.050040245, -0.15056522), (-0.049999997, 0.049959753, -0.15056522), (-0.085355334, 0.08531509, -0.15056522), (-0.08543544, -0.08531528, -0.1411481), (-0.08527466, 0.08539558, -0.14043385), (-0.049999997, -0.050040245, -0.1411481), (-0.049999997, 0.049959753, -0.14043385), (-0.04479885, -0.044839095, -0.24959114), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (0.04479885, -0.044839095, -0.24959114)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.381166), (1, 0.381166), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.379737), (1, 0.379737), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 1), (0, 1), (1, 0), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.379737), (1, 0.379737), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 0), (0, 0), (1, 0), (0, 0), (0, 0), (0, 1), (1, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.381166), (1, 0.381166), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.381166), (1, 0.381166), (0, 0.381166), (1, 0.381166), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.379737), (1, 0.381166), (0, 0.379737), (1, 0.381166), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.379737), (1, 0.379737), (0, 0.379737), (1, 0.379737), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.381166), (1, 0.379737), (0, 0.381166), (1, 0.379737), (1, 0), (1, 1), (0, 1), (0, 0)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0.10592148, 0.0084676435, 0.99433845, -1), (0, 1, 0, -1), (0, 0.0085144015, 0.99996376, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0.054782208, 0.998489, 0.0043064137, 1), (0, 1, 0, 1), (0.054932646, 0.99541926, 0.07824964, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.007981067, 0.113470644, 0.99350935, -1), (1, 0, 0, -1), (0.0074112844, 0.1179655, 0.99299, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (0, -0.99692446, -0.07836797, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0.10592148, -0.0084676435, -0.99433845, -1), (0.11365506, -0.007873522, -0.99348915, -1), (0, -0.008514402, -0.99996376, -1), (0, -0.007939033, -0.9999685, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -0.007939035, -0.9999685, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -0.008514402, -0.99996376, -1), (0.113657996, -0.007873725, -0.9934888, -1), (0.10592402, -0.0084678475, -0.9943381, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.0074112844, 0.1179655, 0.99299, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.007981067, 0.11347066, 0.99350935, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0.0085144015, 0.99996376, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0.10592403, 0.008467848, 0.9943381, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.28017405191065, 2.807499885559082, -21.524312285445205, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh399"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.17262622840212, 1.1149371934690464, -20.647045714963383, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh400"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.17262622840212, 1.1149371934690464, -22.386717052881977, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh401"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 1.1149371934690464, -20.647083868490995, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh402"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005000002, -0.099999994), (0.005, 0.005000002, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005000002, 0.099999994), (0.005, 0.005000002, 0.099999994), (0.005, -0.005000002, 0.099999994), (-0.005, -0.005000002, 0.099999994), (-0.005, 0.005000002, -0.099999994), (-0.005, -0.005000002, -0.099999994), (0.005, -0.005000002, -0.099999994), (0.005, 0.005000002, -0.099999994), (-0.005, -0.005000002, 0.059999995), (-0.005, -0.005000002, 0.099999994), (0.005, -0.005000002, 0.099999994), (0.005, -0.005000002, 0.059999995), (-0.005, -0.005000002, 0.019999998), (0.005, -0.005000002, 0.019999998), (-0.005, -0.005000002, -0.019999998), (0.005, -0.005000002, -0.019999998), (-0.005, -0.005000002, -0.06), (0.005, -0.005000002, -0.06), (-0.005, -0.005000002, -0.099999994), (0.005, -0.005000002, -0.099999994), (-0.005, 0.005000002, 0.059999995), (-0.005, 0.005000002, 0.099999994), (-0.005, -0.005000002, 0.099999994), (-0.005, -0.005000002, 0.059999995), (-0.005, 0.005000002, 0.019999998), (-0.005, -0.005000002, 0.019999998), (-0.005, 0.005000002, -0.019999998), (-0.005, -0.005000002, -0.019999998), (-0.005, 0.005000002, -0.06), (-0.005, -0.005000002, -0.06), (-0.005, 0.005000002, -0.099999994), (-0.005, -0.005000002, -0.099999994), (0.005, 0.005000002, 0.059999995), (0.005, 0.005000002, 0.099999994), (-0.005, 0.005000002, 0.099999994), (-0.005, 0.005000002, 0.059999995), (0.005, 0.005000002, 0.019999998), (-0.005, 0.005000002, 0.019999998), (0.005, 0.005000002, -0.019999998), (-0.005, 0.005000002, -0.019999998), (0.005, 0.005000002, -0.06), (-0.005, 0.005000002, -0.06), (0.005, 0.005000002, -0.099999994), (-0.005, 0.005000002, -0.099999994), (0.005, -0.005000002, 0.059999995), (0.005, -0.005000002, 0.099999994), (0.005, 0.005000002, 0.099999994), (0.005, 0.005000002, 0.059999995), (0.005, -0.005000002, 0.019999998), (0.005, 0.005000002, 0.019999998), (0.005, -0.005000002, -0.019999998), (0.005, 0.005000002, -0.019999998), (0.005, -0.005000002, -0.06), (0.005, 0.005000002, -0.06), (0.005, -0.005000002, -0.099999994), (0.005, 0.005000002, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 1.1149371934690464, -22.389598313576812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh403"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 1.1149371934690464, -22.02965458728511, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh404"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 1.1149374444790965, -21.022090707887912, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh405"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.1618020056826, 1.1149374444790965, -21.022090707887912, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh406"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.1618020056826, 1.1149371934690464, -22.02965458728511, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh407"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.831795134135405, 1.1149374444790965, -22.427004918949734, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh408"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.839359180872634, 1.1149371934690464, -22.427004918949734, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh409"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.831795134135405, 1.1149374444790965, -20.66164395745585, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh410"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.839359180872634, 1.1149371934690464, -20.66164395745585, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh411"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.17262622840212, 3.3691900948208513, -20.647045714963383, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh412"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.17262622840212, 3.3691900948208513, -22.386717052881977, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh413"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 3.3691900948208513, -20.647083868490995, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh414"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005000002, -0.10000001), (0.005, 0.005000002, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005000002, 0.10000001), (0.005, 0.005000002, 0.10000001), (0.005, -0.005000002, 0.10000001), (-0.005, -0.005000002, 0.10000001), (-0.005, 0.005000002, -0.10000001), (-0.005, -0.005000002, -0.10000001), (0.005, -0.005000002, -0.10000001), (0.005, 0.005000002, -0.10000001), (-0.005, -0.005000002, 0.06000001), (-0.005, -0.005000002, 0.10000001), (0.005, -0.005000002, 0.10000001), (0.005, -0.005000002, 0.06000001), (-0.005, -0.005000002, 0.020000009), (0.005, -0.005000002, 0.020000009), (-0.005, -0.005000002, -0.020000009), (0.005, -0.005000002, -0.020000009), (-0.005, -0.005000002, -0.06000001), (0.005, -0.005000002, -0.06000001), (-0.005, -0.005000002, -0.10000001), (0.005, -0.005000002, -0.10000001), (-0.005, 0.005000002, 0.06000001), (-0.005, 0.005000002, 0.10000001), (-0.005, -0.005000002, 0.10000001), (-0.005, -0.005000002, 0.06000001), (-0.005, 0.005000002, 0.020000009), (-0.005, -0.005000002, 0.020000009), (-0.005, 0.005000002, -0.020000009), (-0.005, -0.005000002, -0.020000009), (-0.005, 0.005000002, -0.06000001), (-0.005, -0.005000002, -0.06000001), (-0.005, 0.005000002, -0.10000001), (-0.005, -0.005000002, -0.10000001), (0.005, 0.005000002, 0.06000001), (0.005, 0.005000002, 0.10000001), (-0.005, 0.005000002, 0.10000001), (-0.005, 0.005000002, 0.06000001), (0.005, 0.005000002, 0.020000009), (-0.005, 0.005000002, 0.020000009), (0.005, 0.005000002, -0.020000009), (-0.005, 0.005000002, -0.020000009), (0.005, 0.005000002, -0.06000001), (-0.005, 0.005000002, -0.06000001), (0.005, 0.005000002, -0.10000001), (-0.005, 0.005000002, -0.10000001), (0.005, -0.005000002, 0.06000001), (0.005, -0.005000002, 0.10000001), (0.005, 0.005000002, 0.10000001), (0.005, 0.005000002, 0.06000001), (0.005, -0.005000002, 0.020000009), (0.005, 0.005000002, 0.020000009), (0.005, -0.005000002, -0.020000009), (0.005, 0.005000002, -0.020000009), (0.005, -0.005000002, -0.06000001), (0.005, 0.005000002, -0.06000001), (0.005, -0.005000002, -0.10000001), (0.005, 0.005000002, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 3.3691900948208513, -22.389598313576812, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh415"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 3.3691900948208513, -22.02965458728511, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh416"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.41295039353247, 3.3691900948208513, -21.022090707887912, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh417"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.1618020056826, 3.3691900948208513, -21.022090707887912, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh418"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (56.1618020056826, 3.3691900948208513, -22.02965458728511, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh419"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.831795134135405, 3.3691900948208513, -22.427004918949734, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh420"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.839359180872634, 3.3691900948208513, -22.427004918949734, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh421"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (54.831795134135405, 3.3691900948208513, -20.66164395745585, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh422"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.839359180872634, 3.3691900948208513, -20.66164395745585, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh423"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.08543544, -0.08539558, -0.25), (0.08543544, 0.08539558, 0.25)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 13, 12, 8, 13, 14, 12, 12, 14, 15, 16, 15, 14, 17, 15, 16, 18, 17, 16, 19, 17, 18, 18, 20, 19, 19, 20, 21, 20, 22, 21, 21, 22, 23, 22, 24, 23, 23, 24, 25, 27, 26, 28, 28, 26, 29, 26, 30, 29, 31, 30, 26, 31, 32, 30, 30, 32, 33, 34, 33, 32, 35, 33, 34, 36, 35, 34, 37, 35, 36, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 49, 48, 44, 49, 50, 48, 48, 50, 51, 52, 51, 50, 53, 51, 52, 54, 53, 52, 55, 53, 54, 54, 56, 55, 55, 56, 57, 56, 58, 57, 57, 58, 59, 58, 60, 59, 59, 60, 61, 63, 62, 64, 64, 62, 65, 62, 66, 65, 67, 66, 62, 67, 68, 66, 66, 68, 69, 70, 69, 68, 71, 69, 70, 72, 71, 70, 73, 71, 72, 72, 74, 73, 73, 74, 75, 74, 76, 75, 75, 76, 77, 76, 78, 77, 77, 78, 79, 81, 80, 82, 82, 80, 83, 80, 84, 83, 83, 84, 85, 86, 85, 84, 87, 85, 86, 89, 88, 90, 90, 88, 91, 88, 92, 91, 91, 92, 93, 94, 93, 92, 95, 93, 94, 97, 96, 98, 98, 96, 99, 96, 100, 99, 99, 100, 101, 102, 101, 100, 103, 101, 102, 105, 104, 106, 106, 104, 107, 104, 108, 107, 107, 108, 109, 110, 109, 108, 111, 109, 110]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.00852655), (0, -0.99996364, 0.00852655), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-0.99996793, 0.00090847147, 0.0079542585), (0, -0.99996364, 0.008526588), (-0.99997246, 0.0008766487, 0.007379305), (0, -0.99996364, 0.00852655), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 0.9999685, -0.007943587), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0.9999685, -0.007943257), (-0.99997246, 0.0008766487, 0.007379305), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, 0.9999685, -0.007943587), (0, -0.99996364, 0.00852655), (0, 0.9999685, -0.007943257), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -0.99996364, 0.00852655), (0, 0, -1), (0, 0, -1), (0, -0.99996364, 0.00852655), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.008526588), (0, 0, 1), (0, 0, 1), (0, 0.9999685, -0.007943257), (0, 0, -1), (0, 0, -1), (0, -0.99996364, 0.00852655), (0, 0.9999685, -0.007943587), (0, -0.99996364, 0.008526588), (0, 0, 1), (0, 0, 1), (-0.99997246, 0.0008766487, 0.007379305), (0, 0, -1), (0, 0, -1), (0, 0.9999685, -0.007943257), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0.9999685, -0.007943587), (-0.007174998, -0.007141998, 0.99994874), (0, 0, 1), (0, -0.99996364, 0.00852655), (0, 0, -1), (0, 0, -1), (-0.99997246, 0.0008766487, 0.007379305), (0, -0.99996364, 0.008526588), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0, 1), (-0.007174998, -0.007141998, 0.99994874)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.059417114), (-0.049999997, -0.050040245, 0.059417114), (-0.08543544, -0.08531528, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (-0.085355334, -0.08539558, 0.049999997), (0.085355334, -0.08539558, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (-0.049999997, -0.050040245, -0.049999997), (0.049999997, -0.050040245, -0.049999997), (-0.049999997, -0.050040245, -0.14999999), (0.049999997, -0.050040245, -0.14999999), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.059417114), (-0.049999997, 0.049959753, 0.060131416), (-0.08527466, 0.08539558, 0.060131416), (-0.08543544, -0.08531528, 0.059417114), (-0.085355334, 0.08531509, 0.049999997), (-0.085355334, -0.08539558, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (-0.049999997, 0.049959753, -0.049999997), (-0.049999997, -0.050040245, -0.049999997), (-0.049999997, 0.049959753, -0.14999999), (-0.049999997, -0.050040245, -0.14999999), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.060131416), (0.049999997, 0.049959753, 0.060131416), (0.08527466, 0.08539558, 0.060131416), (-0.08527466, 0.08539558, 0.060131416), (0.085355334, 0.08531509, 0.049999997), (-0.085355334, 0.08531509, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (0.049999997, 0.049959753, -0.049999997), (-0.049999997, 0.049959753, -0.049999997), (0.049999997, 0.049959753, -0.14999999), (-0.049999997, 0.049959753, -0.14999999), (0.049999997, 0.049959753, -0.25), (-0.049999997, 0.049959753, -0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.060131416), (0.049999997, -0.050040245, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (0.08527466, 0.08539558, 0.060131416), (0.085355334, -0.08539558, 0.049999997), (0.085355334, 0.08531509, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (0.049999997, -0.050040245, -0.049999997), (0.049999997, 0.049959753, -0.049999997), (0.049999997, -0.050040245, -0.14999999), (0.049999997, 0.049959753, -0.14999999), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25), (0.085355334, -0.08539558, -0.15056522), (0.049999997, -0.050040245, -0.15056522), (-0.049999997, -0.050040245, -0.15056522), (-0.085355334, -0.08539558, -0.15056522), (0.08543544, -0.08531528, -0.1411481), (-0.08543544, -0.08531528, -0.1411481), (0.049999997, -0.050040245, -0.1411481), (-0.049999997, -0.050040245, -0.1411481), (0.085355334, 0.08531509, -0.15056522), (0.049999997, 0.049959753, -0.15056522), (0.049999997, -0.050040245, -0.15056522), (0.085355334, -0.08539558, -0.15056522), (0.08527466, 0.08539558, -0.14043385), (0.08543544, -0.08531528, -0.1411481), (0.049999997, 0.049959753, -0.14043385), (0.049999997, -0.050040245, -0.1411481), (-0.085355334, 0.08531509, -0.15056522), (-0.049999997, 0.049959753, -0.15056522), (0.049999997, 0.049959753, -0.15056522), (0.085355334, 0.08531509, -0.15056522), (-0.08527466, 0.08539558, -0.14043385), (0.08527466, 0.08539558, -0.14043385), (-0.049999997, 0.049959753, -0.14043385), (0.049999997, 0.049959753, -0.14043385), (-0.085355334, -0.08539558, -0.15056522), (-0.049999997, -0.050040245, -0.15056522), (-0.049999997, 0.049959753, -0.15056522), (-0.085355334, 0.08531509, -0.15056522), (-0.08543544, -0.08531528, -0.1411481), (-0.08527466, 0.08539558, -0.14043385), (-0.049999997, -0.050040245, -0.1411481), (-0.049999997, 0.049959753, -0.14043385)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.381166), (1, 0.381166), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.379737), (1, 0.379737), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.379737), (1, 0.379737), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.381166), (1, 0.381166), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.381166), (1, 0.381166), (0, 0.381166), (1, 0.381166), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.379737), (1, 0.381166), (0, 0.379737), (1, 0.381166), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.379737), (1, 0.379737), (0, 0.379737), (1, 0.379737), (0, 0.4), (0, 0.4), (1, 0.4), (1, 0.4), (0, 0.381166), (1, 0.379737), (0, 0.381166), (1, 0.379737)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0.10592148, 0.0084676435, 0.99433845, -1), (0, 1, 0, -1), (0, 0.0085144015, 0.99996376, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.007981067, 0.113470644, 0.99350935, -1), (1, 0, 0, -1), (0.0074112844, 0.1179655, 0.99299, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0.10592148, -0.0084676435, -0.99433845, -1), (0.11365506, -0.007873522, -0.99348915, -1), (0, -0.008514402, -0.99996376, -1), (0, -0.007939033, -0.9999685, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -0.007939035, -0.9999685, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -0.008514402, -0.99996376, -1), (0.113657996, -0.007873725, -0.9934888, -1), (0.10592402, -0.0084678475, -0.9943381, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.0074112844, 0.1179655, 0.99299, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.007981067, 0.11347066, 0.99350935, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0.0085144015, 0.99996376, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0.10592403, 0.008467848, 0.9943381, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.22706190387294, 2.807499885559082, -18.884091354159636, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh424"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.11951441504448, 1.1149371934690464, -18.00682461633778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh425"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.11951441504448, 1.1149371934690464, -19.74649628893644, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh426"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 1.1149371934690464, -18.006862769865393, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh427"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 1.1149371934690464, -19.74937721495121, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh428"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 1.1149371934690464, -19.389433488659506, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh429"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 1.1149374444790965, -18.381869776602343, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh430"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.10868985764489, 1.1149374444790965, -18.381869776602343, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh431"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.10868985764489, 1.1149371934690464, -19.389433488659506, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh432"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.77868298609769, 1.1149374444790965, -19.786783736654115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh433"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.78624703283492, 1.1149371934690464, -19.786783736654115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh434"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.77868298609769, 1.1149374444790965, -18.021423026170282, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh435"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.78624703283492, 1.1149371934690464, -18.021423026170282, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh436"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.11951441504448, 3.3691900948208513, -18.00682461633778, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh437"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.11951441504448, 3.3691900948208513, -19.74649628893644, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh438"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 3.3691900948208513, -18.006862769865393, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh439"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 3.3691900948208513, -19.74937721495121, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh440"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 3.3691900948208513, -19.389433488659506, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh441"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.35983824549476, 3.3691900948208513, -18.381869776602343, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh442"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.10868985764489, 3.3691900948208513, -18.381869776602343, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh443"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (46.10868985764489, 3.3691900948208513, -19.389433488659506, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh444"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.77868298609769, 3.3691900948208513, -19.786783736654115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh445"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.78624703283492, 3.3691900948208513, -19.786783736654115, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh446"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.02), (0.005, 0.005, 0.02), (0.005, -0.005, -0.02), (0.005, 0.005, -0.02), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.02), (0.005, -0.005, 0.02), (-0.005, -0.005, -0.02), (0.005, -0.005, -0.02), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.02), (-0.005, -0.005, 0.02), (-0.005, 0.005, -0.02), (-0.005, -0.005, -0.02), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.02), (-0.005, 0.005, 0.02), (0.005, 0.005, -0.02), (-0.005, 0.005, -0.02), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.77868298609769, 3.3691900948208513, -18.021423026170282, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh447"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.10000001)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, -0.005, 0.10000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001), (0.005, -0.005, 0.06000001), (0.005, -0.005, 0.10000001), (0.005, 0.005, 0.10000001), (0.005, 0.005, 0.06000001), (0.005, -0.005, 0.020000009), (0.005, 0.005, 0.020000009), (0.005, -0.005, -0.020000009), (0.005, 0.005, -0.020000009), (0.005, -0.005, -0.06000001), (0.005, 0.005, -0.06000001), (0.005, -0.005, -0.10000001), (0.005, 0.005, -0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.10000001), (0.005, -0.005, 0.10000001), (0.005, -0.005, 0.06000001), (-0.005, -0.005, 0.020000009), (0.005, -0.005, 0.020000009), (-0.005, -0.005, -0.020000009), (0.005, -0.005, -0.020000009), (-0.005, -0.005, -0.06000001), (0.005, -0.005, -0.06000001), (-0.005, -0.005, -0.10000001), (0.005, -0.005, -0.10000001), (-0.005, 0.005, 0.06000001), (-0.005, 0.005, 0.10000001), (-0.005, -0.005, 0.10000001), (-0.005, -0.005, 0.06000001), (-0.005, 0.005, 0.020000009), (-0.005, -0.005, 0.020000009), (-0.005, 0.005, -0.020000009), (-0.005, -0.005, -0.020000009), (-0.005, 0.005, -0.06000001), (-0.005, -0.005, -0.06000001), (-0.005, 0.005, -0.10000001), (-0.005, -0.005, -0.10000001), (0.005, 0.005, 0.06000001), (0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.10000001), (-0.005, 0.005, 0.06000001), (0.005, 0.005, 0.020000009), (-0.005, 0.005, 0.020000009), (0.005, 0.005, -0.020000009), (-0.005, 0.005, -0.020000009), (0.005, 0.005, -0.06000001), (-0.005, 0.005, -0.06000001), (0.005, 0.005, -0.10000001), (-0.005, 0.005, -0.10000001)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (45.78624703283492, 3.3691900948208513, -18.021423026170282, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh448"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.069272764, -0.07354564, -0.25993526), (0.069272764, 0.07354564, 0.25993526)]
        int[] faceVertexCounts
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 7, 4, 5, 7, 8, 4, 4, 8, 9, 10, 9, 8, 11, 9, 10, 13, 12, 14, 15, 12, 13, 15, 16, 12, 12, 16, 17, 18, 17, 16, 19, 17, 18, 21, 20, 18, 22, 20, 21, 21, 23, 22, 21, 24, 23, 25, 24, 21, 22, 23, 26, 24, 27, 23, 23, 27, 28, 23, 28, 26, 24, 29, 27, 29, 28, 27, 30, 29, 24, 25, 30, 24, 31, 28, 29, 26, 28, 31, 30, 31, 29, 26, 31, 30, 32, 26, 30, 22, 26, 32, 32, 30, 25, 32, 33, 22, 22, 33, 34, 25, 35, 32, 32, 35, 36, 38, 37, 25, 25, 37, 39, 37, 40, 39, 39, 40, 41, 42, 41, 40, 43, 41, 42, 43, 42, 44, 44, 42, 45, 47, 46, 48, 49, 46, 47, 49, 50, 46, 46, 50, 51, 52, 51, 50, 53, 51, 52, 55, 54, 56, 56, 54, 57, 58, 57, 54, 59, 57, 58, 61, 60, 62, 62, 60, 63, 64, 63, 60, 65, 63, 64, 67, 66, 62, 68, 66, 67, 70, 69, 71, 71, 69, 72, 73, 72, 69, 74, 72, 73, 76, 75, 77, 77, 75, 78, 80, 79, 81, 82, 79, 80, 84, 83, 82, 82, 83, 85, 83, 86, 85, 85, 86, 87, 88, 87, 86, 89, 87, 88, 91, 90, 92, 92, 90, 93, 94, 93, 90, 95, 93, 94, 97, 96, 98, 98, 96, 99, 100, 99, 96, 101, 99, 100, 103, 102, 98, 104, 102, 103, 106, 105, 107, 107, 105, 108, 109, 108, 105, 110, 108, 109, 112, 111, 113, 113, 111, 114, 116, 115, 117, 118, 115, 116, 120, 119, 118, 118, 119, 121, 119, 122, 121, 121, 122, 123, 124, 123, 122, 125, 123, 124, 127, 126, 128, 128, 126, 129, 130, 129, 126, 131, 129, 130, 133, 132, 134, 134, 132, 135, 136, 135, 132, 137, 135, 136, 139, 138, 134, 140, 138, 139, 142, 141, 143, 143, 141, 144, 145, 144, 141, 146, 144, 145, 148, 147, 149, 149, 147, 150, 152, 151, 153, 154, 151, 152, 156, 155, 154, 154, 155, 157, 155, 158, 157, 157, 158, 159, 160, 159, 158, 161, 159, 160, 163, 162, 164, 164, 162, 165, 166, 165, 162, 167, 165, 166, 169, 168, 170, 170, 168, 171, 172, 171, 168, 173, 171, 172, 175, 174, 170, 176, 174, 175, 178, 177, 179, 179, 177, 180, 181, 180, 177, 182, 180, 181, 184, 183, 185, 185, 183, 186, 188, 187, 189, 190, 187, 188, 192, 191, 190, 190, 191, 193, 191, 194, 193, 193, 194, 195, 196, 195, 194, 197, 195, 196, 199, 198, 200, 200, 198, 201, 202, 201, 198, 203, 201, 202, 205, 204, 206, 206, 204, 207, 208, 207, 204, 209, 207, 208, 211, 210, 206, 212, 210, 211, 214, 213, 215, 215, 213, 216, 217, 216, 213, 218, 216, 217, 220, 219, 221, 221, 219, 222, 224, 223, 225, 226, 223, 224, 228, 227, 226, 226, 227, 229, 227, 230, 229, 229, 230, 231, 232, 231, 230, 233, 231, 232, 235, 234, 236, 236, 234, 237, 238, 237, 234, 239, 237, 238, 241, 240, 242, 242, 240, 243, 244, 243, 240, 245, 243, 244, 247, 246, 242, 248, 246, 247, 250, 249, 251, 251, 249, 252, 253, 252, 249, 254, 252, 253, 256, 255, 257, 257, 255, 258, 260, 259, 261, 262, 259, 260, 264, 263, 262, 262, 263, 265, 263, 266, 265, 265, 266, 267, 268, 267, 266, 269, 267, 268, 271, 270, 272, 272, 270, 273, 274, 273, 270, 275, 273, 274, 277, 276, 278, 278, 276, 279, 280, 279, 276, 281, 279, 280, 283, 282, 278, 284, 282, 283, 286, 285, 287, 287, 285, 288, 289, 288, 285, 290, 288, 289, 292, 291, 293, 293, 291, 294, 296, 295, 297, 298, 295, 296, 300, 299, 298, 298, 299, 301, 299, 302, 301, 301, 302, 303, 304, 303, 302, 305, 303, 304, 307, 306, 308, 308, 306, 309, 310, 309, 306, 311, 309, 310, 313, 312, 314, 314, 312, 315, 316, 315, 312, 317, 315, 316, 319, 318, 314, 320, 318, 319, 322, 321, 323, 323, 321, 324, 325, 324, 321, 326, 324, 325, 328, 327, 329, 329, 327, 330, 332, 331, 333, 334, 331, 332, 336, 335, 334, 334, 335, 337, 335, 338, 337, 337, 338, 339, 340, 339, 338, 341, 339, 340, 343, 342, 344, 344, 342, 345, 346, 345, 342, 347, 345, 346, 349, 348, 350, 350, 348, 351, 352, 351, 348, 353, 351, 352, 355, 354, 350, 356, 354, 355, 358, 357, 359, 359, 357, 360, 361, 360, 357, 362, 360, 361, 364, 363, 365, 365, 363, 366, 368, 367, 369, 370, 367, 368, 372, 371, 370, 370, 371, 373, 371, 374, 373, 373, 374, 375, 376, 375, 374, 377, 375, 376, 379, 378, 380, 380, 378, 381, 382, 381, 378, 383, 381, 382, 385, 384, 386, 386, 384, 387, 388, 387, 384, 389, 387, 388, 391, 390, 386, 392, 390, 391, 394, 393, 395, 395, 393, 396, 397, 396, 393, 398, 396, 397, 400, 399, 401, 401, 399, 402, 404, 403, 405, 406, 403, 404, 408, 407, 406, 406, 407, 409, 407, 410, 409, 409, 410, 411, 412, 411, 410, 413, 411, 412, 415, 414, 416, 416, 414, 417, 418, 417, 414, 419, 417, 418, 421, 420, 422, 422, 420, 423, 424, 423, 420, 425, 423, 424, 427, 426, 422, 428, 426, 427, 430, 429, 431, 431, 429, 432, 433, 432, 429, 434, 432, 433, 436, 435, 437, 437, 435, 438, 440, 439, 441, 442, 439, 440, 444, 443, 442, 442, 443, 445, 443, 446, 445, 445, 446, 447, 448, 447, 446, 449, 447, 448, 451, 450, 452, 452, 450, 453, 454, 453, 450, 455, 453, 454, 457, 456, 458, 458, 456, 459, 460, 459, 456, 461, 459, 460, 463, 462, 458, 464, 462, 463, 466, 465, 467, 467, 465, 468, 469, 468, 465, 470, 468, 469, 472, 471, 473, 473, 471, 474, 476, 475, 477, 478, 475, 476, 480, 479, 478, 478, 479, 481, 479, 482, 481, 481, 482, 483, 484, 483, 482, 485, 483, 484, 487, 486, 488, 488, 486, 489, 490, 489, 486, 491, 489, 490, 493, 492, 494, 494, 492, 495, 496, 495, 492, 497, 495, 496, 499, 498, 494, 500, 498, 499, 502, 501, 503, 503, 501, 504, 505, 504, 501, 506, 504, 505, 508, 507, 509, 509, 507, 510, 512, 511, 513, 514, 511, 512, 516, 515, 514, 514, 515, 517, 515, 518, 517, 517, 518, 519, 520, 519, 518, 521, 519, 520, 523, 522, 524, 524, 522, 525, 526, 525, 522, 527, 525, 526, 529, 528, 530, 530, 528, 531, 532, 531, 528, 533, 531, 532, 535, 534, 530, 536, 534, 535, 538, 537, 539, 539, 537, 540, 541, 540, 537, 542, 540, 541, 544, 543, 545, 545, 543, 546, 548, 547, 549, 550, 547, 548, 552, 551, 550, 550, 551, 553, 551, 554, 553, 553, 554, 555, 556, 555, 554, 557, 555, 556, 559, 558, 560, 560, 558, 561, 562, 561, 558, 563, 561, 562, 565, 564, 566, 566, 564, 567, 568, 567, 564, 569, 567, 568, 571, 570, 566, 572, 570, 571, 574, 573, 575, 575, 573, 576, 577, 576, 573, 578, 576, 577, 580, 579, 581, 581, 579, 582, 584, 583, 585, 586, 583, 584, 588, 587, 586, 586, 587, 589, 587, 590, 589, 589, 590, 591, 592, 591, 590, 593, 591, 592, 595, 594, 596, 596, 594, 597, 598, 597, 594, 599, 597, 598, 601, 600, 602, 602, 600, 603, 604, 603, 600, 605, 603, 604, 607, 606, 602, 608, 606, 607, 610, 609, 611, 611, 609, 612, 613, 612, 609, 614, 612, 613, 616, 615, 617, 617, 615, 618, 620, 619, 621, 622, 619, 620, 624, 623, 622, 622, 623, 625, 623, 626, 625, 625, 626, 627, 628, 627, 626, 629, 627, 628, 631, 630, 632, 632, 630, 633, 634, 633, 630, 635, 633, 634, 637, 636, 638, 638, 636, 639, 640, 639, 636, 641, 639, 640, 643, 642, 638, 644, 642, 643, 646, 645, 647, 647, 645, 648, 649, 648, 645, 650, 648, 649, 652, 651, 653, 653, 651, 654, 656, 655, 657, 658, 655, 656, 660, 659, 658, 658, 659, 661, 659, 662, 661, 661, 662, 663, 664, 663, 662, 665, 663, 664, 667, 666, 668, 668, 666, 669, 670, 669, 666, 671, 669, 670, 673, 672, 674, 674, 672, 675, 676, 675, 672, 677, 675, 676, 679, 678, 674, 680, 678, 679, 682, 681, 683, 683, 681, 684, 685, 684, 681, 686, 684, 685, 688, 687, 689, 689, 687, 690, 692, 691, 693, 694, 691, 692, 696, 695, 694, 694, 695, 697, 695, 698, 697, 697, 698, 699, 700, 699, 698, 701, 699, 700, 703, 702, 704, 704, 702, 705, 706, 705, 702, 707, 705, 706, 709, 708, 710, 710, 708, 711, 712, 711, 708, 713, 711, 712, 715, 714, 710, 716, 714, 715, 718, 717, 719, 719, 717, 720, 721, 720, 717, 722, 720, 721, 724, 723, 725, 725, 723, 726, 728, 727, 729, 730, 727, 728, 732, 731, 730, 730, 731, 733, 731, 734, 733, 733, 734, 735, 736, 735, 734, 737, 735, 736, 739, 738, 740, 740, 738, 741, 742, 741, 738, 743, 741, 742, 745, 744, 746, 746, 744, 747, 748, 747, 744, 749, 747, 748, 751, 750, 746, 752, 750, 751, 754, 753, 755, 755, 753, 756, 758, 757, 759, 759, 757, 760, 757, 761, 762, 762, 761, 763, 764, 763, 761, 765, 763, 764, 767, 766, 768, 768, 766, 769, 766, 770, 769, 769, 770, 771, 772, 771, 770, 773, 771, 772, 775, 774, 776, 776, 774, 777, 778, 777, 774, 779, 777, 778, 781, 780, 782, 782, 780, 783, 784, 783, 780, 785, 783, 784, 787, 786, 782, 788, 786, 787, 790, 789, 791, 791, 789, 792, 794, 793, 795, 795, 793, 796, 793, 797, 798, 798, 797, 799, 800, 799, 797, 801, 799, 800, 803, 802, 804, 804, 802, 805, 802, 806, 805, 805, 806, 807, 808, 807, 806, 809, 807, 808, 811, 810, 812, 812, 810, 813, 814, 813, 810, 815, 813, 814, 817, 816, 818, 818, 816, 819, 820, 819, 816, 821, 819, 820, 823, 822, 818, 824, 822, 823, 826, 825, 827, 827, 825, 828, 830, 829, 831, 831, 829, 832, 829, 833, 834, 834, 833, 835, 836, 835, 833, 837, 835, 836, 839, 838, 840, 840, 838, 841, 838, 842, 841, 841, 842, 843, 844, 843, 842, 845, 843, 844, 847, 846, 848, 848, 846, 849, 850, 849, 846, 851, 849, 850, 853, 852, 854, 854, 852, 855, 856, 855, 852, 857, 855, 856, 859, 858, 854, 860, 858, 859, 862, 861, 863, 863, 861, 864, 866, 865, 867, 867, 865, 868, 865, 869, 870, 870, 869, 871, 872, 871, 869, 873, 871, 872, 875, 874, 876, 876, 874, 877, 874, 878, 877, 877, 878, 879, 880, 879, 878, 881, 879, 880, 883, 882, 884, 884, 882, 885, 886, 885, 882, 887, 885, 886, 889, 888, 890, 890, 888, 891, 892, 891, 888, 893, 891, 892, 895, 894, 890, 896, 894, 895, 898, 897, 899, 899, 897, 900, 902, 901, 903, 903, 901, 904, 901, 905, 906, 906, 905, 907, 908, 907, 905, 909, 907, 908, 911, 910, 912, 912, 910, 913, 910, 914, 913, 913, 914, 915, 916, 915, 914, 917, 915, 916, 919, 918, 920, 920, 918, 921, 922, 921, 918, 923, 921, 922, 925, 924, 926, 926, 924, 927, 928, 927, 924, 929, 927, 928, 931, 930, 926, 932, 930, 931, 934, 933, 935, 935, 933, 936, 938, 937, 939, 939, 937, 940, 937, 941, 942, 942, 941, 943, 944, 943, 941, 945, 943, 944, 947, 946, 948, 948, 946, 949, 946, 950, 949, 949, 950, 951, 952, 951, 950, 953, 951, 952, 955, 954, 956, 956, 954, 957, 958, 957, 954, 959, 957, 958, 961, 960, 962, 962, 960, 963, 964, 963, 960, 965, 963, 964, 967, 966, 962, 968, 966, 967, 970, 969, 971, 971, 969, 972, 974, 973, 975, 975, 973, 976, 973, 977, 978, 978, 977, 979, 980, 979, 977, 981, 979, 980, 983, 982, 984, 984, 982, 985, 982, 986, 985, 985, 986, 987, 988, 987, 986, 989, 987, 988, 991, 990, 992, 992, 990, 993, 994, 993, 990, 995, 993, 994, 997, 996, 998, 998, 996, 999, 1000, 999, 996, 1001, 999, 1000, 1003, 1002, 998, 1004, 1002, 1003, 1006, 1005, 1007, 1007, 1005, 1008, 1010, 1009, 1011, 1011, 1009, 1012, 1009, 1013, 1014, 1014, 1013, 1015, 1016, 1015, 1013, 1017, 1015, 1016, 1019, 1018, 1020, 1020, 1018, 1021, 1018, 1022, 1021, 1021, 1022, 1023, 1024, 1023, 1022, 1025, 1023, 1024, 1027, 1026, 1028, 1028, 1026, 1029, 1030, 1029, 1026, 1031, 1029, 1030, 1033, 1032, 1034, 1034, 1032, 1035, 1036, 1035, 1032, 1037, 1035, 1036, 1039, 1038, 1034, 1040, 1038, 1039, 1042, 1041, 1043, 1043, 1041, 1044, 1046, 1045, 1047, 1047, 1045, 1048, 1045, 1049, 1050, 1050, 1049, 1051, 1052, 1051, 1049, 1053, 1051, 1052, 1055, 1054, 1056, 1056, 1054, 1057, 1054, 1058, 1057, 1057, 1058, 1059, 1060, 1059, 1058, 1061, 1059, 1060, 1063, 1062, 1064, 1064, 1062, 1065, 1066, 1065, 1062, 1067, 1065, 1066, 1069, 1068, 1070, 1070, 1068, 1071, 1072, 1071, 1068, 1073, 1071, 1072, 1075, 1074, 1070, 1076, 1074, 1075, 1078, 1077, 1079, 1079, 1077, 1080, 1082, 1081, 1083, 1083, 1081, 1084, 1081, 1085, 1086, 1086, 1085, 1087, 1088, 1087, 1085, 1089, 1087, 1088, 1091, 1090, 1092, 1092, 1090, 1093, 1090, 1094, 1093, 1093, 1094, 1095, 1096, 1095, 1094, 1097, 1095, 1096, 1099, 1098, 1100, 1100, 1098, 1101, 1102, 1101, 1098, 1103, 1101, 1102, 1105, 1104, 1106, 1106, 1104, 1107, 1108, 1107, 1104, 1109, 1107, 1108, 1111, 1110, 1106, 1112, 1110, 1111, 1114, 1113, 1115, 1115, 1113, 1116, 1118, 1117, 1119, 1119, 1117, 1120, 1117, 1121, 1122, 1122, 1121, 1123, 1124, 1123, 1121, 1125, 1123, 1124, 1127, 1126, 1128, 1128, 1126, 1129, 1126, 1130, 1129, 1129, 1130, 1131, 1132, 1131, 1130, 1133, 1131, 1132, 1135, 1134, 1136, 1136, 1134, 1137, 1138, 1137, 1134, 1139, 1137, 1138, 1141, 1140, 1142, 1142, 1140, 1143, 1144, 1143, 1140, 1145, 1143, 1144, 1147, 1146, 1142, 1148, 1146, 1147, 1150, 1149, 1151, 1151, 1149, 1152, 1154, 1153, 1155, 1155, 1153, 1156, 1153, 1157, 1158, 1158, 1157, 1159, 1160, 1159, 1157, 1161, 1159, 1160, 1163, 1162, 1164, 1164, 1162, 1165, 1162, 1166, 1165, 1165, 1166, 1167, 1168, 1167, 1166, 1169, 1167, 1168, 1171, 1170, 1172, 1172, 1170, 1173, 1174, 1173, 1170, 1175, 1173, 1174, 1177, 1176, 1178, 1178, 1176, 1179, 1180, 1179, 1176, 1181, 1179, 1180, 1183, 1182, 1178, 1184, 1182, 1183, 1186, 1185, 1187, 1187, 1185, 1188, 1190, 1189, 1191, 1191, 1189, 1192, 1189, 1193, 1194, 1194, 1193, 1195, 1196, 1195, 1193, 1197, 1195, 1196, 1199, 1198, 1200, 1200, 1198, 1201, 1198, 1202, 1201, 1201, 1202, 1203, 1204, 1203, 1202, 1205, 1203, 1204, 1207, 1206, 1208, 1208, 1206, 1209, 1210, 1209, 1206, 1211, 1209, 1210, 1213, 1212, 1214, 1214, 1212, 1215, 1216, 1215, 1212, 1217, 1215, 1216, 1219, 1218, 1214, 1220, 1218, 1219, 1222, 1221, 1223, 1223, 1221, 1224, 1226, 1225, 1227, 1227, 1225, 1228, 1225, 1229, 1230, 1230, 1229, 1231, 1232, 1231, 1229, 1233, 1231, 1232, 1235, 1234, 1236, 1236, 1234, 1237, 1234, 1238, 1237, 1237, 1238, 1239, 1240, 1239, 1238, 1241, 1239, 1240, 1243, 1242, 1244, 1244, 1242, 1245, 1246, 1245, 1242, 1247, 1245, 1246, 1249, 1248, 1250, 1250, 1248, 1251, 1252, 1251, 1248, 1253, 1251, 1252, 1255, 1254, 1250, 1256, 1254, 1255, 1258, 1257, 1259, 1259, 1257, 1260, 1262, 1261, 1263, 1263, 1261, 1264, 1261, 1265, 1266, 1266, 1265, 1267, 1268, 1267, 1265, 1269, 1267, 1268, 1271, 1270, 1272, 1272, 1270, 1273, 1270, 1274, 1273, 1273, 1274, 1275, 1276, 1275, 1274, 1277, 1275, 1276, 1279, 1278, 1280, 1280, 1278, 1281, 1282, 1281, 1278, 1283, 1281, 1282, 1285, 1284, 1286, 1286, 1284, 1287, 1288, 1287, 1284, 1289, 1287, 1288, 1291, 1290, 1286, 1292, 1290, 1291, 1294, 1293, 1295, 1295, 1293, 1296, 1298, 1297, 1299, 1299, 1297, 1300, 1297, 1301, 1302, 1302, 1301, 1303, 1304, 1303, 1301, 1305, 1303, 1304, 1307, 1306, 1308, 1308, 1306, 1309, 1306, 1310, 1309, 1309, 1310, 1311, 1312, 1311, 1310, 1313, 1311, 1312, 1315, 1314, 1316, 1316, 1314, 1317, 1318, 1317, 1314, 1319, 1317, 1318, 1321, 1320, 1322, 1322, 1320, 1323, 1324, 1323, 1320, 1325, 1323, 1324, 1327, 1326, 1322, 1328, 1326, 1327, 1330, 1329, 1331, 1331, 1329, 1332, 1334, 1333, 1335, 1335, 1333, 1336, 1333, 1337, 1338, 1338, 1337, 1339, 1340, 1339, 1337, 1341, 1339, 1340, 1343, 1342, 1344, 1344, 1342, 1345, 1342, 1346, 1345, 1345, 1346, 1347, 1348, 1347, 1346, 1349, 1347, 1348, 1351, 1350, 1352, 1352, 1350, 1353, 1354, 1353, 1350, 1355, 1353, 1354, 1357, 1356, 1358, 1358, 1356, 1359, 1360, 1359, 1356, 1361, 1359, 1360, 1363, 1362, 1358, 1364, 1362, 1363, 1366, 1365, 1367, 1367, 1365, 1368, 1370, 1369, 1371, 1371, 1369, 1372, 1369, 1373, 1374, 1374, 1373, 1375, 1376, 1375, 1373, 1377, 1375, 1376, 1379, 1378, 1380, 1380, 1378, 1381, 1378, 1382, 1381, 1381, 1382, 1383, 1384, 1383, 1382, 1385, 1383, 1384, 1387, 1386, 1388, 1388, 1386, 1389, 1390, 1389, 1386, 1391, 1389, 1390, 1393, 1392, 1394, 1394, 1392, 1395, 1396, 1395, 1392, 1397, 1395, 1396, 1399, 1398, 1394, 1400, 1398, 1399, 1402, 1401, 1403, 1403, 1401, 1404, 1406, 1405, 1407, 1407, 1405, 1408, 1405, 1409, 1410, 1410, 1409, 1411, 1412, 1411, 1409, 1413, 1411, 1412, 1415, 1414, 1416, 1416, 1414, 1417, 1414, 1418, 1417, 1417, 1418, 1419, 1420, 1419, 1418, 1421, 1419, 1420, 1423, 1422, 1424, 1424, 1422, 1425, 1426, 1425, 1422, 1427, 1425, 1426, 1429, 1428, 1430, 1430, 1428, 1431, 1432, 1431, 1428, 1433, 1431, 1432, 1435, 1434, 1430, 1436, 1434, 1435, 1438, 1437, 1439, 1439, 1437, 1440, 1442, 1441, 1443, 1443, 1441, 1444, 1441, 1445, 1446, 1446, 1445, 1447, 1448, 1447, 1445, 1449, 1447, 1448, 1451, 1450, 1452, 1452, 1450, 1453, 1450, 1454, 1453, 1453, 1454, 1455, 1456, 1455, 1454, 1457, 1455, 1456, 1459, 1458, 1460, 1460, 1458, 1461, 1462, 1461, 1458, 1463, 1461, 1462, 1465, 1464, 1466, 1466, 1464, 1467, 1468, 1467, 1464, 1469, 1467, 1468, 1471, 1470, 1466, 1472, 1470, 1471, 1474, 1473, 1475, 1475, 1473, 1476, 1478, 1477, 1479, 1479, 1477, 1480, 1477, 1481, 1482, 1482, 1481, 1483, 1484, 1483, 1481, 1485, 1483, 1484, 1487, 1486, 1488, 1488, 1486, 1489, 1486, 1490, 1489, 1489, 1490, 1491, 1492, 1491, 1490, 1493, 1491, 1492, 1495, 1494, 1496, 1496, 1494, 1497, 1498, 1497, 1494, 1499, 1497, 1498, 1501, 1500, 1502, 1502, 1500, 1503, 1504, 1503, 1500, 1505, 1503, 1504, 1507, 1506, 1502, 1508, 1506, 1507, 1510, 1509, 1511, 1511, 1509, 1512, 1514, 1513, 1515, 1515, 1513, 1516, 1513, 1517, 1518, 1518, 1517, 1519, 1520, 1519, 1517, 1521, 1519, 1520, 1523, 1522, 1524, 1524, 1522, 1525, 1522, 1526, 1525, 1525, 1526, 1527, 1528, 1527, 1526, 1529, 1527, 1528, 1531, 1530, 1532, 1532, 1530, 1533, 1534, 1533, 1530, 1535, 1533, 1534, 1537, 1536, 1538, 1538, 1536, 1539, 1540, 1539, 1536, 1541, 1539, 1540, 1543, 1542, 1544, 1544, 1542, 1545, 1546, 1545, 1542, 1547, 1545, 1546, 1549, 1548, 1550, 1550, 1548, 1551, 1553, 1552, 1554, 1555, 1552, 1553, 1557, 1556, 1555, 1555, 1556, 1558, 1556, 1559, 1558, 1558, 1559, 1560, 1561, 1560, 1559, 1562, 1560, 1561, 1564, 1563, 1557, 1557, 1563, 1565, 1567, 1566, 1568, 1568, 1566, 1569, 1570, 1569, 1566, 1571, 1569, 1570, 1573, 1572, 1574, 1574, 1572, 1575, 1576, 1575, 1572, 1577, 1575, 1576, 1579, 1578, 1580, 1580, 1578, 1581, 1582, 1581, 1578, 1583, 1581, 1582, 1585, 1584, 1586, 1586, 1584, 1587, 1589, 1588, 1590, 1591, 1588, 1589, 1593, 1592, 1591, 1591, 1592, 1594, 1592, 1595, 1594, 1594, 1595, 1596, 1597, 1596, 1595, 1598, 1596, 1597, 1600, 1599, 1593, 1593, 1599, 1601, 1603, 1602, 1604, 1604, 1602, 1605, 1606, 1605, 1602, 1607, 1605, 1606, 1609, 1608, 1610, 1610, 1608, 1611, 1612, 1611, 1608, 1613, 1611, 1612, 1615, 1614, 1616, 1616, 1614, 1617, 1618, 1617, 1614, 1619, 1617, 1618, 1621, 1620, 1622, 1622, 1620, 1623, 1625, 1624, 1626, 1627, 1624, 1625, 1629, 1628, 1627, 1627, 1628, 1630, 1628, 1631, 1630, 1630, 1631, 1632, 1633, 1632, 1631, 1634, 1632, 1633, 1636, 1635, 1629, 1629, 1635, 1637, 1639, 1638, 1640, 1640, 1638, 1641, 1642, 1641, 1638, 1643, 1641, 1642, 1645, 1644, 1646, 1646, 1644, 1647, 1648, 1647, 1644, 1649, 1647, 1648, 1651, 1650, 1652, 1652, 1650, 1653, 1654, 1653, 1650, 1655, 1653, 1654, 1657, 1656, 1658, 1658, 1656, 1659, 1661, 1660, 1662, 1663, 1660, 1661, 1665, 1664, 1663, 1663, 1664, 1666, 1664, 1667, 1666, 1666, 1667, 1668, 1669, 1668, 1667, 1670, 1668, 1669, 1672, 1671, 1665, 1665, 1671, 1673, 1675, 1674, 1676, 1676, 1674, 1677, 1678, 1677, 1674, 1679, 1677, 1678, 1681, 1680, 1682, 1682, 1680, 1683, 1684, 1683, 1680, 1685, 1683, 1684, 1687, 1686, 1688, 1688, 1686, 1689, 1690, 1689, 1686, 1691, 1689, 1690, 1693, 1692, 1694, 1694, 1692, 1695, 1697, 1696, 1698, 1699, 1696, 1697, 1701, 1700, 1699, 1699, 1700, 1702, 1700, 1703, 1702, 1702, 1703, 1704, 1705, 1704, 1703, 1706, 1704, 1705, 1708, 1707, 1701, 1701, 1707, 1709, 1711, 1710, 1712, 1712, 1710, 1713, 1714, 1713, 1710, 1715, 1713, 1714, 1717, 1716, 1718, 1718, 1716, 1719, 1720, 1719, 1716, 1721, 1719, 1720, 1723, 1722, 1724, 1724, 1722, 1725, 1726, 1725, 1722, 1727, 1725, 1726, 1729, 1728, 1730, 1730, 1728, 1731, 1733, 1732, 1734, 1735, 1732, 1733, 1737, 1736, 1735, 1735, 1736, 1738, 1736, 1739, 1738, 1738, 1739, 1740, 1741, 1740, 1739, 1742, 1740, 1741, 1744, 1743, 1737, 1737, 1743, 1745]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-0.0008789997, 0, -0.99999964), (0, 0.0008189998, -0.99999964), (0, 0, -1), (0, -0.0071369978, -0.9999746), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.0071369978, -0.9999746), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0.000002546483), (0, -1, 0.00000254648), (0, -1, 0.000002546483), (0, -1, 0.00000254648), (0, 0, 1), (0, 0, 1), (0, -1, 0.00000254648), (0, -1, 0.000002546483), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0.000002546483), (0, 0, -1), (0, 0, -1), (0, 1, -0.00000254648), (0, 1, -0.000002546483), (0, -1, 0.00000254648), (0, -1, 0.000002546483), (0, 0, 1), (0, 0, 1), (0, -1, 0.00000254648), (0, 0, -1), (0, 0, -1), (0, -1, 0.000002546483), (0, 1, -0.000002546483), (0, 0, -1), (0, -1, 0.00000254648), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, -0.000002546483), (-1, 0, 0), (0, 1, -0.00000254648), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (-1, 0, 0)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.06220169, 0.06647457, 0.25993526), (0.06220169, 0.06647457, 0.25993526), (0.06220169, -0.06647457, 0.25993526), (-0.06220169, -0.06647457, 0.25993526), (0.06220169, -0.06647457, -0.20722991), (-0.06220169, -0.06647457, 0.25993526), (0.06220169, -0.06647457, 0.25993526), (-0.06220169, -0.06647457, -0.20722991), (-0.069272764, -0.07354564, -0.20722991), (0.069272764, -0.07354564, -0.20722991), (-0.069272764, -0.07354564, -0.20891613), (0.069272764, -0.07354564, -0.20891613), (-0.06220169, -0.06647457, -0.20722991), (-0.06220169, 0.06647457, 0.25993526), (-0.06220169, -0.06647457, 0.25993526), (-0.06220169, 0.06647457, -0.20722991), (-0.069272764, 0.07354564, -0.20722991), (-0.069272764, -0.07354564, -0.20722991), (-0.069272764, 0.07354564, -0.20891613), (-0.069272764, -0.07354564, -0.20891613), (-0.069272764, -0.07354564, -0.20891613), (-0.06220169, 0.06647457, -0.20891613), (-0.06220169, -0.06647457, -0.20891613), (0.029146194, -0.031549223, -0.20899639), (0.05130409, -0.031549223, -0.20899639), (0.06220169, 0.06647457, -0.20891613), (0.029146194, -0.055229224, -0.20899639), (0.05130409, -0.031549223, -0.25993526), (0.029146194, -0.031549223, -0.25993526), (0.05130409, -0.055229224, -0.25993526), (0.05130409, -0.055229224, -0.20899639), (0.029146194, -0.055229224, -0.25993526), (0.06220169, -0.06647457, -0.20891613), (0.069272764, -0.07354564, -0.20891613), (-0.069272764, -0.07354564, -0.20891613), (0.069272764, 0.07354564, -0.20891613), (0.069272764, -0.07354564, -0.20891613), (-0.069272764, 0.07354564, -0.20891613), (-0.06220169, 0.06647457, -0.20891613), (0.069272764, 0.07354564, -0.20891613), (-0.069272764, 0.07354564, -0.20722991), (0.069272764, 0.07354564, -0.20722991), (-0.06220169, 0.06647457, -0.20722991), (0.06220169, 0.06647457, -0.20722991), (0.06220169, 0.06647457, 0.25993526), (-0.06220169, 0.06647457, 0.25993526), (0.06220169, 0.06647457, -0.20722991), (0.06220169, -0.06647457, 0.25993526), (0.06220169, 0.06647457, 0.25993526), (0.06220169, -0.06647457, -0.20722991), (0.069272764, -0.07354564, -0.20722991), (0.069272764, 0.07354564, -0.20722991), (0.069272764, -0.07354564, -0.20891613), (0.069272764, 0.07354564, -0.20891613), (0.069272764, -0.07354564, -0.19798724), (0.069272764, -0.07354564, -0.19967346), (-0.069272764, -0.07354564, -0.19967346), (-0.069272764, -0.07354564, -0.19798724), (0.06220169, -0.06647457, -0.19798724), (-0.06220169, -0.06647457, -0.19798724), (-0.069272764, -0.07354564, -0.19798724), (-0.069272764, -0.07354564, -0.19967346), (-0.069272764, 0.07354564, -0.19967346), (-0.069272764, 0.07354564, -0.19798724), (-0.06220169, -0.06647457, -0.19798724), (-0.06220169, 0.06647457, -0.19798724), (-0.069272764, -0.07354564, -0.19967346), (-0.06220169, 0.06647457, -0.19967346), (-0.06220169, -0.06647457, -0.19967346), (0.069272764, 0.07354564, -0.19798724), (0.069272764, 0.07354564, -0.19967346), (0.069272764, -0.07354564, -0.19967346), (0.069272764, -0.07354564, -0.19798724), (0.06220169, 0.06647457, -0.19798724), (0.06220169, -0.06647457, -0.19798724), (0.069272764, -0.07354564, -0.19967346), (0.06220169, -0.06647457, -0.19967346), (-0.06220169, -0.06647457, -0.19967346), (-0.069272764, -0.07354564, -0.19967346), (0.069272764, 0.07354564, -0.19967346), (0.06220169, -0.06647457, -0.19967346), (0.069272764, -0.07354564, -0.19967346), (0.06220169, 0.06647457, -0.19967346), (-0.069272764, 0.07354564, -0.19967346), (-0.06220169, 0.06647457, -0.19967346), (0.069272764, 0.07354564, -0.19967346), (-0.069272764, 0.07354564, -0.19798724), (0.069272764, 0.07354564, -0.19798724), (-0.06220169, 0.06647457, -0.19798724), (0.06220169, 0.06647457, -0.19798724), (0.069272764, -0.07354564, -0.18854697), (0.069272764, -0.07354564, -0.19023319), (-0.069272764, -0.07354564, -0.19023319), (-0.069272764, -0.07354564, -0.18854697), (0.06220169, -0.06647457, -0.18854697), (-0.06220169, -0.06647457, -0.18854697), (-0.069272764, -0.07354564, -0.18854697), (-0.069272764, -0.07354564, -0.19023319), (-0.069272764, 0.07354564, -0.19023319), (-0.069272764, 0.07354564, -0.18854697), (-0.06220169, -0.06647457, -0.18854697), (-0.06220169, 0.06647457, -0.18854697), (-0.069272764, -0.07354564, -0.19023319), (-0.06220169, 0.06647457, -0.19023319), (-0.06220169, -0.06647457, -0.19023319), (0.069272764, 0.07354564, -0.18854697), (0.069272764, 0.07354564, -0.19023319), (0.069272764, -0.07354564, -0.19023319), (0.069272764, -0.07354564, -0.18854697), (0.06220169, 0.06647457, -0.18854697), (0.06220169, -0.06647457, -0.18854697), (0.069272764, -0.07354564, -0.19023319), (0.06220169, -0.06647457, -0.19023319), (-0.06220169, -0.06647457, -0.19023319), (-0.069272764, -0.07354564, -0.19023319), (0.069272764, 0.07354564, -0.19023319), (0.06220169, -0.06647457, -0.19023319), (0.069272764, -0.07354564, -0.19023319), (0.06220169, 0.06647457, -0.19023319), (-0.069272764, 0.07354564, -0.19023319), (-0.06220169, 0.06647457, -0.19023319), (0.069272764, 0.07354564, -0.19023319), (-0.069272764, 0.07354564, -0.18854697), (0.069272764, 0.07354564, -0.18854697), (-0.06220169, 0.06647457, -0.18854697), (0.06220169, 0.06647457, -0.18854697), (0.069272764, -0.07354564, -0.1780831), (0.069272764, -0.07354564, -0.17976932), (-0.069272764, -0.07354564, -0.17976932), (-0.069272764, -0.07354564, -0.1780831), (0.06220169, -0.06647457, -0.1780831), (-0.06220169, -0.06647457, -0.1780831), (-0.069272764, -0.07354564, -0.1780831), (-0.069272764, -0.07354564, -0.17976932), (-0.069272764, 0.07354564, -0.17976932), (-0.069272764, 0.07354564, -0.1780831), (-0.06220169, -0.06647457, -0.1780831), (-0.06220169, 0.06647457, -0.1780831), (-0.069272764, -0.07354564, -0.17976932), (-0.06220169, 0.06647457, -0.17976932), (-0.06220169, -0.06647457, -0.17976932), (0.069272764, 0.07354564, -0.1780831), (0.069272764, 0.07354564, -0.17976932), (0.069272764, -0.07354564, -0.17976932), (0.069272764, -0.07354564, -0.1780831), (0.06220169, 0.06647457, -0.1780831), (0.06220169, -0.06647457, -0.1780831), (0.069272764, -0.07354564, -0.17976932), (0.06220169, -0.06647457, -0.17976932), (-0.06220169, -0.06647457, -0.17976932), (-0.069272764, -0.07354564, -0.17976932), (0.069272764, 0.07354564, -0.17976932), (0.06220169, -0.06647457, -0.17976932), (0.069272764, -0.07354564, -0.17976932), (0.06220169, 0.06647457, -0.17976932), (-0.069272764, 0.07354564, -0.17976932), (-0.06220169, 0.06647457, -0.17976932), (0.069272764, 0.07354564, -0.17976932), (-0.069272764, 0.07354564, -0.1780831), (0.069272764, 0.07354564, -0.1780831), (-0.06220169, 0.06647457, -0.1780831), (0.06220169, 0.06647457, -0.1780831), (0.069272764, -0.07354564, -0.1688388), (0.069272764, -0.07354564, -0.17052501), (-0.069272764, -0.07354564, -0.17052501), (-0.069272764, -0.07354564, -0.1688388), (0.06220169, -0.06647457, -0.1688388), (-0.06220169, -0.06647457, -0.1688388), (-0.069272764, -0.07354564, -0.1688388), (-0.069272764, -0.07354564, -0.17052501), (-0.069272764, 0.07354564, -0.17052501), (-0.069272764, 0.07354564, -0.1688388), (-0.06220169, -0.06647457, -0.1688388), (-0.06220169, 0.06647457, -0.1688388), (-0.069272764, -0.07354564, -0.17052501), (-0.06220169, 0.06647457, -0.17052501), (-0.06220169, -0.06647457, -0.17052501), (0.069272764, 0.07354564, -0.1688388), (0.069272764, 0.07354564, -0.17052501), (0.069272764, -0.07354564, -0.17052501), (0.069272764, -0.07354564, -0.1688388), (0.06220169, 0.06647457, -0.1688388), (0.06220169, -0.06647457, -0.1688388), (0.069272764, -0.07354564, -0.17052501), (0.06220169, -0.06647457, -0.17052501), (-0.06220169, -0.06647457, -0.17052501), (-0.069272764, -0.07354564, -0.17052501), (0.069272764, 0.07354564, -0.17052501), (0.06220169, -0.06647457, -0.17052501), (0.069272764, -0.07354564, -0.17052501), (0.06220169, 0.06647457, -0.17052501), (-0.069272764, 0.07354564, -0.17052501), (-0.06220169, 0.06647457, -0.17052501), (0.069272764, 0.07354564, -0.17052501), (-0.069272764, 0.07354564, -0.1688388), (0.069272764, 0.07354564, -0.1688388), (-0.06220169, 0.06647457, -0.1688388), (0.06220169, 0.06647457, -0.1688388), (0.069272764, -0.07354564, -0.15959613), (0.069272764, -0.07354564, -0.16128235), (-0.069272764, -0.07354564, -0.16128235), (-0.069272764, -0.07354564, -0.15959613), (0.06220169, -0.06647457, -0.15959613), (-0.06220169, -0.06647457, -0.15959613), (-0.069272764, -0.07354564, -0.15959613), (-0.069272764, -0.07354564, -0.16128235), (-0.069272764, 0.07354564, -0.16128235), (-0.069272764, 0.07354564, -0.15959613), (-0.06220169, -0.06647457, -0.15959613), (-0.06220169, 0.06647457, -0.15959613), (-0.069272764, -0.07354564, -0.16128235), (-0.06220169, 0.06647457, -0.16128235), (-0.06220169, -0.06647457, -0.16128235), (0.069272764, 0.07354564, -0.15959613), (0.069272764, 0.07354564, -0.16128235), (0.069272764, -0.07354564, -0.16128235), (0.069272764, -0.07354564, -0.15959613), (0.06220169, 0.06647457, -0.15959613), (0.06220169, -0.06647457, -0.15959613), (0.069272764, -0.07354564, -0.16128235), (0.06220169, -0.06647457, -0.16128235), (-0.06220169, -0.06647457, -0.16128235), (-0.069272764, -0.07354564, -0.16128235), (0.069272764, 0.07354564, -0.16128235), (0.06220169, -0.06647457, -0.16128235), (0.069272764, -0.07354564, -0.16128235), (0.06220169, 0.06647457, -0.16128235), (-0.069272764, 0.07354564, -0.16128235), (-0.06220169, 0.06647457, -0.16128235), (0.069272764, 0.07354564, -0.16128235), (-0.069272764, 0.07354564, -0.15959613), (0.069272764, 0.07354564, -0.15959613), (-0.06220169, 0.06647457, -0.15959613), (0.06220169, 0.06647457, -0.15959613), (0.069272764, -0.07354564, -0.15015587), (0.069272764, -0.07354564, -0.15184207), (-0.069272764, -0.07354564, -0.15184207), (-0.069272764, -0.07354564, -0.15015587), (0.06220169, -0.06647457, -0.15015587), (-0.06220169, -0.06647457, -0.15015587), (-0.069272764, -0.07354564, -0.15015587), (-0.069272764, -0.07354564, -0.15184207), (-0.069272764, 0.07354564, -0.15184207), (-0.069272764, 0.07354564, -0.15015587), (-0.06220169, -0.06647457, -0.15015587), (-0.06220169, 0.06647457, -0.15015587), (-0.069272764, -0.07354564, -0.15184207), (-0.06220169, 0.06647457, -0.15184207), (-0.06220169, -0.06647457, -0.15184207), (0.069272764, 0.07354564, -0.15015587), (0.069272764, 0.07354564, -0.15184207), (0.069272764, -0.07354564, -0.15184207), (0.069272764, -0.07354564, -0.15015587), (0.06220169, 0.06647457, -0.15015587), (0.06220169, -0.06647457, -0.15015587), (0.069272764, -0.07354564, -0.15184207), (0.06220169, -0.06647457, -0.15184207), (-0.06220169, -0.06647457, -0.15184207), (-0.069272764, -0.07354564, -0.15184207), (0.069272764, 0.07354564, -0.15184207), (0.06220169, -0.06647457, -0.15184207), (0.069272764, -0.07354564, -0.15184207), (0.06220169, 0.06647457, -0.15184207), (-0.069272764, 0.07354564, -0.15184207), (-0.06220169, 0.06647457, -0.15184207), (0.069272764, 0.07354564, -0.15184207), (-0.069272764, 0.07354564, -0.15015587), (0.069272764, 0.07354564, -0.15015587), (-0.06220169, 0.06647457, -0.15015587), (0.06220169, 0.06647457, -0.15015587), (0.069272764, -0.07354564, -0.139692), (0.069272764, -0.07354564, -0.14137821), (-0.069272764, -0.07354564, -0.14137821), (-0.069272764, -0.07354564, -0.139692), (0.06220169, -0.06647457, -0.139692), (-0.06220169, -0.06647457, -0.139692), (-0.069272764, -0.07354564, -0.139692), (-0.069272764, -0.07354564, -0.14137821), (-0.069272764, 0.07354564, -0.14137821), (-0.069272764, 0.07354564, -0.139692), (-0.06220169, -0.06647457, -0.139692), (-0.06220169, 0.06647457, -0.139692), (-0.069272764, -0.07354564, -0.14137821), (-0.06220169, 0.06647457, -0.14137821), (-0.06220169, -0.06647457, -0.14137821), (0.069272764, 0.07354564, -0.139692), (0.069272764, 0.07354564, -0.14137821), (0.069272764, -0.07354564, -0.14137821), (0.069272764, -0.07354564, -0.139692), (0.06220169, 0.06647457, -0.139692), (0.06220169, -0.06647457, -0.139692), (0.069272764, -0.07354564, -0.14137821), (0.06220169, -0.06647457, -0.14137821), (-0.06220169, -0.06647457, -0.14137821), (-0.069272764, -0.07354564, -0.14137821), (0.069272764, 0.07354564, -0.14137821), (0.06220169, -0.06647457, -0.14137821), (0.069272764, -0.07354564, -0.14137821), (0.06220169, 0.06647457, -0.14137821), (-0.069272764, 0.07354564, -0.14137821), (-0.06220169, 0.06647457, -0.14137821), (0.069272764, 0.07354564, -0.14137821), (-0.069272764, 0.07354564, -0.139692), (0.069272764, 0.07354564, -0.139692), (-0.06220169, 0.06647457, -0.139692), (0.06220169, 0.06647457, -0.139692), (0.069272764, -0.07354564, -0.13053535), (0.069272764, -0.07354564, -0.13222156), (-0.069272764, -0.07354564, -0.13222156), (-0.069272764, -0.07354564, -0.13053535), (0.06220169, -0.06647457, -0.13053535), (-0.06220169, -0.06647457, -0.13053535), (-0.069272764, -0.07354564, -0.13053535), (-0.069272764, -0.07354564, -0.13222156), (-0.069272764, 0.07354564, -0.13222156), (-0.069272764, 0.07354564, -0.13053535), (-0.06220169, -0.06647457, -0.13053535), (-0.06220169, 0.06647457, -0.13053535), (-0.069272764, -0.07354564, -0.13222156), (-0.06220169, 0.06647457, -0.13222156), (-0.06220169, -0.06647457, -0.13222156), (0.069272764, 0.07354564, -0.13053535), (0.069272764, 0.07354564, -0.13222156), (0.069272764, -0.07354564, -0.13222156), (0.069272764, -0.07354564, -0.13053535), (0.06220169, 0.06647457, -0.13053535), (0.06220169, -0.06647457, -0.13053535), (0.069272764, -0.07354564, -0.13222156), (0.06220169, -0.06647457, -0.13222156), (-0.06220169, -0.06647457, -0.13222156), (-0.069272764, -0.07354564, -0.13222156), (0.069272764, 0.07354564, -0.13222156), (0.06220169, -0.06647457, -0.13222156), (0.069272764, -0.07354564, -0.13222156), (0.06220169, 0.06647457, -0.13222156), (-0.069272764, 0.07354564, -0.13222156), (-0.06220169, 0.06647457, -0.13222156), (0.069272764, 0.07354564, -0.13222156), (-0.069272764, 0.07354564, -0.13053535), (0.069272764, 0.07354564, -0.13053535), (-0.06220169, 0.06647457, -0.13053535), (0.06220169, 0.06647457, -0.13053535), (0.069272764, -0.07354564, -0.12129268), (0.069272764, -0.07354564, -0.122978896), (-0.069272764, -0.07354564, -0.122978896), (-0.069272764, -0.07354564, -0.12129268), (0.06220169, -0.06647457, -0.12129268), (-0.06220169, -0.06647457, -0.12129268), (-0.069272764, -0.07354564, -0.12129268), (-0.069272764, -0.07354564, -0.122978896), (-0.069272764, 0.07354564, -0.122978896), (-0.069272764, 0.07354564, -0.12129268), (-0.06220169, -0.06647457, -0.12129268), (-0.06220169, 0.06647457, -0.12129268), (-0.069272764, -0.07354564, -0.122978896), (-0.06220169, 0.06647457, -0.122978896), (-0.06220169, -0.06647457, -0.122978896), (0.069272764, 0.07354564, -0.12129268), (0.069272764, 0.07354564, -0.122978896), (0.069272764, -0.07354564, -0.122978896), (0.069272764, -0.07354564, -0.12129268), (0.06220169, 0.06647457, -0.12129268), (0.06220169, -0.06647457, -0.12129268), (0.069272764, -0.07354564, -0.122978896), (0.06220169, -0.06647457, -0.122978896), (-0.06220169, -0.06647457, -0.122978896), (-0.069272764, -0.07354564, -0.122978896), (0.069272764, 0.07354564, -0.122978896), (0.06220169, -0.06647457, -0.122978896), (0.069272764, -0.07354564, -0.122978896), (0.06220169, 0.06647457, -0.122978896), (-0.069272764, 0.07354564, -0.122978896), (-0.06220169, 0.06647457, -0.122978896), (0.069272764, 0.07354564, -0.122978896), (-0.069272764, 0.07354564, -0.12129268), (0.069272764, 0.07354564, -0.12129268), (-0.06220169, 0.06647457, -0.12129268), (0.06220169, 0.06647457, -0.12129268), (0.069272764, -0.07354564, -0.111852415), (0.069272764, -0.07354564, -0.11353862), (-0.069272764, -0.07354564, -0.11353862), (-0.069272764, -0.07354564, -0.111852415), (0.06220169, -0.06647457, -0.111852415), (-0.06220169, -0.06647457, -0.111852415), (-0.069272764, -0.07354564, -0.111852415), (-0.069272764, -0.07354564, -0.11353862), (-0.069272764, 0.07354564, -0.11353862), (-0.069272764, 0.07354564, -0.111852415), (-0.06220169, -0.06647457, -0.111852415), (-0.06220169, 0.06647457, -0.111852415), (-0.069272764, -0.07354564, -0.11353862), (-0.06220169, 0.06647457, -0.11353862), (-0.06220169, -0.06647457, -0.11353862), (0.069272764, 0.07354564, -0.111852415), (0.069272764, 0.07354564, -0.11353862), (0.069272764, -0.07354564, -0.11353862), (0.069272764, -0.07354564, -0.111852415), (0.06220169, 0.06647457, -0.111852415), (0.06220169, -0.06647457, -0.111852415), (0.069272764, -0.07354564, -0.11353862), (0.06220169, -0.06647457, -0.11353862), (-0.06220169, -0.06647457, -0.11353862), (-0.069272764, -0.07354564, -0.11353862), (0.069272764, 0.07354564, -0.11353862), (0.06220169, -0.06647457, -0.11353862), (0.069272764, -0.07354564, -0.11353862), (0.06220169, 0.06647457, -0.11353862), (-0.069272764, 0.07354564, -0.11353862), (-0.06220169, 0.06647457, -0.11353862), (0.069272764, 0.07354564, -0.11353862), (-0.069272764, 0.07354564, -0.111852415), (0.069272764, 0.07354564, -0.111852415), (-0.06220169, 0.06647457, -0.111852415), (0.06220169, 0.06647457, -0.111852415), (0.069272764, -0.07354564, -0.101388544), (0.069272764, -0.07354564, -0.10307476), (-0.069272764, -0.07354564, -0.10307476), (-0.069272764, -0.07354564, -0.101388544), (0.06220169, -0.06647457, -0.101388544), (-0.06220169, -0.06647457, -0.101388544), (-0.069272764, -0.07354564, -0.101388544), (-0.069272764, -0.07354564, -0.10307476), (-0.069272764, 0.07354564, -0.10307476), (-0.069272764, 0.07354564, -0.101388544), (-0.06220169, -0.06647457, -0.101388544), (-0.06220169, 0.06647457, -0.101388544), (-0.069272764, -0.07354564, -0.10307476), (-0.06220169, 0.06647457, -0.10307476), (-0.06220169, -0.06647457, -0.10307476), (0.069272764, 0.07354564, -0.101388544), (0.069272764, 0.07354564, -0.10307476), (0.069272764, -0.07354564, -0.10307476), (0.069272764, -0.07354564, -0.101388544), (0.06220169, 0.06647457, -0.101388544), (0.06220169, -0.06647457, -0.101388544), (0.069272764, -0.07354564, -0.10307476), (0.06220169, -0.06647457, -0.10307476), (-0.06220169, -0.06647457, -0.10307476), (-0.069272764, -0.07354564, -0.10307476), (0.069272764, 0.07354564, -0.10307476), (0.06220169, -0.06647457, -0.10307476), (0.069272764, -0.07354564, -0.10307476), (0.06220169, 0.06647457, -0.10307476), (-0.069272764, 0.07354564, -0.10307476), (-0.06220169, 0.06647457, -0.10307476), (0.069272764, 0.07354564, -0.10307476), (-0.069272764, 0.07354564, -0.101388544), (0.069272764, 0.07354564, -0.101388544), (-0.06220169, 0.06647457, -0.101388544), (0.06220169, 0.06647457, -0.101388544), (0.069272764, -0.07354564, -0.09046688), (0.069272764, -0.07354564, -0.09215309), (-0.069272764, -0.07354564, -0.09215309), (-0.069272764, -0.07354564, -0.09046688), (0.06220169, -0.06647457, -0.09046688), (-0.06220169, -0.06647457, -0.09046688), (-0.069272764, -0.07354564, -0.09046688), (-0.069272764, -0.07354564, -0.09215309), (-0.069272764, 0.07354564, -0.09215309), (-0.069272764, 0.07354564, -0.09046688), (-0.06220169, -0.06647457, -0.09046688), (-0.06220169, 0.06647457, -0.09046688), (-0.069272764, -0.07354564, -0.09215309), (-0.06220169, 0.06647457, -0.09215309), (-0.06220169, -0.06647457, -0.09215309), (0.069272764, 0.07354564, -0.09046688), (0.069272764, 0.07354564, -0.09215309), (0.069272764, -0.07354564, -0.09215309), (0.069272764, -0.07354564, -0.09046688), (0.06220169, 0.06647457, -0.09046688), (0.06220169, -0.06647457, -0.09046688), (0.069272764, -0.07354564, -0.09215309), (0.06220169, -0.06647457, -0.09215309), (-0.06220169, -0.06647457, -0.09215309), (-0.069272764, -0.07354564, -0.09215309), (0.069272764, 0.07354564, -0.09215309), (0.06220169, -0.06647457, -0.09215309), (0.069272764, -0.07354564, -0.09215309), (0.06220169, 0.06647457, -0.09215309), (-0.069272764, 0.07354564, -0.09215309), (-0.06220169, 0.06647457, -0.09215309), (0.069272764, 0.07354564, -0.09215309), (-0.069272764, 0.07354564, -0.09046688), (0.069272764, 0.07354564, -0.09046688), (-0.06220169, 0.06647457, -0.09046688), (0.06220169, 0.06647457, -0.09046688), (0.069272764, -0.07354564, -0.08122421), (0.069272764, -0.07354564, -0.08291042), (-0.069272764, -0.07354564, -0.08291042), (-0.069272764, -0.07354564, -0.08122421), (0.06220169, -0.06647457, -0.08122421), (-0.06220169, -0.06647457, -0.08122421), (-0.069272764, -0.07354564, -0.08122421), (-0.069272764, -0.07354564, -0.08291042), (-0.069272764, 0.07354564, -0.08291042), (-0.069272764, 0.07354564, -0.08122421), (-0.06220169, -0.06647457, -0.08122421), (-0.06220169, 0.06647457, -0.08122421), (-0.069272764, -0.07354564, -0.08291042), (-0.06220169, 0.06647457, -0.08291042), (-0.06220169, -0.06647457, -0.08291042), (0.069272764, 0.07354564, -0.08122421), (0.069272764, 0.07354564, -0.08291042), (0.069272764, -0.07354564, -0.08291042), (0.069272764, -0.07354564, -0.08122421), (0.06220169, 0.06647457, -0.08122421), (0.06220169, -0.06647457, -0.08122421), (0.069272764, -0.07354564, -0.08291042), (0.06220169, -0.06647457, -0.08291042), (-0.06220169, -0.06647457, -0.08291042), (-0.069272764, -0.07354564, -0.08291042), (0.069272764, 0.07354564, -0.08291042), (0.06220169, -0.06647457, -0.08291042), (0.069272764, -0.07354564, -0.08291042), (0.06220169, 0.06647457, -0.08291042), (-0.069272764, 0.07354564, -0.08291042), (-0.06220169, 0.06647457, -0.08291042), (0.069272764, 0.07354564, -0.08291042), (-0.069272764, 0.07354564, -0.08122421), (0.069272764, 0.07354564, -0.08122421), (-0.06220169, 0.06647457, -0.08122421), (0.06220169, 0.06647457, -0.08122421), (0.069272764, -0.07354564, -0.071783945), (0.069272764, -0.07354564, -0.07347015), (-0.069272764, -0.07354564, -0.07347015), (-0.069272764, -0.07354564, -0.071783945), (0.06220169, -0.06647457, -0.071783945), (-0.06220169, -0.06647457, -0.071783945), (-0.069272764, -0.07354564, -0.071783945), (-0.069272764, -0.07354564, -0.07347015), (-0.069272764, 0.07354564, -0.07347015), (-0.069272764, 0.07354564, -0.071783945), (-0.06220169, -0.06647457, -0.071783945), (-0.06220169, 0.06647457, -0.071783945), (-0.069272764, -0.07354564, -0.07347015), (-0.06220169, 0.06647457, -0.07347015), (-0.06220169, -0.06647457, -0.07347015), (0.069272764, 0.07354564, -0.071783945), (0.069272764, 0.07354564, -0.07347015), (0.069272764, -0.07354564, -0.07347015), (0.069272764, -0.07354564, -0.071783945), (0.06220169, 0.06647457, -0.071783945), (0.06220169, -0.06647457, -0.071783945), (0.069272764, -0.07354564, -0.07347015), (0.06220169, -0.06647457, -0.07347015), (-0.06220169, -0.06647457, -0.07347015), (-0.069272764, -0.07354564, -0.07347015), (0.069272764, 0.07354564, -0.07347015), (0.06220169, -0.06647457, -0.07347015), (0.069272764, -0.07354564, -0.07347015), (0.06220169, 0.06647457, -0.07347015), (-0.069272764, 0.07354564, -0.07347015), (-0.06220169, 0.06647457, -0.07347015), (0.069272764, 0.07354564, -0.07347015), (-0.069272764, 0.07354564, -0.071783945), (0.069272764, 0.07354564, -0.071783945), (-0.06220169, 0.06647457, -0.071783945), (0.06220169, 0.06647457, -0.071783945), (0.069272764, -0.07354564, -0.061320074), (0.069272764, -0.07354564, -0.06300628), (-0.069272764, -0.07354564, -0.06300628), (-0.069272764, -0.07354564, -0.061320074), (0.06220169, -0.06647457, -0.061320074), (-0.06220169, -0.06647457, -0.061320074), (-0.069272764, -0.07354564, -0.061320074), (-0.069272764, -0.07354564, -0.06300628), (-0.069272764, 0.07354564, -0.06300628), (-0.069272764, 0.07354564, -0.061320074), (-0.06220169, -0.06647457, -0.061320074), (-0.06220169, 0.06647457, -0.061320074), (-0.069272764, -0.07354564, -0.06300628), (-0.06220169, 0.06647457, -0.06300628), (-0.06220169, -0.06647457, -0.06300628), (0.069272764, 0.07354564, -0.061320074), (0.069272764, 0.07354564, -0.06300628), (0.069272764, -0.07354564, -0.06300628), (0.069272764, -0.07354564, -0.061320074), (0.06220169, 0.06647457, -0.061320074), (0.06220169, -0.06647457, -0.061320074), (0.069272764, -0.07354564, -0.06300628), (0.06220169, -0.06647457, -0.06300628), (-0.06220169, -0.06647457, -0.06300628), (-0.069272764, -0.07354564, -0.06300628), (0.069272764, 0.07354564, -0.06300628), (0.06220169, -0.06647457, -0.06300628), (0.069272764, -0.07354564, -0.06300628), (0.06220169, 0.06647457, -0.06300628), (-0.069272764, 0.07354564, -0.06300628), (-0.06220169, 0.06647457, -0.06300628), (0.069272764, 0.07354564, -0.06300628), (-0.069272764, 0.07354564, -0.061320074), (0.069272764, 0.07354564, -0.061320074), (-0.06220169, 0.06647457, -0.061320074), (0.06220169, 0.06647457, -0.061320074), (0.069272764, -0.07354564, -0.04928211), (0.069272764, -0.07354564, -0.050968323), (-0.069272764, -0.07354564, -0.050968323), (-0.069272764, -0.07354564, -0.04928211), (0.06220169, -0.06647457, -0.04928211), (-0.06220169, -0.06647457, -0.04928211), (-0.069272764, -0.07354564, -0.04928211), (-0.069272764, -0.07354564, -0.050968323), (-0.069272764, 0.07354564, -0.050968323), (-0.069272764, 0.07354564, -0.04928211), (-0.06220169, -0.06647457, -0.04928211), (-0.06220169, 0.06647457, -0.04928211), (-0.069272764, -0.07354564, -0.050968323), (-0.06220169, 0.06647457, -0.050968323), (-0.06220169, -0.06647457, -0.050968323), (0.069272764, 0.07354564, -0.04928211), (0.069272764, 0.07354564, -0.050968323), (0.069272764, -0.07354564, -0.050968323), (0.069272764, -0.07354564, -0.04928211), (0.06220169, 0.06647457, -0.04928211), (0.06220169, -0.06647457, -0.04928211), (0.069272764, -0.07354564, -0.050968323), (0.06220169, -0.06647457, -0.050968323), (-0.06220169, -0.06647457, -0.050968323), (-0.069272764, -0.07354564, -0.050968323), (0.069272764, 0.07354564, -0.050968323), (0.06220169, -0.06647457, -0.050968323), (0.069272764, -0.07354564, -0.050968323), (0.06220169, 0.06647457, -0.050968323), (-0.069272764, 0.07354564, -0.050968323), (-0.06220169, 0.06647457, -0.050968323), (0.069272764, 0.07354564, -0.050968323), (-0.069272764, 0.07354564, -0.04928211), (0.069272764, 0.07354564, -0.04928211), (-0.06220169, 0.06647457, -0.04928211), (0.06220169, 0.06647457, -0.04928211), (0.069272764, -0.07354564, -0.040039442), (0.069272764, -0.07354564, -0.041725654), (-0.069272764, -0.07354564, -0.041725654), (-0.069272764, -0.07354564, -0.040039442), (0.06220169, -0.06647457, -0.040039442), (-0.06220169, -0.06647457, -0.040039442), (-0.069272764, -0.07354564, -0.040039442), (-0.069272764, -0.07354564, -0.041725654), (-0.069272764, 0.07354564, -0.041725654), (-0.069272764, 0.07354564, -0.040039442), (-0.06220169, -0.06647457, -0.040039442), (-0.06220169, 0.06647457, -0.040039442), (-0.069272764, -0.07354564, -0.041725654), (-0.06220169, 0.06647457, -0.041725654), (-0.06220169, -0.06647457, -0.041725654), (0.069272764, 0.07354564, -0.040039442), (0.069272764, 0.07354564, -0.041725654), (0.069272764, -0.07354564, -0.041725654), (0.069272764, -0.07354564, -0.040039442), (0.06220169, 0.06647457, -0.040039442), (0.06220169, -0.06647457, -0.040039442), (0.069272764, -0.07354564, -0.041725654), (0.06220169, -0.06647457, -0.041725654), (-0.06220169, -0.06647457, -0.041725654), (-0.069272764, -0.07354564, -0.041725654), (0.069272764, 0.07354564, -0.041725654), (0.06220169, -0.06647457, -0.041725654), (0.069272764, -0.07354564, -0.041725654), (0.06220169, 0.06647457, -0.041725654), (-0.069272764, 0.07354564, -0.041725654), (-0.06220169, 0.06647457, -0.041725654), (0.069272764, 0.07354564, -0.041725654), (-0.069272764, 0.07354564, -0.040039442), (0.069272764, 0.07354564, -0.040039442), (-0.06220169, 0.06647457, -0.040039442), (0.06220169, 0.06647457, -0.040039442), (0.069272764, -0.07354564, -0.030599173), (0.069272764, -0.07354564, -0.032285385), (-0.069272764, -0.07354564, -0.032285385), (-0.069272764, -0.07354564, -0.030599173), (0.06220169, -0.06647457, -0.030599173), (-0.06220169, -0.06647457, -0.030599173), (-0.069272764, -0.07354564, -0.030599173), (-0.069272764, -0.07354564, -0.032285385), (-0.069272764, 0.07354564, -0.032285385), (-0.069272764, 0.07354564, -0.030599173), (-0.06220169, -0.06647457, -0.030599173), (-0.06220169, 0.06647457, -0.030599173), (-0.069272764, -0.07354564, -0.032285385), (-0.06220169, 0.06647457, -0.032285385), (-0.06220169, -0.06647457, -0.032285385), (0.069272764, 0.07354564, -0.030599173), (0.069272764, 0.07354564, -0.032285385), (0.069272764, -0.07354564, -0.032285385), (0.069272764, -0.07354564, -0.030599173), (0.06220169, 0.06647457, -0.030599173), (0.06220169, -0.06647457, -0.030599173), (0.069272764, -0.07354564, -0.032285385), (0.06220169, -0.06647457, -0.032285385), (-0.06220169, -0.06647457, -0.032285385), (-0.069272764, -0.07354564, -0.032285385), (0.069272764, 0.07354564, -0.032285385), (0.06220169, -0.06647457, -0.032285385), (0.069272764, -0.07354564, -0.032285385), (0.06220169, 0.06647457, -0.032285385), (-0.069272764, 0.07354564, -0.032285385), (-0.06220169, 0.06647457, -0.032285385), (0.069272764, 0.07354564, -0.032285385), (-0.069272764, 0.07354564, -0.030599173), (0.069272764, 0.07354564, -0.030599173), (-0.06220169, 0.06647457, -0.030599173), (0.06220169, 0.06647457, -0.030599173), (0.069272764, -0.07354564, -0.020135308), (0.069272764, -0.07354564, -0.021821517), (-0.069272764, -0.07354564, -0.021821517), (-0.069272764, -0.07354564, -0.020135308), (0.06220169, -0.06647457, -0.020135308), (-0.06220169, -0.06647457, -0.020135308), (-0.069272764, -0.07354564, -0.020135308), (-0.069272764, -0.07354564, -0.021821517), (-0.069272764, 0.07354564, -0.021821517), (-0.069272764, 0.07354564, -0.020135308), (-0.06220169, -0.06647457, -0.020135308), (-0.06220169, 0.06647457, -0.020135308), (-0.069272764, -0.07354564, -0.021821517), (-0.06220169, 0.06647457, -0.021821517), (-0.06220169, -0.06647457, -0.021821517), (0.069272764, 0.07354564, -0.020135308), (0.069272764, 0.07354564, -0.021821517), (0.069272764, -0.07354564, -0.021821517), (0.069272764, -0.07354564, -0.020135308), (0.06220169, 0.06647457, -0.020135308), (0.06220169, -0.06647457, -0.020135308), (0.069272764, -0.07354564, -0.021821517), (0.06220169, -0.06647457, -0.021821517), (-0.06220169, -0.06647457, -0.021821517), (-0.069272764, -0.07354564, -0.021821517), (0.069272764, 0.07354564, -0.021821517), (0.06220169, -0.06647457, -0.021821517), (0.069272764, -0.07354564, -0.021821517), (0.06220169, 0.06647457, -0.021821517), (-0.069272764, 0.07354564, -0.021821517), (-0.06220169, 0.06647457, -0.021821517), (0.069272764, 0.07354564, -0.021821517), (-0.069272764, 0.07354564, -0.020135308), (0.069272764, 0.07354564, -0.020135308), (-0.06220169, 0.06647457, -0.020135308), (0.06220169, 0.06647457, -0.020135308), (0.069272764, -0.073545605, -0.009138355), (0.069272764, -0.073545605, -0.010824566), (-0.069272764, -0.073545605, -0.010824566), (-0.069272764, -0.073545605, -0.009138355), (0.06220169, -0.06647457, -0.009138355), (-0.06220169, -0.06647457, -0.009138355), (-0.069272764, -0.073545605, -0.009138355), (-0.069272764, -0.073545605, -0.010824566), (-0.069272764, 0.07354564, -0.010824566), (-0.069272764, 0.07354564, -0.009138355), (-0.06220169, -0.06647457, -0.009138355), (-0.06220169, 0.06647457, -0.009138355), (-0.069272764, -0.073545605, -0.010824566), (-0.06220169, 0.06647457, -0.010824566), (-0.06220169, -0.06647457, -0.010824566), (0.069272764, -0.073545605, -0.010824566), (0.06220169, -0.06647457, -0.010824566), (-0.06220169, -0.06647457, -0.010824566), (-0.069272764, -0.073545605, -0.010824566), (0.069272764, 0.07354564, -0.010824566), (0.06220169, 0.06647457, -0.010824566), (0.06220169, -0.06647457, -0.010824566), (0.069272764, -0.073545605, -0.010824566), (0.069272764, 0.07354564, -0.009138355), (0.069272764, -0.073545605, -0.010824566), (0.069272764, -0.073545605, -0.009138355), (0.06220169, 0.06647457, -0.009138355), (0.06220169, -0.06647457, -0.009138355), (-0.069272764, 0.07354564, -0.010824566), (-0.06220169, 0.06647457, -0.010824566), (0.06220169, 0.06647457, -0.010824566), (0.069272764, 0.07354564, -0.010824566), (-0.069272764, 0.07354564, -0.009138355), (0.069272764, 0.07354564, -0.009138355), (-0.06220169, 0.06647457, -0.009138355), (0.06220169, 0.06647457, -0.009138355), (0.069272764, -0.073545605, 0.000104312894), (0.069272764, -0.073545605, -0.0015818977), (-0.069272764, -0.073545605, -0.0015818977), (-0.069272764, -0.073545605, 0.000104312894), (0.06220169, -0.06647457, 0.000104312894), (-0.06220169, -0.06647457, 0.000104312894), (-0.069272764, -0.073545605, 0.000104312894), (-0.069272764, -0.073545605, -0.0015818977), (-0.069272764, 0.07354564, -0.0015818977), (-0.069272764, 0.07354564, 0.000104312894), (-0.06220169, -0.06647457, 0.000104312894), (-0.06220169, 0.06647457, 0.000104312894), (-0.069272764, -0.073545605, -0.0015818977), (-0.06220169, 0.06647457, -0.0015818977), (-0.06220169, -0.06647457, -0.0015818977), (0.069272764, -0.073545605, -0.0015818977), (0.06220169, -0.06647457, -0.0015818977), (-0.06220169, -0.06647457, -0.0015818977), (-0.069272764, -0.073545605, -0.0015818977), (0.069272764, 0.07354564, -0.0015818977), (0.06220169, 0.06647457, -0.0015818977), (0.06220169, -0.06647457, -0.0015818977), (0.069272764, -0.073545605, -0.0015818977), (0.069272764, 0.07354564, 0.000104312894), (0.069272764, -0.073545605, -0.0015818977), (0.069272764, -0.073545605, 0.000104312894), (0.06220169, 0.06647457, 0.000104312894), (0.06220169, -0.06647457, 0.000104312894), (-0.069272764, 0.07354564, -0.0015818977), (-0.06220169, 0.06647457, -0.0015818977), (0.06220169, 0.06647457, -0.0015818977), (0.069272764, 0.07354564, -0.0015818977), (-0.069272764, 0.07354564, 0.000104312894), (0.069272764, 0.07354564, 0.000104312894), (-0.06220169, 0.06647457, 0.000104312894), (0.06220169, 0.06647457, 0.000104312894), (0.069272764, -0.073545605, 0.009544602), (0.069272764, -0.073545605, 0.007858391), (-0.069272764, -0.073545605, 0.007858391), (-0.069272764, -0.073545605, 0.009544602), (0.06220169, -0.06647457, 0.009544602), (-0.06220169, -0.06647457, 0.009544602), (-0.069272764, -0.073545605, 0.009544602), (-0.069272764, -0.073545605, 0.007858391), (-0.069272764, 0.07354564, 0.007858391), (-0.069272764, 0.07354564, 0.009544602), (-0.06220169, -0.06647457, 0.009544602), (-0.06220169, 0.06647457, 0.009544602), (-0.069272764, -0.073545605, 0.007858391), (-0.06220169, 0.06647457, 0.007858391), (-0.06220169, -0.06647457, 0.007858391), (0.069272764, -0.073545605, 0.007858391), (0.06220169, -0.06647457, 0.007858391), (-0.06220169, -0.06647457, 0.007858391), (-0.069272764, -0.073545605, 0.007858391), (0.069272764, 0.07354564, 0.007858391), (0.06220169, 0.06647457, 0.007858391), (0.06220169, -0.06647457, 0.007858391), (0.069272764, -0.073545605, 0.007858391), (0.069272764, 0.07354564, 0.009544602), (0.069272764, -0.073545605, 0.007858391), (0.069272764, -0.073545605, 0.009544602), (0.06220169, 0.06647457, 0.009544602), (0.06220169, -0.06647457, 0.009544602), (-0.069272764, 0.07354564, 0.007858391), (-0.06220169, 0.06647457, 0.007858391), (0.06220169, 0.06647457, 0.007858391), (0.069272764, 0.07354564, 0.007858391), (-0.069272764, 0.07354564, 0.009544602), (0.069272764, 0.07354564, 0.009544602), (-0.06220169, 0.06647457, 0.009544602), (0.06220169, 0.06647457, 0.009544602), (0.069272764, -0.073545605, 0.020008469), (0.069272764, -0.073545605, 0.018322257), (-0.069272764, -0.073545605, 0.018322257), (-0.069272764, -0.073545605, 0.020008469), (0.06220169, -0.06647457, 0.020008469), (-0.06220169, -0.06647457, 0.020008469), (-0.069272764, -0.073545605, 0.020008469), (-0.069272764, -0.073545605, 0.018322257), (-0.069272764, 0.07354564, 0.018322257), (-0.069272764, 0.07354564, 0.020008469), (-0.06220169, -0.06647457, 0.020008469), (-0.06220169, 0.06647457, 0.020008469), (-0.069272764, -0.073545605, 0.018322257), (-0.06220169, 0.06647457, 0.018322257), (-0.06220169, -0.06647457, 0.018322257), (0.069272764, -0.073545605, 0.018322257), (0.06220169, -0.06647457, 0.018322257), (-0.06220169, -0.06647457, 0.018322257), (-0.069272764, -0.073545605, 0.018322257), (0.069272764, 0.07354564, 0.018322257), (0.06220169, 0.06647457, 0.018322257), (0.06220169, -0.06647457, 0.018322257), (0.069272764, -0.073545605, 0.018322257), (0.069272764, 0.07354564, 0.020008469), (0.069272764, -0.073545605, 0.018322257), (0.069272764, -0.073545605, 0.020008469), (0.06220169, 0.06647457, 0.020008469), (0.06220169, -0.06647457, 0.020008469), (-0.069272764, 0.07354564, 0.018322257), (-0.06220169, 0.06647457, 0.018322257), (0.06220169, 0.06647457, 0.018322257), (0.069272764, 0.07354564, 0.018322257), (-0.069272764, 0.07354564, 0.020008469), (0.069272764, 0.07354564, 0.020008469), (-0.06220169, 0.06647457, 0.020008469), (0.06220169, 0.06647457, 0.020008469), (0.069272764, -0.073545605, 0.031881295), (0.069272764, -0.073545605, 0.030195083), (-0.069272764, -0.073545605, 0.030195083), (-0.069272764, -0.073545605, 0.031881295), (0.06220169, -0.06647457, 0.031881295), (-0.06220169, -0.06647457, 0.031881295), (-0.069272764, -0.073545605, 0.031881295), (-0.069272764, -0.073545605, 0.030195083), (-0.069272764, 0.07354564, 0.030195083), (-0.069272764, 0.07354564, 0.031881295), (-0.06220169, -0.06647457, 0.031881295), (-0.06220169, 0.06647457, 0.031881295), (-0.069272764, -0.073545605, 0.030195083), (-0.06220169, 0.06647457, 0.030195083), (-0.06220169, -0.06647457, 0.030195083), (0.069272764, -0.073545605, 0.030195083), (0.06220169, -0.06647457, 0.030195083), (-0.06220169, -0.06647457, 0.030195083), (-0.069272764, -0.073545605, 0.030195083), (0.069272764, 0.07354564, 0.030195083), (0.06220169, 0.06647457, 0.030195083), (0.06220169, -0.06647457, 0.030195083), (0.069272764, -0.073545605, 0.030195083), (0.069272764, 0.07354564, 0.031881295), (0.069272764, -0.073545605, 0.030195083), (0.069272764, -0.073545605, 0.031881295), (0.06220169, 0.06647457, 0.031881295), (0.06220169, -0.06647457, 0.031881295), (-0.069272764, 0.07354564, 0.030195083), (-0.06220169, 0.06647457, 0.030195083), (0.06220169, 0.06647457, 0.030195083), (0.069272764, 0.07354564, 0.030195083), (-0.069272764, 0.07354564, 0.031881295), (0.069272764, 0.07354564, 0.031881295), (-0.06220169, 0.06647457, 0.031881295), (0.06220169, 0.06647457, 0.031881295), (0.069272764, -0.073545605, 0.04112396), (0.069272764, -0.073545605, 0.039437752), (-0.069272764, -0.073545605, 0.039437752), (-0.069272764, -0.073545605, 0.04112396), (0.06220169, -0.06647457, 0.04112396), (-0.06220169, -0.06647457, 0.04112396), (-0.069272764, -0.073545605, 0.04112396), (-0.069272764, -0.073545605, 0.039437752), (-0.069272764, 0.07354564, 0.039437752), (-0.069272764, 0.07354564, 0.04112396), (-0.06220169, -0.06647457, 0.04112396), (-0.06220169, 0.06647457, 0.04112396), (-0.069272764, -0.073545605, 0.039437752), (-0.06220169, 0.06647457, 0.039437752), (-0.06220169, -0.06647457, 0.039437752), (0.069272764, -0.073545605, 0.039437752), (0.06220169, -0.06647457, 0.039437752), (-0.06220169, -0.06647457, 0.039437752), (-0.069272764, -0.073545605, 0.039437752), (0.069272764, 0.07354564, 0.039437752), (0.06220169, 0.06647457, 0.039437752), (0.06220169, -0.06647457, 0.039437752), (0.069272764, -0.073545605, 0.039437752), (0.069272764, 0.07354564, 0.04112396), (0.069272764, -0.073545605, 0.039437752), (0.069272764, -0.073545605, 0.04112396), (0.06220169, 0.06647457, 0.04112396), (0.06220169, -0.06647457, 0.04112396), (-0.069272764, 0.07354564, 0.039437752), (-0.06220169, 0.06647457, 0.039437752), (0.06220169, 0.06647457, 0.039437752), (0.069272764, 0.07354564, 0.039437752), (-0.069272764, 0.07354564, 0.04112396), (0.069272764, 0.07354564, 0.04112396), (-0.06220169, 0.06647457, 0.04112396), (0.06220169, 0.06647457, 0.04112396), (0.069272764, -0.073545605, 0.050564248), (0.069272764, -0.073545605, 0.04887804), (-0.069272764, -0.073545605, 0.04887804), (-0.069272764, -0.073545605, 0.050564248), (0.06220169, -0.06647457, 0.050564248), (-0.06220169, -0.06647457, 0.050564248), (-0.069272764, -0.073545605, 0.050564248), (-0.069272764, -0.073545605, 0.04887804), (-0.069272764, 0.07354564, 0.04887804), (-0.069272764, 0.07354564, 0.050564248), (-0.06220169, -0.06647457, 0.050564248), (-0.06220169, 0.06647457, 0.050564248), (-0.069272764, -0.073545605, 0.04887804), (-0.06220169, 0.06647457, 0.04887804), (-0.06220169, -0.06647457, 0.04887804), (0.069272764, -0.073545605, 0.04887804), (0.06220169, -0.06647457, 0.04887804), (-0.06220169, -0.06647457, 0.04887804), (-0.069272764, -0.073545605, 0.04887804), (0.069272764, 0.07354564, 0.04887804), (0.06220169, 0.06647457, 0.04887804), (0.06220169, -0.06647457, 0.04887804), (0.069272764, -0.073545605, 0.04887804), (0.069272764, 0.07354564, 0.050564248), (0.069272764, -0.073545605, 0.04887804), (0.069272764, -0.073545605, 0.050564248), (0.06220169, 0.06647457, 0.050564248), (0.06220169, -0.06647457, 0.050564248), (-0.069272764, 0.07354564, 0.04887804), (-0.06220169, 0.06647457, 0.04887804), (0.06220169, 0.06647457, 0.04887804), (0.069272764, 0.07354564, 0.04887804), (-0.069272764, 0.07354564, 0.050564248), (0.069272764, 0.07354564, 0.050564248), (-0.06220169, 0.06647457, 0.050564248), (0.06220169, 0.06647457, 0.050564248), (0.069272764, -0.073545605, 0.061028115), (0.069272764, -0.073545605, 0.059341908), (-0.069272764, -0.073545605, 0.059341908), (-0.069272764, -0.073545605, 0.061028115), (0.06220169, -0.06647457, 0.061028115), (-0.06220169, -0.06647457, 0.061028115), (-0.069272764, -0.073545605, 0.061028115), (-0.069272764, -0.073545605, 0.059341908), (-0.069272764, 0.07354564, 0.059341908), (-0.069272764, 0.07354564, 0.061028115), (-0.06220169, -0.06647457, 0.061028115), (-0.06220169, 0.06647457, 0.061028115), (-0.069272764, -0.073545605, 0.059341908), (-0.06220169, 0.06647457, 0.059341908), (-0.06220169, -0.06647457, 0.059341908), (0.069272764, -0.073545605, 0.059341908), (0.06220169, -0.06647457, 0.059341908), (-0.06220169, -0.06647457, 0.059341908), (-0.069272764, -0.073545605, 0.059341908), (0.069272764, 0.07354564, 0.059341908), (0.06220169, 0.06647457, 0.059341908), (0.06220169, -0.06647457, 0.059341908), (0.069272764, -0.073545605, 0.059341908), (0.069272764, 0.07354564, 0.061028115), (0.069272764, -0.073545605, 0.059341908), (0.069272764, -0.073545605, 0.061028115), (0.06220169, 0.06647457, 0.061028115), (0.06220169, -0.06647457, 0.061028115), (-0.069272764, 0.07354564, 0.059341908), (-0.06220169, 0.06647457, 0.059341908), (0.06220169, 0.06647457, 0.059341908), (0.069272764, 0.07354564, 0.059341908), (-0.069272764, 0.07354564, 0.061028115), (0.069272764, 0.07354564, 0.061028115), (-0.06220169, 0.06647457, 0.061028115), (0.06220169, 0.06647457, 0.061028115), (0.069272764, -0.073545605, 0.07285139), (0.069272764, -0.073545605, 0.07116518), (-0.069272764, -0.073545605, 0.07116518), (-0.069272764, -0.073545605, 0.07285139), (0.06220169, -0.06647457, 0.07285139), (-0.06220169, -0.06647457, 0.07285139), (-0.069272764, -0.073545605, 0.07285139), (-0.069272764, -0.073545605, 0.07116518), (-0.069272764, 0.07354564, 0.07116518), (-0.069272764, 0.07354564, 0.07285139), (-0.06220169, -0.06647457, 0.07285139), (-0.06220169, 0.06647457, 0.07285139), (-0.069272764, -0.073545605, 0.07116518), (-0.06220169, 0.06647457, 0.07116518), (-0.06220169, -0.06647457, 0.07116518), (0.069272764, -0.073545605, 0.07116518), (0.06220169, -0.06647457, 0.07116518), (-0.06220169, -0.06647457, 0.07116518), (-0.069272764, -0.073545605, 0.07116518), (0.069272764, 0.07354564, 0.07116518), (0.06220169, 0.06647457, 0.07116518), (0.06220169, -0.06647457, 0.07116518), (0.069272764, -0.073545605, 0.07116518), (0.069272764, 0.07354564, 0.07285139), (0.069272764, -0.073545605, 0.07116518), (0.069272764, -0.073545605, 0.07285139), (0.06220169, 0.06647457, 0.07285139), (0.06220169, -0.06647457, 0.07285139), (-0.069272764, 0.07354564, 0.07116518), (-0.06220169, 0.06647457, 0.07116518), (0.06220169, 0.06647457, 0.07116518), (0.069272764, 0.07354564, 0.07116518), (-0.069272764, 0.07354564, 0.07285139), (0.069272764, 0.07354564, 0.07285139), (-0.06220169, 0.06647457, 0.07285139), (0.06220169, 0.06647457, 0.07285139), (0.069272764, -0.073545605, 0.08209406), (0.069272764, -0.073545605, 0.08040784), (-0.069272764, -0.073545605, 0.08040784), (-0.069272764, -0.073545605, 0.08209406), (0.06220169, -0.06647457, 0.08209406), (-0.06220169, -0.06647457, 0.08209406), (-0.069272764, -0.073545605, 0.08209406), (-0.069272764, -0.073545605, 0.08040784), (-0.069272764, 0.07354564, 0.08040784), (-0.069272764, 0.07354564, 0.08209406), (-0.06220169, -0.06647457, 0.08209406), (-0.06220169, 0.06647457, 0.08209406), (-0.069272764, -0.073545605, 0.08040784), (-0.06220169, 0.06647457, 0.08040784), (-0.06220169, -0.06647457, 0.08040784), (0.069272764, -0.073545605, 0.08040784), (0.06220169, -0.06647457, 0.08040784), (-0.06220169, -0.06647457, 0.08040784), (-0.069272764, -0.073545605, 0.08040784), (0.069272764, 0.07354564, 0.08040784), (0.06220169, 0.06647457, 0.08040784), (0.06220169, -0.06647457, 0.08040784), (0.069272764, -0.073545605, 0.08040784), (0.069272764, 0.07354564, 0.08209406), (0.069272764, -0.073545605, 0.08040784), (0.069272764, -0.073545605, 0.08209406), (0.06220169, 0.06647457, 0.08209406), (0.06220169, -0.06647457, 0.08209406), (-0.069272764, 0.07354564, 0.08040784), (-0.06220169, 0.06647457, 0.08040784), (0.06220169, 0.06647457, 0.08040784), (0.069272764, 0.07354564, 0.08040784), (-0.069272764, 0.07354564, 0.08209406), (0.069272764, 0.07354564, 0.08209406), (-0.06220169, 0.06647457, 0.08209406), (0.06220169, 0.06647457, 0.08209406), (0.069272764, -0.073545605, 0.09153435), (0.069272764, -0.073545605, 0.08984814), (-0.069272764, -0.073545605, 0.08984814), (-0.069272764, -0.073545605, 0.09153435), (0.06220169, -0.06647457, 0.09153435), (-0.06220169, -0.06647457, 0.09153435), (-0.069272764, -0.073545605, 0.09153435), (-0.069272764, -0.073545605, 0.08984814), (-0.069272764, 0.07354564, 0.08984814), (-0.069272764, 0.07354564, 0.09153435), (-0.06220169, -0.06647457, 0.09153435), (-0.06220169, 0.06647457, 0.09153435), (-0.069272764, -0.073545605, 0.08984814), (-0.06220169, 0.06647457, 0.08984814), (-0.06220169, -0.06647457, 0.08984814), (0.069272764, -0.073545605, 0.08984814), (0.06220169, -0.06647457, 0.08984814), (-0.06220169, -0.06647457, 0.08984814), (-0.069272764, -0.073545605, 0.08984814), (0.069272764, 0.07354564, 0.08984814), (0.06220169, 0.06647457, 0.08984814), (0.06220169, -0.06647457, 0.08984814), (0.069272764, -0.073545605, 0.08984814), (0.069272764, 0.07354564, 0.09153435), (0.069272764, -0.073545605, 0.08984814), (0.069272764, -0.073545605, 0.09153435), (0.06220169, 0.06647457, 0.09153435), (0.06220169, -0.06647457, 0.09153435), (-0.069272764, 0.07354564, 0.08984814), (-0.06220169, 0.06647457, 0.08984814), (0.06220169, 0.06647457, 0.08984814), (0.069272764, 0.07354564, 0.08984814), (-0.069272764, 0.07354564, 0.09153435), (0.069272764, 0.07354564, 0.09153435), (-0.06220169, 0.06647457, 0.09153435), (0.06220169, 0.06647457, 0.09153435), (0.069272764, -0.073545605, 0.10199821), (0.069272764, -0.073545605, 0.100312), (-0.069272764, -0.073545605, 0.100312), (-0.069272764, -0.073545605, 0.10199821), (0.06220169, -0.06647457, 0.10199821), (-0.06220169, -0.06647457, 0.10199821), (-0.069272764, -0.073545605, 0.10199821), (-0.069272764, -0.073545605, 0.100312), (-0.069272764, 0.07354564, 0.100312), (-0.069272764, 0.07354564, 0.10199821), (-0.06220169, -0.06647457, 0.10199821), (-0.06220169, 0.06647459, 0.10199821), (-0.069272764, -0.073545605, 0.100312), (-0.06220169, 0.06647459, 0.100312), (-0.06220169, -0.06647457, 0.100312), (0.069272764, -0.073545605, 0.100312), (0.06220169, -0.06647457, 0.100312), (-0.06220169, -0.06647457, 0.100312), (-0.069272764, -0.073545605, 0.100312), (0.069272764, 0.07354564, 0.100312), (0.06220169, 0.06647459, 0.100312), (0.06220169, -0.06647457, 0.100312), (0.069272764, -0.073545605, 0.100312), (0.069272764, 0.07354564, 0.10199821), (0.069272764, -0.073545605, 0.100312), (0.069272764, -0.073545605, 0.10199821), (0.06220169, 0.06647459, 0.10199821), (0.06220169, -0.06647457, 0.10199821), (-0.069272764, 0.07354564, 0.100312), (-0.06220169, 0.06647459, 0.100312), (0.06220169, 0.06647459, 0.100312), (0.069272764, 0.07354564, 0.100312), (-0.069272764, 0.07354564, 0.10199821), (0.069272764, 0.07354564, 0.10199821), (-0.06220169, 0.06647459, 0.10199821), (0.06220169, 0.06647459, 0.10199821), (0.069272764, -0.073545605, 0.11278781), (0.069272764, -0.073545605, 0.111101605), (-0.069272764, -0.073545605, 0.111101605), (-0.069272764, -0.073545605, 0.11278781), (0.06220169, -0.06647457, 0.11278781), (-0.06220169, -0.06647457, 0.11278781), (-0.069272764, -0.073545605, 0.11278781), (-0.069272764, -0.073545605, 0.111101605), (-0.069272764, 0.07354564, 0.111101605), (-0.069272764, 0.07354564, 0.11278781), (-0.06220169, -0.06647457, 0.11278781), (-0.06220169, 0.06647459, 0.11278781), (-0.069272764, -0.073545605, 0.111101605), (-0.06220169, 0.06647459, 0.111101605), (-0.06220169, -0.06647457, 0.111101605), (0.069272764, -0.073545605, 0.111101605), (0.06220169, -0.06647457, 0.111101605), (-0.06220169, -0.06647457, 0.111101605), (-0.069272764, -0.073545605, 0.111101605), (0.069272764, 0.07354564, 0.111101605), (0.06220169, 0.06647459, 0.111101605), (0.06220169, -0.06647457, 0.111101605), (0.069272764, -0.073545605, 0.111101605), (0.069272764, 0.07354564, 0.11278781), (0.069272764, -0.073545605, 0.111101605), (0.069272764, -0.073545605, 0.11278781), (0.06220169, 0.06647459, 0.11278781), (0.06220169, -0.06647457, 0.11278781), (-0.069272764, 0.07354564, 0.111101605), (-0.06220169, 0.06647459, 0.111101605), (0.06220169, 0.06647459, 0.111101605), (0.069272764, 0.07354564, 0.111101605), (-0.069272764, 0.07354564, 0.11278781), (0.069272764, 0.07354564, 0.11278781), (-0.06220169, 0.06647459, 0.11278781), (0.06220169, 0.06647459, 0.11278781), (0.069272764, -0.073545605, 0.12203048), (0.069272764, -0.073545605, 0.120344274), (-0.069272764, -0.073545605, 0.120344274), (-0.069272764, -0.073545605, 0.12203048), (0.06220169, -0.06647457, 0.12203048), (-0.06220169, -0.06647457, 0.12203048), (-0.069272764, -0.073545605, 0.12203048), (-0.069272764, -0.073545605, 0.120344274), (-0.069272764, 0.07354564, 0.120344274), (-0.069272764, 0.07354564, 0.12203048), (-0.06220169, -0.06647457, 0.12203048), (-0.06220169, 0.06647459, 0.12203048), (-0.069272764, -0.073545605, 0.120344274), (-0.06220169, 0.06647459, 0.120344274), (-0.06220169, -0.06647457, 0.120344274), (0.069272764, -0.073545605, 0.120344274), (0.06220169, -0.06647457, 0.120344274), (-0.06220169, -0.06647457, 0.120344274), (-0.069272764, -0.073545605, 0.120344274), (0.069272764, 0.07354564, 0.120344274), (0.06220169, 0.06647459, 0.120344274), (0.06220169, -0.06647457, 0.120344274), (0.069272764, -0.073545605, 0.120344274), (0.069272764, 0.07354564, 0.12203048), (0.069272764, -0.073545605, 0.120344274), (0.069272764, -0.073545605, 0.12203048), (0.06220169, 0.06647459, 0.12203048), (0.06220169, -0.06647457, 0.12203048), (-0.069272764, 0.07354564, 0.120344274), (-0.06220169, 0.06647459, 0.120344274), (0.06220169, 0.06647459, 0.120344274), (0.069272764, 0.07354564, 0.120344274), (-0.069272764, 0.07354564, 0.12203048), (0.069272764, 0.07354564, 0.12203048), (-0.06220169, 0.06647459, 0.12203048), (0.06220169, 0.06647459, 0.12203048), (0.069272764, -0.073545605, 0.13147077), (0.069272764, -0.073545605, 0.12978457), (-0.069272764, -0.073545605, 0.12978457), (-0.069272764, -0.073545605, 0.13147077), (0.06220169, -0.06647457, 0.13147077), (-0.06220169, -0.06647457, 0.13147077), (-0.069272764, -0.073545605, 0.13147077), (-0.069272764, -0.073545605, 0.12978457), (-0.069272764, 0.07354564, 0.12978457), (-0.069272764, 0.07354564, 0.13147077), (-0.06220169, -0.06647457, 0.13147077), (-0.06220169, 0.06647459, 0.13147077), (-0.069272764, -0.073545605, 0.12978457), (-0.06220169, 0.06647459, 0.12978457), (-0.06220169, -0.06647457, 0.12978457), (0.069272764, -0.073545605, 0.12978457), (0.06220169, -0.06647457, 0.12978457), (-0.06220169, -0.06647457, 0.12978457), (-0.069272764, -0.073545605, 0.12978457), (0.069272764, 0.07354564, 0.12978457), (0.06220169, 0.06647459, 0.12978457), (0.06220169, -0.06647457, 0.12978457), (0.069272764, -0.073545605, 0.12978457), (0.069272764, 0.07354564, 0.13147077), (0.069272764, -0.073545605, 0.12978457), (0.069272764, -0.073545605, 0.13147077), (0.06220169, 0.06647459, 0.13147077), (0.06220169, -0.06647457, 0.13147077), (-0.069272764, 0.07354564, 0.12978457), (-0.06220169, 0.06647459, 0.12978457), (0.06220169, 0.06647459, 0.12978457), (0.069272764, 0.07354564, 0.12978457), (-0.069272764, 0.07354564, 0.13147077), (0.069272764, 0.07354564, 0.13147077), (-0.06220169, 0.06647459, 0.13147077), (0.06220169, 0.06647459, 0.13147077), (0.069272764, -0.073545605, 0.14193463), (0.069272764, -0.073545605, 0.14024842), (-0.069272764, -0.073545605, 0.14024842), (-0.069272764, -0.073545605, 0.14193463), (0.06220169, -0.06647457, 0.14193463), (-0.06220169, -0.06647457, 0.14193463), (-0.069272764, -0.073545605, 0.14193463), (-0.069272764, -0.073545605, 0.14024842), (-0.069272764, 0.07354564, 0.14024842), (-0.069272764, 0.07354564, 0.14193463), (-0.06220169, -0.06647457, 0.14193463), (-0.06220169, 0.06647459, 0.14193463), (-0.069272764, -0.073545605, 0.14024842), (-0.06220169, 0.06647459, 0.14024842), (-0.06220169, -0.06647457, 0.14024842), (0.069272764, -0.073545605, 0.14024842), (0.06220169, -0.06647457, 0.14024842), (-0.06220169, -0.06647457, 0.14024842), (-0.069272764, -0.073545605, 0.14024842), (0.069272764, 0.07354564, 0.14024842), (0.06220169, 0.06647459, 0.14024842), (0.06220169, -0.06647457, 0.14024842), (0.069272764, -0.073545605, 0.14024842), (0.069272764, 0.07354564, 0.14193463), (0.069272764, -0.073545605, 0.14024842), (0.069272764, -0.073545605, 0.14193463), (0.06220169, 0.06647459, 0.14193463), (0.06220169, -0.06647457, 0.14193463), (-0.069272764, 0.07354564, 0.14024842), (-0.06220169, 0.06647459, 0.14024842), (0.06220169, 0.06647459, 0.14024842), (0.069272764, 0.07354564, 0.14024842), (-0.069272764, 0.07354564, 0.14193463), (0.069272764, 0.07354564, 0.14193463), (-0.06220169, 0.06647459, 0.14193463), (0.06220169, 0.06647459, 0.14193463), (0.069272764, -0.073545605, 0.15413971), (0.069272764, -0.073545605, 0.15245351), (-0.069272764, -0.073545605, 0.15245351), (-0.069272764, -0.073545605, 0.15413971), (0.06220169, -0.06647457, 0.15413971), (-0.06220169, -0.06647457, 0.15413971), (-0.069272764, -0.073545605, 0.15413971), (-0.069272764, -0.073545605, 0.15245351), (-0.069272764, 0.07354564, 0.15245351), (-0.069272764, 0.07354564, 0.15413971), (-0.06220169, -0.06647457, 0.15413971), (-0.06220169, 0.06647459, 0.15413971), (-0.069272764, -0.073545605, 0.15245351), (-0.06220169, 0.06647459, 0.15245351), (-0.06220169, -0.06647457, 0.15245351), (0.069272764, -0.073545605, 0.15245351), (0.06220169, -0.06647457, 0.15245351), (-0.06220169, -0.06647457, 0.15245351), (-0.069272764, -0.073545605, 0.15245351), (0.069272764, 0.07354564, 0.15245351), (0.06220169, 0.06647459, 0.15245351), (0.06220169, -0.06647457, 0.15245351), (0.069272764, -0.073545605, 0.15245351), (0.069272764, 0.07354564, 0.15413971), (0.069272764, -0.073545605, 0.15245351), (0.069272764, -0.073545605, 0.15413971), (0.06220169, 0.06647459, 0.15413971), (0.06220169, -0.06647457, 0.15413971), (-0.069272764, 0.07354564, 0.15245351), (-0.06220169, 0.06647459, 0.15245351), (0.06220169, 0.06647459, 0.15245351), (0.069272764, 0.07354564, 0.15245351), (-0.069272764, 0.07354564, 0.15413971), (0.069272764, 0.07354564, 0.15413971), (-0.06220169, 0.06647459, 0.15413971), (0.06220169, 0.06647459, 0.15413971), (0.069272764, -0.073545605, 0.16338241), (0.069272764, -0.073545605, 0.1616962), (-0.069272764, -0.073545605, 0.1616962), (-0.069272764, -0.073545605, 0.16338241), (0.06220169, -0.06647457, 0.16338241), (-0.06220169, -0.06647457, 0.16338241), (-0.069272764, -0.073545605, 0.16338241), (-0.069272764, -0.073545605, 0.1616962), (-0.069272764, 0.07354564, 0.1616962), (-0.069272764, 0.07354564, 0.16338241), (-0.06220169, -0.06647457, 0.16338241), (-0.06220169, 0.06647459, 0.16338241), (-0.069272764, -0.073545605, 0.1616962), (-0.06220169, 0.06647459, 0.1616962), (-0.06220169, -0.06647457, 0.1616962), (0.069272764, -0.073545605, 0.1616962), (0.06220169, -0.06647457, 0.1616962), (-0.06220169, -0.06647457, 0.1616962), (-0.069272764, -0.073545605, 0.1616962), (0.069272764, 0.07354564, 0.1616962), (0.06220169, 0.06647459, 0.1616962), (0.06220169, -0.06647457, 0.1616962), (0.069272764, -0.073545605, 0.1616962), (0.069272764, 0.07354564, 0.16338241), (0.069272764, -0.073545605, 0.1616962), (0.069272764, -0.073545605, 0.16338241), (0.06220169, 0.06647459, 0.16338241), (0.06220169, -0.06647457, 0.16338241), (-0.069272764, 0.07354564, 0.1616962), (-0.06220169, 0.06647459, 0.1616962), (0.06220169, 0.06647459, 0.1616962), (0.069272764, 0.07354564, 0.1616962), (-0.069272764, 0.07354564, 0.16338241), (0.069272764, 0.07354564, 0.16338241), (-0.06220169, 0.06647459, 0.16338241), (0.06220169, 0.06647459, 0.16338241), (0.069272764, -0.073545605, 0.17282268), (0.069272764, -0.073545605, 0.17113647), (-0.069272764, -0.073545605, 0.17113647), (-0.069272764, -0.073545605, 0.17282268), (0.06220169, -0.06647457, 0.17282268), (-0.06220169, -0.06647457, 0.17282268), (-0.069272764, -0.073545605, 0.17282268), (-0.069272764, -0.073545605, 0.17113647), (-0.069272764, 0.07354564, 0.17113647), (-0.069272764, 0.07354564, 0.17282268), (-0.06220169, -0.06647457, 0.17282268), (-0.06220169, 0.06647459, 0.17282268), (-0.069272764, -0.073545605, 0.17113647), (-0.06220169, 0.06647459, 0.17113647), (-0.06220169, -0.06647457, 0.17113647), (0.069272764, -0.073545605, 0.17113647), (0.06220169, -0.06647457, 0.17113647), (-0.06220169, -0.06647457, 0.17113647), (-0.069272764, -0.073545605, 0.17113647), (0.069272764, 0.07354564, 0.17113647), (0.06220169, 0.06647459, 0.17113647), (0.06220169, -0.06647457, 0.17113647), (0.069272764, -0.073545605, 0.17113647), (0.069272764, 0.07354564, 0.17282268), (0.069272764, -0.073545605, 0.17113647), (0.069272764, -0.073545605, 0.17282268), (0.06220169, 0.06647459, 0.17282268), (0.06220169, -0.06647457, 0.17282268), (-0.069272764, 0.07354564, 0.17113647), (-0.06220169, 0.06647459, 0.17113647), (0.06220169, 0.06647459, 0.17113647), (0.069272764, 0.07354564, 0.17113647), (-0.069272764, 0.07354564, 0.17282268), (0.069272764, 0.07354564, 0.17282268), (-0.06220169, 0.06647459, 0.17282268), (0.06220169, 0.06647459, 0.17282268), (0.069272764, -0.073545605, 0.18328653), (0.069272764, -0.073545605, 0.18160032), (-0.069272764, -0.073545605, 0.18160032), (-0.069272764, -0.073545605, 0.18328653), (0.06220169, -0.06647457, 0.18328653), (-0.06220169, -0.06647457, 0.18328653), (-0.069272764, -0.073545605, 0.18328653), (-0.069272764, -0.073545605, 0.18160032), (-0.069272764, 0.07354564, 0.18160032), (-0.069272764, 0.07354564, 0.18328653), (-0.06220169, -0.06647457, 0.18328653), (-0.06220169, 0.06647459, 0.18328653), (-0.069272764, -0.073545605, 0.18160032), (-0.06220169, 0.06647459, 0.18160032), (-0.06220169, -0.06647457, 0.18160032), (0.069272764, -0.073545605, 0.18160032), (0.06220169, -0.06647457, 0.18160032), (-0.06220169, -0.06647457, 0.18160032), (-0.069272764, -0.073545605, 0.18160032), (0.069272764, 0.07354564, 0.18160032), (0.06220169, 0.06647459, 0.18160032), (0.06220169, -0.06647457, 0.18160032), (0.069272764, -0.073545605, 0.18160032), (0.069272764, 0.07354564, 0.18328653), (0.069272764, -0.073545605, 0.18160032), (0.069272764, -0.073545605, 0.18328653), (0.06220169, 0.06647459, 0.18328653), (0.06220169, -0.06647457, 0.18328653), (-0.069272764, 0.07354564, 0.18160032), (-0.06220169, 0.06647459, 0.18160032), (0.06220169, 0.06647459, 0.18160032), (0.069272764, 0.07354564, 0.18160032), (-0.069272764, 0.07354564, 0.18328653), (0.069272764, 0.07354564, 0.18328653), (-0.06220169, 0.06647459, 0.18328653), (0.06220169, 0.06647459, 0.18328653), (0.069272764, -0.073545605, 0.19443098), (0.069272764, -0.073545605, 0.19274476), (-0.069272764, -0.073545605, 0.19274476), (-0.069272764, -0.073545605, 0.19443098), (0.06220169, -0.06647457, 0.19443098), (-0.06220169, -0.06647457, 0.19443098), (-0.069272764, -0.073545605, 0.19443098), (-0.069272764, -0.073545605, 0.19274476), (-0.069272764, 0.07354564, 0.19274476), (-0.069272764, 0.07354564, 0.19443098), (-0.06220169, -0.06647457, 0.19443098), (-0.06220169, 0.06647459, 0.19443098), (-0.069272764, -0.073545605, 0.19274476), (-0.06220169, 0.06647459, 0.19274476), (-0.06220169, -0.06647457, 0.19274476), (0.069272764, -0.073545605, 0.19274476), (0.06220169, -0.06647457, 0.19274476), (-0.06220169, -0.06647457, 0.19274476), (-0.069272764, -0.073545605, 0.19274476), (0.069272764, 0.07354564, 0.19274476), (0.06220169, 0.06647459, 0.19274476), (0.06220169, -0.06647457, 0.19274476), (0.069272764, -0.073545605, 0.19274476), (0.069272764, 0.07354564, 0.19443098), (0.069272764, -0.073545605, 0.19274476), (0.069272764, -0.073545605, 0.19443098), (0.06220169, 0.06647459, 0.19443098), (0.06220169, -0.06647457, 0.19443098), (-0.069272764, 0.07354564, 0.19274476), (-0.06220169, 0.06647459, 0.19274476), (0.06220169, 0.06647459, 0.19274476), (0.069272764, 0.07354564, 0.19274476), (-0.069272764, 0.07354564, 0.19443098), (0.069272764, 0.07354564, 0.19443098), (-0.06220169, 0.06647459, 0.19443098), (0.06220169, 0.06647459, 0.19443098), (0.069272764, -0.073545605, 0.20367365), (0.069272764, -0.073545605, 0.20198743), (-0.069272764, -0.073545605, 0.20198743), (-0.069272764, -0.073545605, 0.20367365), (0.06220169, -0.06647457, 0.20367365), (-0.06220169, -0.06647457, 0.20367365), (-0.069272764, -0.073545605, 0.20367365), (-0.069272764, -0.073545605, 0.20198743), (-0.069272764, 0.07354564, 0.20198743), (-0.069272764, 0.07354564, 0.20367365), (-0.06220169, -0.06647457, 0.20367365), (-0.06220169, 0.06647459, 0.20367365), (-0.069272764, -0.073545605, 0.20198743), (-0.06220169, 0.06647459, 0.20198743), (-0.06220169, -0.06647457, 0.20198743), (0.069272764, -0.073545605, 0.20198743), (0.06220169, -0.06647457, 0.20198743), (-0.06220169, -0.06647457, 0.20198743), (-0.069272764, -0.073545605, 0.20198743), (0.069272764, 0.07354564, 0.20198743), (0.06220169, 0.06647459, 0.20198743), (0.06220169, -0.06647457, 0.20198743), (0.069272764, -0.073545605, 0.20198743), (0.069272764, 0.07354564, 0.20367365), (0.069272764, -0.073545605, 0.20198743), (0.069272764, -0.073545605, 0.20367365), (0.06220169, 0.06647459, 0.20367365), (0.06220169, -0.06647457, 0.20367365), (-0.069272764, 0.07354564, 0.20198743), (-0.06220169, 0.06647459, 0.20198743), (0.06220169, 0.06647459, 0.20198743), (0.069272764, 0.07354564, 0.20198743), (-0.069272764, 0.07354564, 0.20367365), (0.069272764, 0.07354564, 0.20367365), (-0.06220169, 0.06647459, 0.20367365), (0.06220169, 0.06647459, 0.20367365), (0.069272764, -0.073545605, 0.21311392), (0.069272764, -0.073545605, 0.2114277), (-0.069272764, -0.073545605, 0.2114277), (-0.069272764, -0.073545605, 0.21311392), (0.06220169, -0.066474535, 0.21311392), (-0.06220169, -0.066474535, 0.21311392), (-0.069272764, -0.073545605, 0.21311392), (-0.069272764, -0.073545605, 0.2114277), (-0.069272764, 0.07354564, 0.2114277), (-0.069272764, 0.07354564, 0.21311392), (-0.06220169, -0.066474535, 0.21311392), (-0.06220169, 0.06647459, 0.21311392), (0.069272764, 0.07354564, 0.21311392), (0.069272764, 0.07354564, 0.2114277), (0.069272764, -0.073545605, 0.2114277), (0.069272764, -0.073545605, 0.21311392), (0.06220169, 0.06647459, 0.21311392), (0.06220169, -0.066474535, 0.21311392), (0.069272764, -0.073545605, 0.2114277), (0.06220169, -0.066474535, 0.2114277), (-0.06220169, -0.066474535, 0.2114277), (-0.069272764, -0.073545605, 0.2114277), (0.069272764, 0.07354564, 0.2114277), (0.06220169, -0.066474535, 0.2114277), (0.069272764, -0.073545605, 0.2114277), (0.06220169, 0.06647459, 0.2114277), (-0.069272764, 0.07354564, 0.2114277), (-0.06220169, 0.06647459, 0.2114277), (0.069272764, 0.07354564, 0.2114277), (-0.069272764, 0.07354564, 0.21311392), (0.069272764, 0.07354564, 0.21311392), (-0.06220169, 0.06647459, 0.21311392), (0.06220169, 0.06647459, 0.21311392), (-0.069272764, -0.073545605, 0.2114277), (-0.06220169, -0.066474535, 0.2114277), (-0.069272764, 0.07354564, 0.2114277), (0.069272764, -0.073545605, 0.22357777), (0.069272764, -0.073545605, 0.22189157), (-0.069272764, -0.073545605, 0.22189157), (-0.069272764, -0.073545605, 0.22357777), (0.06220169, -0.066474535, 0.22357777), (-0.06220169, -0.066474535, 0.22357777), (-0.069272764, -0.073545605, 0.22357777), (-0.069272764, -0.073545605, 0.22189157), (-0.069272764, 0.07354564, 0.22189157), (-0.069272764, 0.07354564, 0.22357778), (-0.06220169, -0.066474535, 0.22357777), (-0.06220169, 0.06647459, 0.22357778), (0.069272764, 0.07354564, 0.22357778), (0.069272764, 0.07354564, 0.22189157), (0.069272764, -0.073545605, 0.22189157), (0.069272764, -0.073545605, 0.22357777), (0.06220169, 0.06647459, 0.22357778), (0.06220169, -0.066474535, 0.22357777), (0.069272764, -0.073545605, 0.22189157), (0.06220169, -0.066474535, 0.22189157), (-0.06220169, -0.066474535, 0.22189157), (-0.069272764, -0.073545605, 0.22189157), (0.069272764, 0.07354564, 0.22189157), (0.06220169, -0.066474535, 0.22189157), (0.069272764, -0.073545605, 0.22189157), (0.06220169, 0.06647459, 0.22189157), (-0.069272764, 0.07354564, 0.22189157), (-0.06220169, 0.06647459, 0.22189157), (0.069272764, 0.07354564, 0.22189157), (-0.069272764, 0.07354564, 0.22357778), (0.069272764, 0.07354564, 0.22357778), (-0.06220169, 0.06647459, 0.22357778), (0.06220169, 0.06647459, 0.22357778), (-0.069272764, -0.073545605, 0.22189157), (-0.06220169, -0.066474535, 0.22189157), (-0.069272764, 0.07354564, 0.22189157), (0.069272764, -0.073545605, 0.23064831), (0.069272764, -0.073545605, 0.2289621), (-0.069272764, -0.073545605, 0.2289621), (-0.069272764, -0.073545605, 0.23064831), (0.06220169, -0.066474535, 0.23064831), (-0.06220169, -0.066474535, 0.23064831), (-0.069272764, -0.073545605, 0.23064831), (-0.069272764, -0.073545605, 0.2289621), (-0.069272764, 0.07354564, 0.2289621), (-0.069272764, 0.07354564, 0.23064831), (-0.06220169, -0.066474535, 0.23064831), (-0.06220169, 0.06647459, 0.23064831), (0.069272764, 0.07354564, 0.23064831), (0.069272764, 0.07354564, 0.2289621), (0.069272764, -0.073545605, 0.2289621), (0.069272764, -0.073545605, 0.23064831), (0.06220169, 0.06647459, 0.23064831), (0.06220169, -0.066474535, 0.23064831), (0.069272764, -0.073545605, 0.2289621), (0.06220169, -0.066474535, 0.2289621), (-0.06220169, -0.066474535, 0.2289621), (-0.069272764, -0.073545605, 0.2289621), (0.069272764, 0.07354564, 0.2289621), (0.06220169, -0.066474535, 0.2289621), (0.069272764, -0.073545605, 0.2289621), (0.06220169, 0.06647459, 0.2289621), (-0.069272764, 0.07354564, 0.2289621), (-0.06220169, 0.06647459, 0.2289621), (0.069272764, 0.07354564, 0.2289621), (-0.069272764, 0.07354564, 0.23064831), (0.069272764, 0.07354564, 0.23064831), (-0.06220169, 0.06647459, 0.23064831), (0.06220169, 0.06647459, 0.23064831), (-0.069272764, -0.073545605, 0.2289621), (-0.06220169, -0.066474535, 0.2289621), (-0.069272764, 0.07354564, 0.2289621), (0.069272764, -0.073545605, 0.23989098), (0.069272764, -0.073545605, 0.23820476), (-0.069272764, -0.073545605, 0.23820476), (-0.069272764, -0.073545605, 0.23989098), (0.06220169, -0.066474535, 0.23989098), (-0.06220169, -0.066474535, 0.23989098), (-0.069272764, -0.073545605, 0.23989098), (-0.069272764, -0.073545605, 0.23820476), (-0.069272764, 0.07354564, 0.23820476), (-0.069272764, 0.07354564, 0.23989098), (-0.06220169, -0.066474535, 0.23989098), (-0.06220169, 0.06647459, 0.23989098), (0.069272764, 0.07354564, 0.23989098), (0.069272764, 0.07354564, 0.23820476), (0.069272764, -0.073545605, 0.23820476), (0.069272764, -0.073545605, 0.23989098), (0.06220169, 0.06647459, 0.23989098), (0.06220169, -0.066474535, 0.23989098), (0.069272764, -0.073545605, 0.23820476), (0.06220169, -0.066474535, 0.23820476), (-0.06220169, -0.066474535, 0.23820476), (-0.069272764, -0.073545605, 0.23820476), (0.069272764, 0.07354564, 0.23820476), (0.06220169, -0.066474535, 0.23820476), (0.069272764, -0.073545605, 0.23820476), (0.06220169, 0.06647459, 0.23820476), (-0.069272764, 0.07354564, 0.23820476), (-0.06220169, 0.06647459, 0.23820476), (0.069272764, 0.07354564, 0.23820476), (-0.069272764, 0.07354564, 0.23989098), (0.069272764, 0.07354564, 0.23989098), (-0.06220169, 0.06647459, 0.23989098), (0.06220169, 0.06647459, 0.23989098), (-0.069272764, -0.073545605, 0.23820476), (-0.06220169, -0.066474535, 0.23820476), (-0.069272764, 0.07354564, 0.23820476), (0.069272764, -0.073545605, 0.24933124), (0.069272764, -0.073545605, 0.24764504), (-0.069272764, -0.073545605, 0.24764504), (-0.069272764, -0.073545605, 0.24933124), (0.06220169, -0.066474535, 0.24933124), (-0.06220169, -0.066474535, 0.24933124), (-0.069272764, -0.073545605, 0.24933124), (-0.069272764, -0.073545605, 0.24764504), (-0.069272764, 0.07354564, 0.24764504), (-0.069272764, 0.07354564, 0.24933124), (-0.06220169, -0.066474535, 0.24933124), (-0.06220169, 0.06647459, 0.24933124), (0.069272764, 0.07354564, 0.24933124), (0.069272764, 0.07354564, 0.24764504), (0.069272764, -0.073545605, 0.24764504), (0.069272764, -0.073545605, 0.24933124), (0.06220169, 0.06647459, 0.24933124), (0.06220169, -0.066474535, 0.24933124), (0.069272764, -0.073545605, 0.24764504), (0.06220169, -0.066474535, 0.24764504), (-0.06220169, -0.066474535, 0.24764504), (-0.069272764, -0.073545605, 0.24764504), (0.069272764, 0.07354564, 0.24764504), (0.06220169, -0.066474535, 0.24764504), (0.069272764, -0.073545605, 0.24764504), (0.06220169, 0.06647459, 0.24764504), (-0.069272764, 0.07354564, 0.24764504), (-0.06220169, 0.06647459, 0.24764504), (0.069272764, 0.07354564, 0.24764504), (-0.069272764, 0.07354564, 0.24933124), (0.069272764, 0.07354564, 0.24933124), (-0.06220169, 0.06647459, 0.24933124), (0.06220169, 0.06647459, 0.24933124), (-0.069272764, -0.073545605, 0.24764504), (-0.06220169, -0.066474535, 0.24764504), (-0.069272764, 0.07354564, 0.24764504), (0.069272764, -0.073545605, 0.2597951), (0.069272764, -0.073545605, 0.25810888), (-0.069272764, -0.073545605, 0.25810888), (-0.069272764, -0.073545605, 0.2597951), (0.06220169, -0.066474535, 0.2597951), (-0.06220169, -0.066474535, 0.2597951), (-0.069272764, -0.073545605, 0.2597951), (-0.069272764, -0.073545605, 0.25810888), (-0.069272764, 0.07354564, 0.25810888), (-0.069272764, 0.07354564, 0.25979513), (-0.06220169, -0.066474535, 0.2597951), (-0.06220169, 0.06647459, 0.25979513), (0.069272764, 0.07354564, 0.25979513), (0.069272764, 0.07354564, 0.25810888), (0.069272764, -0.073545605, 0.25810888), (0.069272764, -0.073545605, 0.2597951), (0.06220169, 0.06647459, 0.25979513), (0.06220169, -0.066474535, 0.2597951), (0.069272764, -0.073545605, 0.25810888), (0.06220169, -0.066474535, 0.25810888), (-0.06220169, -0.066474535, 0.25810888), (-0.069272764, -0.073545605, 0.25810888), (0.069272764, 0.07354564, 0.25810888), (0.06220169, -0.066474535, 0.25810888), (0.069272764, -0.073545605, 0.25810888), (0.06220169, 0.06647459, 0.25810888), (-0.069272764, 0.07354564, 0.25810888), (-0.06220169, 0.06647459, 0.25810888), (0.069272764, 0.07354564, 0.25810888), (-0.069272764, 0.07354564, 0.25979513), (0.069272764, 0.07354564, 0.25979513), (-0.06220169, 0.06647459, 0.25979513), (0.06220169, 0.06647459, 0.25979513), (-0.069272764, -0.073545605, 0.25810888), (-0.06220169, -0.066474535, 0.25810888), (-0.069272764, 0.07354564, 0.25810888)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (0, 0.981449), (1, 0), (0, 0), (1, 0.981449), (1, 0.981449), (0, 0.981449), (1, 1), (0, 1), (0, 0.981449), (1, 0), (0, 0), (1, 0.981449), (1, 0.981449), (0, 0.981449), (1, 1), (0, 1), (0, 1), (1, 1), (1, 0), (1, 1), (0, 1), (0, 1), (1, 0), (0, 1), (1, 1), (0, 0), (0, 0), (1, 0), (0, 0), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (1, 0), (0, 0), (0, 0.981449), (1, 0), (0, 0), (1, 0.981449), (1, 0.981449), (0, 0.981449), (1, 1), (0, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 0), (1, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 0), (1, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 0), (1, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 0), (1, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 0), (1, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 0), (1, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (-0.6890443, 0.72471917, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-0.71471816, -0.6994126, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0, 1, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.70708895, 0, 0.70712453, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 0, -1, -1), (0, 1, 0, -1), (0, 0, -1, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 0, -1, 1), (0, -1, 0, 1), (0, 0, -1, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050436117, 0.99872726, 0, 1), (0.050436113, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043613, 0.99872726, 0, 1), (0.05043613, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043613, -0.99872726, 0, 1), (0.05043613, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.05043612, 0.99872726, 0, 1), (0.05043612, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.05043612, -0.99872726, 0, 1), (0.05043612, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 0, -1, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 0, -1, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (44.88163526015751, 2.9190728487787965, -27.559165020867454, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh449"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.00470484, -0.04622177), (0.005197048, 0.00470484, 0.04622177)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.00470484, 0.04622177), (0.005197048, 0.00470484, 0.04622177), (0.005197048, -0.00470484, 0.04622177), (-0.005197048, -0.00470484, 0.04622177), (-0.005197048, 0.00470484, -0.04622177), (-0.005197048, -0.00470484, -0.04622177), (0.005197048, -0.00470484, -0.04622177), (0.005197048, 0.00470484, -0.04622177), (-0.005197048, -0.00470484, -0.04622177), (-0.005197048, -0.00470484, 0.04622177), (0.005197048, -0.00470484, 0.04622177), (0.005197048, -0.00470484, -0.04622177), (-0.005197048, 0.00470484, -0.04622177), (-0.005197048, 0.00470484, 0.04622177), (-0.005197048, -0.00470484, 0.04622177), (-0.005197048, -0.00470484, -0.04622177), (0.005197048, 0.00470484, -0.04622177), (0.005197048, 0.00470484, 0.04622177), (-0.005197048, 0.00470484, 0.04622177), (-0.005197048, 0.00470484, -0.04622177), (0.005197048, -0.00470484, -0.04622177), (0.005197048, -0.00470484, 0.04622177), (0.005197048, 0.00470484, 0.04622177), (0.005197048, 0.00470484, -0.04622177)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.38433262783485, 6.162948686198433, -23.92152716595409, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh450"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.00470484, -0.07500557), (0.005197048, 0.00470484, 0.07500557)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.00470484, 0.07500557), (0.005197048, 0.00470484, 0.07500557), (0.005197048, -0.00470484, 0.07500557), (-0.005197048, -0.00470484, 0.07500557), (-0.005197048, 0.00470484, -0.07500557), (-0.005197048, -0.00470484, -0.07500557), (0.005197048, -0.00470484, -0.07500557), (0.005197048, 0.00470484, -0.07500557), (-0.005197048, -0.00470484, -0.07500557), (-0.005197048, -0.00470484, 0.07500557), (0.005197048, -0.00470484, 0.07500557), (0.005197048, -0.00470484, -0.07500557), (-0.005197048, 0.00470484, -0.07500557), (-0.005197048, 0.00470484, 0.07500557), (-0.005197048, -0.00470484, 0.07500557), (-0.005197048, -0.00470484, -0.07500557), (0.005197048, 0.00470484, -0.07500557), (0.005197048, 0.00470484, 0.07500557), (-0.005197048, 0.00470484, 0.07500557), (-0.005197048, 0.00470484, -0.07500557), (0.005197048, -0.00470484, -0.07500557), (0.005197048, -0.00470484, 0.07500557), (0.005197048, 0.00470484, 0.07500557), (0.005197048, 0.00470484, -0.07500557)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.04676092528655, 6.486190727007852, -23.92152716595409, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh451"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.00470484, -0.04622177), (0.005197048, 0.00470484, 0.04622177)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.00470484, 0.04622177), (0.005197048, 0.00470484, 0.04622177), (0.005197048, -0.00470484, 0.04622177), (-0.005197048, -0.00470484, 0.04622177), (-0.005197048, 0.00470484, -0.04622177), (-0.005197048, -0.00470484, -0.04622177), (0.005197048, -0.00470484, -0.04622177), (0.005197048, 0.00470484, -0.04622177), (-0.005197048, -0.00470484, -0.04622177), (-0.005197048, -0.00470484, 0.04622177), (0.005197048, -0.00470484, 0.04622177), (0.005197048, -0.00470484, -0.04622177), (-0.005197048, 0.00470484, -0.04622177), (-0.005197048, 0.00470484, 0.04622177), (-0.005197048, -0.00470484, 0.04622177), (-0.005197048, -0.00470484, -0.04622177), (0.005197048, 0.00470484, -0.04622177), (0.005197048, 0.00470484, 0.04622177), (-0.005197048, 0.00470484, 0.04622177), (-0.005197048, 0.00470484, -0.04622177), (0.005197048, -0.00470484, -0.04622177), (0.005197048, -0.00470484, 0.04622177), (0.005197048, 0.00470484, 0.04622177), (0.005197048, 0.00470484, -0.04622177)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.754893467336615, 6.162948686198433, -23.92152716595409, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh452"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.00470484, -0.103134304), (0.005197048, 0.00470484, 0.103134304)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.00470484, 0.103134304), (0.005197048, 0.00470484, 0.103134304), (0.005197048, -0.00470484, 0.103134304), (-0.005197048, -0.00470484, 0.103134304), (-0.005197048, 0.00470484, -0.103134304), (-0.005197048, -0.00470484, -0.103134304), (0.005197048, -0.00470484, -0.103134304), (0.005197048, 0.00470484, -0.103134304), (-0.005197048, -0.00470484, -0.103134304), (-0.005197048, -0.00470484, 0.103134304), (0.005197048, -0.00470484, 0.103134304), (0.005197048, -0.00470484, -0.103134304), (-0.005197048, 0.00470484, -0.103134304), (-0.005197048, 0.00470484, 0.103134304), (-0.005197048, -0.00470484, 0.103134304), (-0.005197048, -0.00470484, -0.103134304), (0.005197048, 0.00470484, -0.103134304), (0.005197048, 0.00470484, 0.103134304), (-0.005197048, 0.00470484, 0.103134304), (-0.005197048, 0.00470484, -0.103134304), (0.005197048, -0.00470484, -0.103134304), (0.005197048, -0.00470484, 0.103134304), (0.005197048, 0.00470484, 0.103134304), (0.005197048, 0.00470484, -0.103134304)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.436379953850576, 6.802076499949635, -23.92152716595409, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh453"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.0047048186, -0.07500557), (0.005197048, 0.0047048186, 0.07500557)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.0047048186, 0.07500557), (0.005197048, 0.0047048186, 0.07500557), (0.005197048, -0.0047048186, 0.07500557), (-0.005197048, -0.0047048186, 0.07500557), (-0.005197048, 0.0047048186, -0.07500557), (-0.005197048, -0.0047048186, -0.07500557), (0.005197048, -0.0047048186, -0.07500557), (0.005197048, 0.0047048186, -0.07500557), (-0.005197048, -0.0047048186, -0.07500557), (-0.005197048, -0.0047048186, 0.07500557), (0.005197048, -0.0047048186, 0.07500557), (0.005197048, -0.0047048186, -0.07500557), (-0.005197048, 0.0047048186, -0.07500557), (-0.005197048, 0.0047048186, 0.07500557), (-0.005197048, -0.0047048186, 0.07500557), (-0.005197048, -0.0047048186, -0.07500557), (0.005197048, 0.0047048186, -0.07500557), (0.005197048, 0.0047048186, 0.07500557), (-0.005197048, 0.0047048186, 0.07500557), (-0.005197048, 0.0047048186, -0.07500557), (0.005197048, -0.0047048186, -0.07500557), (0.005197048, -0.0047048186, 0.07500557), (0.005197048, 0.0047048186, 0.07500557), (0.005197048, 0.0047048186, -0.07500557)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.04676092528655, 6.486190727007852, -28.28640405579756, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh454"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.0047048186, -0.04622177), (0.005197048, 0.0047048186, 0.04622177)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.0047048186, 0.04622177), (0.005197048, 0.0047048186, 0.04622177), (0.005197048, -0.0047048186, 0.04622177), (-0.005197048, -0.0047048186, 0.04622177), (-0.005197048, 0.0047048186, -0.04622177), (-0.005197048, -0.0047048186, -0.04622177), (0.005197048, -0.0047048186, -0.04622177), (0.005197048, 0.0047048186, -0.04622177), (-0.005197048, -0.0047048186, -0.04622177), (-0.005197048, -0.0047048186, 0.04622177), (0.005197048, -0.0047048186, 0.04622177), (0.005197048, -0.0047048186, -0.04622177), (-0.005197048, 0.0047048186, -0.04622177), (-0.005197048, 0.0047048186, 0.04622177), (-0.005197048, -0.0047048186, 0.04622177), (-0.005197048, -0.0047048186, -0.04622177), (0.005197048, 0.0047048186, -0.04622177), (0.005197048, 0.0047048186, 0.04622177), (-0.005197048, 0.0047048186, 0.04622177), (-0.005197048, 0.0047048186, -0.04622177), (0.005197048, -0.0047048186, -0.04622177), (0.005197048, -0.0047048186, 0.04622177), (0.005197048, 0.0047048186, 0.04622177), (0.005197048, 0.0047048186, -0.04622177)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.754893467336615, 6.162948686198433, -28.28640405579756, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh455"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.0047048186, -0.103134304), (0.005197048, 0.0047048186, 0.103134304)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.0047048186, 0.103134304), (0.005197048, 0.0047048186, 0.103134304), (0.005197048, -0.0047048186, 0.103134304), (-0.005197048, -0.0047048186, 0.103134304), (-0.005197048, 0.0047048186, -0.103134304), (-0.005197048, -0.0047048186, -0.103134304), (0.005197048, -0.0047048186, -0.103134304), (0.005197048, 0.0047048186, -0.103134304), (-0.005197048, -0.0047048186, -0.103134304), (-0.005197048, -0.0047048186, 0.103134304), (0.005197048, -0.0047048186, 0.103134304), (0.005197048, -0.0047048186, -0.103134304), (-0.005197048, 0.0047048186, -0.103134304), (-0.005197048, 0.0047048186, 0.103134304), (-0.005197048, -0.0047048186, 0.103134304), (-0.005197048, -0.0047048186, -0.103134304), (0.005197048, 0.0047048186, -0.103134304), (0.005197048, 0.0047048186, 0.103134304), (-0.005197048, 0.0047048186, 0.103134304), (-0.005197048, 0.0047048186, -0.103134304), (0.005197048, -0.0047048186, -0.103134304), (0.005197048, -0.0047048186, 0.103134304), (0.005197048, 0.0047048186, 0.103134304), (0.005197048, 0.0047048186, -0.103134304)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.436379953850576, 6.802076499949635, -28.28640405579756, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh456"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005197048, -0.0047048186, -0.04622177), (0.005197048, 0.0047048186, 0.04622177)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005197048, 0.0047048186, 0.04622177), (0.005197048, 0.0047048186, 0.04622177), (0.005197048, -0.0047048186, 0.04622177), (-0.005197048, -0.0047048186, 0.04622177), (-0.005197048, 0.0047048186, -0.04622177), (-0.005197048, -0.0047048186, -0.04622177), (0.005197048, -0.0047048186, -0.04622177), (0.005197048, 0.0047048186, -0.04622177), (-0.005197048, -0.0047048186, -0.04622177), (-0.005197048, -0.0047048186, 0.04622177), (0.005197048, -0.0047048186, 0.04622177), (0.005197048, -0.0047048186, -0.04622177), (-0.005197048, 0.0047048186, -0.04622177), (-0.005197048, 0.0047048186, 0.04622177), (-0.005197048, -0.0047048186, 0.04622177), (-0.005197048, -0.0047048186, -0.04622177), (0.005197048, 0.0047048186, -0.04622177), (0.005197048, 0.0047048186, 0.04622177), (-0.005197048, 0.0047048186, 0.04622177), (-0.005197048, 0.0047048186, -0.04622177), (0.005197048, -0.0047048186, -0.04622177), (0.005197048, -0.0047048186, 0.04622177), (0.005197048, 0.0047048186, 0.04622177), (0.005197048, 0.0047048186, -0.04622177)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.38433262783485, 6.162948686198433, -28.28640405579756, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh457"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.004723892, -0.0052142716, -0.04622177), (0.004723892, 0.0052142716, 0.04622177)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.004723892, 0.0051797484, 0.04622177), (0.004685745, -0.0052142716, 0.04622177), (-0.004723892, -0.0051797484, 0.04622177), (-0.004685745, 0.0052142716, 0.04622177), (0.004723892, 0.0051797484, -0.04622177), (-0.004685745, 0.0052142716, -0.04622177), (-0.004723892, -0.0051797484, -0.04622177), (0.004685745, -0.0052142716, -0.04622177), (-0.004685745, 0.0052142716, -0.04622177), (-0.004685745, 0.0052142716, 0.04622177), (-0.004723892, -0.0051797484, 0.04622177), (-0.004723892, -0.0051797484, -0.04622177), (0.004723892, 0.0051797484, -0.04622177), (0.004723892, 0.0051797484, 0.04622177), (-0.004685745, 0.0052142716, 0.04622177), (-0.004685745, 0.0052142716, -0.04622177), (0.004685745, -0.0052142716, -0.04622177), (0.004685745, -0.0052142716, 0.04622177), (0.004723892, 0.0051797484, 0.04622177), (0.004723892, 0.0051797484, -0.04622177), (-0.004723892, -0.0051797484, -0.04622177), (-0.004723892, -0.0051797484, 0.04622177), (0.004685745, -0.0052142716, 0.04622177), (0.004685745, -0.0052142716, -0.04622177)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.70055530870013, 6.162948686198433, -26.877624206294513, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh458"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.004723892, -0.0052142716, -0.07500557), (0.004723892, 0.0052142716, 0.07500557)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.004723892, 0.0051797484, 0.07500557), (0.004685745, -0.0052142716, 0.07500557), (-0.004723892, -0.0051797484, 0.07500557), (-0.004685745, 0.0052142716, 0.07500557), (0.004723892, 0.0051797484, -0.07500557), (-0.004685745, 0.0052142716, -0.07500557), (-0.004723892, -0.0051797484, -0.07500557), (0.004685745, -0.0052142716, -0.07500557), (-0.004685745, 0.0052142716, -0.07500557), (-0.004685745, 0.0052142716, 0.07500557), (-0.004723892, -0.0051797484, 0.07500557), (-0.004723892, -0.0051797484, -0.07500557), (0.004723892, 0.0051797484, -0.07500557), (0.004723892, 0.0051797484, 0.07500557), (-0.004685745, 0.0052142716, 0.07500557), (-0.004685745, 0.0052142716, -0.07500557), (0.004685745, -0.0052142716, -0.07500557), (0.004685745, -0.0052142716, 0.07500557), (0.004723892, 0.0051797484, 0.07500557), (0.004723892, 0.0051797484, -0.07500557), (-0.004723892, -0.0051797484, -0.07500557), (-0.004723892, -0.0051797484, 0.07500557), (0.004685745, -0.0052142716, 0.07500557), (0.004685745, -0.0052142716, -0.07500557)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.70179496366745, 6.486190727007852, -26.540054846506678, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh459"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.004723892, -0.0052142716, -0.04622177), (0.004723892, 0.0052142716, 0.04622177)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.004723892, 0.0051797484, 0.04622177), (0.004685745, -0.0052142716, 0.04622177), (-0.004723892, -0.0051797484, 0.04622177), (-0.004685745, 0.0052142716, 0.04622177), (0.004723892, 0.0051797484, -0.04622177), (-0.004685745, 0.0052142716, -0.04622177), (-0.004723892, -0.0051797484, -0.04622177), (0.004685745, -0.0052142716, -0.04622177), (-0.004685745, 0.0052142716, -0.04622177), (-0.004685745, 0.0052142716, 0.04622177), (-0.004723892, -0.0051797484, 0.04622177), (-0.004723892, -0.0051797484, -0.04622177), (0.004723892, 0.0051797484, -0.04622177), (0.004723892, 0.0051797484, 0.04622177), (-0.004685745, 0.0052142716, 0.04622177), (-0.004685745, 0.0052142716, -0.04622177), (0.004685745, -0.0052142716, -0.04622177), (0.004685745, -0.0052142716, 0.04622177), (0.004723892, 0.0051797484, 0.04622177), (0.004723892, 0.0051797484, -0.04622177), (-0.004723892, -0.0051797484, -0.04622177), (-0.004723892, -0.0051797484, 0.04622177), (0.004685745, -0.0052142716, 0.04622177), (0.004685745, -0.0052142716, -0.04622177)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.70286426648079, 6.162948686198433, -26.248188392596944, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh460"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.004723892, -0.0052142716, -0.103134304), (0.004723892, 0.0052142716, 0.103134304)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.004723892, 0.0051797484, 0.103134304), (0.004685745, -0.0052142716, 0.103134304), (-0.004723892, -0.0051797484, 0.103134304), (-0.004685745, 0.0052142716, 0.103134304), (0.004723892, 0.0051797484, -0.103134304), (-0.004685745, 0.0052142716, -0.103134304), (-0.004723892, -0.0051797484, -0.103134304), (0.004685745, -0.0052142716, -0.103134304), (-0.004685745, 0.0052142716, -0.103134304), (-0.004685745, 0.0052142716, 0.103134304), (-0.004723892, -0.0051797484, 0.103134304), (-0.004723892, -0.0051797484, -0.103134304), (0.004723892, 0.0051797484, -0.103134304), (0.004723892, 0.0051797484, 0.103134304), (-0.004685745, 0.0052142716, 0.103134304), (-0.004685745, 0.0052142716, -0.103134304), (0.004685745, -0.0052142716, -0.103134304), (0.004685745, -0.0052142716, 0.103134304), (0.004723892, 0.0051797484, 0.103134304), (0.004723892, 0.0051797484, -0.103134304), (-0.004723892, -0.0051797484, -0.103134304), (-0.004723892, -0.0051797484, 0.103134304), (0.004685745, -0.0052142716, 0.103134304), (0.004685745, -0.0052142716, -0.103134304)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.0036700643, 0.9999933, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (0.9999933, -0.003668875, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.0036700643, -0.9999933, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1), (-0.9999933, 0.003668875, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.70403363863409, 6.802076499949635, -25.929676887191306, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh461"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.06927275, -0.07354564, -0.25993526), (0.06927275, 0.07354564, 0.25993526)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 7, 4, 5, 7, 8, 4, 4, 8, 9, 10, 9, 8, 11, 9, 10, 13, 12, 14, 15, 12, 13, 15, 16, 12, 12, 16, 17, 18, 17, 16, 19, 17, 18, 21, 20, 18, 22, 20, 21, 21, 23, 22, 21, 24, 23, 25, 24, 21, 22, 23, 26, 24, 27, 23, 23, 27, 28, 23, 28, 26, 24, 29, 27, 29, 28, 27, 30, 29, 24, 25, 30, 24, 31, 28, 29, 26, 28, 31, 30, 31, 29, 26, 31, 30, 32, 26, 30, 22, 26, 32, 32, 30, 25, 32, 33, 22, 22, 33, 34, 25, 35, 32, 32, 35, 36, 38, 37, 25, 25, 37, 39, 37, 40, 39, 39, 40, 41, 42, 41, 40, 43, 41, 42, 43, 42, 44, 44, 42, 45, 47, 46, 48, 49, 46, 47, 49, 50, 46, 46, 50, 51, 52, 51, 50, 53, 51, 52, 55, 54, 56, 56, 54, 57, 58, 57, 54, 59, 57, 58, 61, 60, 62, 62, 60, 63, 64, 63, 60, 65, 63, 64, 67, 66, 62, 68, 66, 67, 70, 69, 71, 71, 69, 72, 73, 72, 69, 74, 72, 73, 76, 75, 77, 77, 75, 78, 80, 79, 81, 82, 79, 80, 84, 83, 82, 82, 83, 85, 83, 86, 85, 85, 86, 87, 88, 87, 86, 89, 87, 88, 91, 90, 92, 92, 90, 93, 94, 93, 90, 95, 93, 94, 97, 96, 98, 98, 96, 99, 100, 99, 96, 101, 99, 100, 103, 102, 98, 104, 102, 103, 106, 105, 107, 107, 105, 108, 109, 108, 105, 110, 108, 109, 112, 111, 113, 113, 111, 114, 116, 115, 117, 118, 115, 116, 120, 119, 118, 118, 119, 121, 119, 122, 121, 121, 122, 123, 124, 123, 122, 125, 123, 124, 127, 126, 128, 128, 126, 129, 130, 129, 126, 131, 129, 130, 133, 132, 134, 134, 132, 135, 136, 135, 132, 137, 135, 136, 139, 138, 134, 140, 138, 139, 142, 141, 143, 143, 141, 144, 145, 144, 141, 146, 144, 145, 148, 147, 149, 149, 147, 150, 152, 151, 153, 154, 151, 152, 156, 155, 154, 154, 155, 157, 155, 158, 157, 157, 158, 159, 160, 159, 158, 161, 159, 160, 163, 162, 164, 164, 162, 165, 166, 165, 162, 167, 165, 166, 169, 168, 170, 170, 168, 171, 172, 171, 168, 173, 171, 172, 175, 174, 170, 176, 174, 175, 178, 177, 179, 179, 177, 180, 181, 180, 177, 182, 180, 181, 184, 183, 185, 185, 183, 186, 188, 187, 189, 190, 187, 188, 192, 191, 190, 190, 191, 193, 191, 194, 193, 193, 194, 195, 196, 195, 194, 197, 195, 196, 199, 198, 200, 200, 198, 201, 202, 201, 198, 203, 201, 202, 205, 204, 206, 206, 204, 207, 208, 207, 204, 209, 207, 208, 211, 210, 206, 212, 210, 211, 214, 213, 215, 215, 213, 216, 217, 216, 213, 218, 216, 217, 220, 219, 221, 221, 219, 222, 224, 223, 225, 226, 223, 224, 228, 227, 226, 226, 227, 229, 227, 230, 229, 229, 230, 231, 232, 231, 230, 233, 231, 232, 235, 234, 236, 236, 234, 237, 238, 237, 234, 239, 237, 238, 241, 240, 242, 242, 240, 243, 244, 243, 240, 245, 243, 244, 247, 246, 242, 248, 246, 247, 250, 249, 251, 251, 249, 252, 253, 252, 249, 254, 252, 253, 256, 255, 257, 257, 255, 258, 260, 259, 261, 262, 259, 260, 264, 263, 262, 262, 263, 265, 263, 266, 265, 265, 266, 267, 268, 267, 266, 269, 267, 268, 271, 270, 272, 272, 270, 273, 274, 273, 270, 275, 273, 274, 277, 276, 278, 278, 276, 279, 280, 279, 276, 281, 279, 280, 283, 282, 278, 284, 282, 283, 286, 285, 287, 287, 285, 288, 289, 288, 285, 290, 288, 289, 292, 291, 293, 293, 291, 294, 296, 295, 297, 298, 295, 296, 300, 299, 298, 298, 299, 301, 299, 302, 301, 301, 302, 303, 304, 303, 302, 305, 303, 304, 307, 306, 308, 308, 306, 309, 310, 309, 306, 311, 309, 310, 313, 312, 314, 314, 312, 315, 316, 315, 312, 317, 315, 316, 319, 318, 314, 320, 318, 319, 322, 321, 323, 323, 321, 324, 325, 324, 321, 326, 324, 325, 328, 327, 329, 329, 327, 330, 332, 331, 333, 334, 331, 332, 336, 335, 334, 334, 335, 337, 335, 338, 337, 337, 338, 339, 340, 339, 338, 341, 339, 340, 343, 342, 344, 344, 342, 345, 346, 345, 342, 347, 345, 346, 349, 348, 350, 350, 348, 351, 352, 351, 348, 353, 351, 352, 355, 354, 350, 356, 354, 355, 358, 357, 359, 359, 357, 360, 361, 360, 357, 362, 360, 361, 364, 363, 365, 365, 363, 366, 368, 367, 369, 370, 367, 368, 372, 371, 370, 370, 371, 373, 371, 374, 373, 373, 374, 375, 376, 375, 374, 377, 375, 376, 379, 378, 380, 380, 378, 381, 382, 381, 378, 383, 381, 382, 385, 384, 386, 386, 384, 387, 388, 387, 384, 389, 387, 388, 391, 390, 386, 392, 390, 391, 394, 393, 395, 395, 393, 396, 398, 397, 399, 399, 397, 400, 397, 401, 402, 402, 401, 403, 404, 403, 401, 405, 403, 404, 407, 406, 408, 408, 406, 409, 406, 410, 409, 409, 410, 411, 412, 411, 410, 413, 411, 412, 415, 414, 416, 416, 414, 417, 418, 417, 414, 419, 417, 418, 421, 420, 422, 422, 420, 423, 424, 423, 420, 425, 423, 424, 427, 426, 422, 428, 426, 427, 430, 429, 431, 431, 429, 432, 434, 433, 435, 435, 433, 436, 433, 437, 438, 438, 437, 439, 440, 439, 437, 441, 439, 440, 443, 442, 444, 444, 442, 445, 442, 446, 445, 445, 446, 447, 448, 447, 446, 449, 447, 448, 451, 450, 452, 452, 450, 453, 454, 453, 450, 455, 453, 454, 457, 456, 458, 458, 456, 459, 460, 459, 456, 461, 459, 460, 463, 462, 458, 464, 462, 463, 466, 465, 467, 467, 465, 468, 470, 469, 471, 471, 469, 472, 469, 473, 474, 474, 473, 475, 476, 475, 473, 477, 475, 476, 479, 478, 480, 480, 478, 481, 478, 482, 481, 481, 482, 483, 484, 483, 482, 485, 483, 484, 487, 486, 488, 488, 486, 489, 490, 489, 486, 491, 489, 490, 493, 492, 494, 494, 492, 495, 496, 495, 492, 497, 495, 496, 499, 498, 494, 500, 498, 499, 502, 501, 503, 503, 501, 504, 506, 505, 507, 507, 505, 508, 505, 509, 510, 510, 509, 511, 512, 511, 509, 513, 511, 512, 515, 514, 516, 516, 514, 517, 514, 518, 517, 517, 518, 519, 520, 519, 518, 521, 519, 520, 523, 522, 524, 524, 522, 525, 526, 525, 522, 527, 525, 526, 529, 528, 530, 530, 528, 531, 532, 531, 528, 533, 531, 532, 535, 534, 530, 536, 534, 535, 538, 537, 539, 539, 537, 540, 542, 541, 543, 543, 541, 544, 541, 545, 546, 546, 545, 547, 548, 547, 545, 549, 547, 548, 551, 550, 552, 552, 550, 553, 550, 554, 553, 553, 554, 555, 556, 555, 554, 557, 555, 556, 559, 558, 560, 560, 558, 561, 562, 561, 558, 563, 561, 562, 565, 564, 566, 566, 564, 567, 568, 567, 564, 569, 567, 568, 571, 570, 566, 572, 570, 571, 574, 573, 575, 575, 573, 576, 578, 577, 579, 579, 577, 580, 577, 581, 582, 582, 581, 583, 584, 583, 581, 585, 583, 584, 587, 586, 588, 588, 586, 589, 586, 590, 589, 589, 590, 591, 592, 591, 590, 593, 591, 592, 595, 594, 596, 596, 594, 597, 598, 597, 594, 599, 597, 598, 601, 600, 602, 602, 600, 603, 604, 603, 600, 605, 603, 604, 607, 606, 602, 608, 606, 607, 610, 609, 611, 611, 609, 612, 614, 613, 615, 615, 613, 616, 613, 617, 618, 618, 617, 619, 620, 619, 617, 621, 619, 620, 623, 622, 624, 624, 622, 625, 622, 626, 625, 625, 626, 627, 628, 627, 626, 629, 627, 628, 631, 630, 632, 632, 630, 633, 634, 633, 630, 635, 633, 634, 637, 636, 638, 638, 636, 639, 640, 639, 636, 641, 639, 640, 643, 642, 638, 644, 642, 643, 646, 645, 647, 647, 645, 648, 650, 649, 651, 651, 649, 652, 649, 653, 654, 654, 653, 655, 656, 655, 653, 657, 655, 656, 659, 658, 660, 660, 658, 661, 658, 662, 661, 661, 662, 663, 664, 663, 662, 665, 663, 664, 667, 666, 668, 668, 666, 669, 670, 669, 666, 671, 669, 670, 673, 672, 674, 674, 672, 675, 676, 675, 672, 677, 675, 676, 679, 678, 674, 680, 678, 679, 682, 681, 683, 683, 681, 684, 686, 685, 687, 687, 685, 688, 685, 689, 690, 690, 689, 691, 692, 691, 689, 693, 691, 692, 695, 694, 696, 696, 694, 697, 694, 698, 697, 697, 698, 699, 700, 699, 698, 701, 699, 700, 703, 702, 704, 704, 702, 705, 706, 705, 702, 707, 705, 706, 709, 708, 710, 710, 708, 711, 712, 711, 708, 713, 711, 712, 715, 714, 710, 716, 714, 715, 718, 717, 719, 719, 717, 720, 722, 721, 723, 723, 721, 724, 721, 725, 726, 726, 725, 727, 728, 727, 725, 729, 727, 728, 731, 730, 732, 732, 730, 733, 730, 734, 733, 733, 734, 735, 736, 735, 734, 737, 735, 736, 739, 738, 740, 740, 738, 741, 742, 741, 738, 743, 741, 742, 745, 744, 746, 746, 744, 747, 748, 747, 744, 749, 747, 748, 751, 750, 746, 752, 750, 751, 754, 753, 755, 755, 753, 756, 758, 757, 759, 759, 757, 760, 757, 761, 762, 762, 761, 763, 764, 763, 761, 765, 763, 764, 767, 766, 768, 768, 766, 769, 766, 770, 769, 769, 770, 771, 772, 771, 770, 773, 771, 772, 775, 774, 776, 776, 774, 777, 778, 777, 774, 779, 777, 778, 781, 780, 782, 782, 780, 783, 784, 783, 780, 785, 783, 784, 787, 786, 782, 788, 786, 787, 790, 789, 791, 791, 789, 792, 794, 793, 795, 795, 793, 796, 793, 797, 798, 798, 797, 799, 800, 799, 797, 801, 799, 800, 803, 802, 804, 804, 802, 805, 802, 806, 805, 805, 806, 807, 808, 807, 806, 809, 807, 808, 811, 810, 812, 812, 810, 813, 814, 813, 810, 815, 813, 814, 817, 816, 818, 818, 816, 819, 820, 819, 816, 821, 819, 820, 823, 822, 818, 824, 822, 823, 826, 825, 827, 827, 825, 828, 830, 829, 831, 831, 829, 832, 829, 833, 834, 834, 833, 835, 836, 835, 833, 837, 835, 836, 839, 838, 840, 840, 838, 841, 838, 842, 841, 841, 842, 843, 844, 843, 842, 845, 843, 844, 847, 846, 848, 848, 846, 849, 850, 849, 846, 851, 849, 850, 853, 852, 854, 854, 852, 855, 856, 855, 852, 857, 855, 856, 859, 858, 854, 860, 858, 859, 862, 861, 863, 863, 861, 864, 866, 865, 867, 867, 865, 868, 865, 869, 870, 870, 869, 871, 872, 871, 869, 873, 871, 872, 875, 874, 876, 876, 874, 877, 874, 878, 877, 877, 878, 879, 880, 879, 878, 881, 879, 880, 883, 882, 884, 884, 882, 885, 886, 885, 882, 887, 885, 886, 889, 888, 890, 890, 888, 891, 892, 891, 888, 893, 891, 892, 895, 894, 890, 896, 894, 895, 898, 897, 899, 899, 897, 900, 902, 901, 903, 903, 901, 904, 901, 905, 906, 906, 905, 907, 908, 907, 905, 909, 907, 908, 911, 910, 912, 912, 910, 913, 910, 914, 913, 913, 914, 915, 916, 915, 914, 917, 915, 916, 919, 918, 920, 920, 918, 921, 922, 921, 918, 923, 921, 922, 925, 924, 926, 926, 924, 927, 928, 927, 924, 929, 927, 928, 931, 930, 926, 932, 930, 931, 934, 933, 935, 935, 933, 936, 938, 937, 939, 939, 937, 940, 937, 941, 942, 942, 941, 943, 944, 943, 941, 945, 943, 944, 947, 946, 948, 948, 946, 949, 946, 950, 949, 949, 950, 951, 952, 951, 950, 953, 951, 952, 955, 954, 956, 956, 954, 957, 958, 957, 954, 959, 957, 958, 961, 960, 962, 962, 960, 963, 964, 963, 960, 965, 963, 964, 967, 966, 962, 968, 966, 967, 970, 969, 971, 971, 969, 972, 974, 973, 975, 975, 973, 976, 973, 977, 978, 978, 977, 979, 980, 979, 977, 981, 979, 980, 983, 982, 984, 984, 982, 985, 982, 986, 985, 985, 986, 987, 988, 987, 986, 989, 987, 988, 991, 990, 992, 992, 990, 993, 994, 993, 990, 995, 993, 994, 997, 996, 998, 998, 996, 999, 1000, 999, 996, 1001, 999, 1000, 1003, 1002, 998, 1004, 1002, 1003, 1006, 1005, 1007, 1007, 1005, 1008, 1010, 1009, 1011, 1011, 1009, 1012, 1009, 1013, 1014, 1014, 1013, 1015, 1016, 1015, 1013, 1017, 1015, 1016, 1019, 1018, 1020, 1020, 1018, 1021, 1018, 1022, 1021, 1021, 1022, 1023, 1024, 1023, 1022, 1025, 1023, 1024, 1027, 1026, 1028, 1028, 1026, 1029, 1030, 1029, 1026, 1031, 1029, 1030, 1033, 1032, 1034, 1034, 1032, 1035, 1036, 1035, 1032, 1037, 1035, 1036, 1039, 1038, 1034, 1040, 1038, 1039, 1042, 1041, 1043, 1043, 1041, 1044, 1046, 1045, 1047, 1047, 1045, 1048, 1045, 1049, 1050, 1050, 1049, 1051, 1052, 1051, 1049, 1053, 1051, 1052, 1055, 1054, 1056, 1056, 1054, 1057, 1054, 1058, 1057, 1057, 1058, 1059, 1060, 1059, 1058, 1061, 1059, 1060, 1063, 1062, 1064, 1064, 1062, 1065, 1066, 1065, 1062, 1067, 1065, 1066, 1069, 1068, 1070, 1070, 1068, 1071, 1072, 1071, 1068, 1073, 1071, 1072, 1075, 1074, 1070, 1076, 1074, 1075, 1078, 1077, 1079, 1079, 1077, 1080, 1082, 1081, 1083, 1083, 1081, 1084, 1081, 1085, 1086, 1086, 1085, 1087, 1088, 1087, 1085, 1089, 1087, 1088, 1091, 1090, 1092, 1092, 1090, 1093, 1090, 1094, 1093, 1093, 1094, 1095, 1096, 1095, 1094, 1097, 1095, 1096, 1099, 1098, 1100, 1100, 1098, 1101, 1102, 1101, 1098, 1103, 1101, 1102, 1105, 1104, 1106, 1106, 1104, 1107, 1108, 1107, 1104, 1109, 1107, 1108, 1111, 1110, 1106, 1112, 1110, 1111, 1114, 1113, 1115, 1115, 1113, 1116, 1118, 1117, 1119, 1119, 1117, 1120, 1117, 1121, 1122, 1122, 1121, 1123, 1124, 1123, 1121, 1125, 1123, 1124, 1127, 1126, 1128, 1128, 1126, 1129, 1126, 1130, 1129, 1129, 1130, 1131, 1132, 1131, 1130, 1133, 1131, 1132, 1135, 1134, 1136, 1136, 1134, 1137, 1138, 1137, 1134, 1139, 1137, 1138, 1141, 1140, 1142, 1142, 1140, 1143, 1144, 1143, 1140, 1145, 1143, 1144, 1147, 1146, 1142, 1148, 1146, 1147, 1150, 1149, 1151, 1151, 1149, 1152, 1154, 1153, 1155, 1155, 1153, 1156, 1153, 1157, 1158, 1158, 1157, 1159, 1160, 1159, 1157, 1161, 1159, 1160, 1163, 1162, 1164, 1164, 1162, 1165, 1162, 1166, 1165, 1165, 1166, 1167, 1168, 1167, 1166, 1169, 1167, 1168, 1171, 1170, 1172, 1172, 1170, 1173, 1174, 1173, 1170, 1175, 1173, 1174, 1177, 1176, 1178, 1178, 1176, 1179, 1180, 1179, 1176, 1181, 1179, 1180, 1183, 1182, 1178, 1184, 1182, 1183, 1186, 1185, 1187, 1187, 1185, 1188, 1190, 1189, 1191, 1191, 1189, 1192, 1189, 1193, 1194, 1194, 1193, 1195, 1196, 1195, 1193, 1197, 1195, 1196, 1199, 1198, 1200, 1200, 1198, 1201, 1198, 1202, 1201, 1201, 1202, 1203, 1204, 1203, 1202, 1205, 1203, 1204, 1207, 1206, 1208, 1208, 1206, 1209, 1210, 1209, 1206, 1211, 1209, 1210, 1213, 1212, 1214, 1214, 1212, 1215, 1216, 1215, 1212, 1217, 1215, 1216, 1219, 1218, 1214, 1220, 1218, 1219, 1222, 1221, 1223, 1223, 1221, 1224, 1226, 1225, 1227, 1227, 1225, 1228, 1225, 1229, 1230, 1230, 1229, 1231, 1232, 1231, 1229, 1233, 1231, 1232, 1235, 1234, 1236, 1236, 1234, 1237, 1234, 1238, 1237, 1237, 1238, 1239, 1240, 1239, 1238, 1241, 1239, 1240, 1243, 1242, 1244, 1244, 1242, 1245, 1246, 1245, 1242, 1247, 1245, 1246, 1249, 1248, 1250, 1250, 1248, 1251, 1252, 1251, 1248, 1253, 1251, 1252, 1255, 1254, 1250, 1256, 1254, 1255, 1258, 1257, 1259, 1259, 1257, 1260, 1262, 1261, 1263, 1263, 1261, 1264, 1261, 1265, 1266, 1266, 1265, 1267, 1268, 1267, 1265, 1269, 1267, 1268, 1271, 1270, 1272, 1272, 1270, 1273, 1270, 1274, 1273, 1273, 1274, 1275, 1276, 1275, 1274, 1277, 1275, 1276, 1279, 1278, 1280, 1280, 1278, 1281, 1282, 1281, 1278, 1283, 1281, 1282, 1285, 1284, 1286, 1286, 1284, 1287, 1288, 1287, 1284, 1289, 1287, 1288, 1291, 1290, 1286, 1292, 1290, 1291, 1294, 1293, 1295, 1295, 1293, 1296, 1298, 1297, 1299, 1299, 1297, 1300, 1297, 1301, 1302, 1302, 1301, 1303, 1304, 1303, 1301, 1305, 1303, 1304, 1307, 1306, 1308, 1308, 1306, 1309, 1306, 1310, 1309, 1309, 1310, 1311, 1312, 1311, 1310, 1313, 1311, 1312, 1315, 1314, 1316, 1316, 1314, 1317, 1318, 1317, 1314, 1319, 1317, 1318, 1321, 1320, 1322, 1322, 1320, 1323, 1324, 1323, 1320, 1325, 1323, 1324, 1327, 1326, 1322, 1328, 1326, 1327, 1330, 1329, 1331, 1331, 1329, 1332, 1334, 1333, 1335, 1335, 1333, 1336, 1333, 1337, 1338, 1338, 1337, 1339, 1340, 1339, 1337, 1341, 1339, 1340, 1343, 1342, 1344, 1344, 1342, 1345, 1342, 1346, 1345, 1345, 1346, 1347, 1348, 1347, 1346, 1349, 1347, 1348, 1351, 1350, 1352, 1352, 1350, 1353, 1354, 1353, 1350, 1355, 1353, 1354, 1357, 1356, 1358, 1358, 1356, 1359, 1360, 1359, 1356, 1361, 1359, 1360, 1363, 1362, 1358, 1364, 1362, 1363, 1366, 1365, 1367, 1367, 1365, 1368, 1370, 1369, 1371, 1371, 1369, 1372, 1369, 1373, 1374, 1374, 1373, 1375, 1376, 1375, 1373, 1377, 1375, 1376, 1379, 1378, 1380, 1380, 1378, 1381, 1378, 1382, 1381, 1381, 1382, 1383, 1384, 1383, 1382, 1385, 1383, 1384, 1387, 1386, 1388, 1388, 1386, 1389, 1390, 1389, 1386, 1391, 1389, 1390, 1393, 1392, 1394, 1394, 1392, 1395, 1396, 1395, 1392, 1397, 1395, 1396, 1399, 1398, 1394, 1400, 1398, 1399, 1402, 1401, 1403, 1403, 1401, 1404, 1406, 1405, 1407, 1407, 1405, 1408, 1405, 1409, 1410, 1410, 1409, 1411, 1412, 1411, 1409, 1413, 1411, 1412, 1415, 1414, 1416, 1416, 1414, 1417, 1414, 1418, 1417, 1417, 1418, 1419, 1420, 1419, 1418, 1421, 1419, 1420, 1423, 1422, 1424, 1424, 1422, 1425, 1426, 1425, 1422, 1427, 1425, 1426, 1429, 1428, 1430, 1430, 1428, 1431, 1432, 1431, 1428, 1433, 1431, 1432, 1435, 1434, 1430, 1436, 1434, 1435, 1438, 1437, 1439, 1439, 1437, 1440, 1442, 1441, 1443, 1443, 1441, 1444, 1441, 1445, 1446, 1446, 1445, 1447, 1448, 1447, 1445, 1449, 1447, 1448, 1451, 1450, 1452, 1452, 1450, 1453, 1450, 1454, 1453, 1453, 1454, 1455, 1456, 1455, 1454, 1457, 1455, 1456, 1459, 1458, 1460, 1460, 1458, 1461, 1462, 1461, 1458, 1463, 1461, 1462, 1465, 1464, 1466, 1466, 1464, 1467, 1468, 1467, 1464, 1469, 1467, 1468, 1471, 1470, 1466, 1472, 1470, 1471, 1474, 1473, 1475, 1475, 1473, 1476, 1478, 1477, 1479, 1479, 1477, 1480, 1477, 1481, 1482, 1482, 1481, 1483, 1484, 1483, 1481, 1485, 1483, 1484, 1487, 1486, 1488, 1488, 1486, 1489, 1486, 1490, 1489, 1489, 1490, 1491, 1492, 1491, 1490, 1493, 1491, 1492, 1495, 1494, 1496, 1496, 1494, 1497, 1498, 1497, 1494, 1499, 1497, 1498, 1501, 1500, 1502, 1502, 1500, 1503, 1504, 1503, 1500, 1505, 1503, 1504, 1507, 1506, 1502, 1508, 1506, 1507, 1510, 1509, 1511, 1511, 1509, 1512, 1514, 1513, 1515, 1515, 1513, 1516, 1513, 1517, 1518, 1518, 1517, 1519, 1520, 1519, 1517, 1521, 1519, 1520, 1523, 1522, 1524, 1524, 1522, 1525, 1522, 1526, 1525, 1525, 1526, 1527, 1528, 1527, 1526, 1529, 1527, 1528, 1531, 1530, 1532, 1532, 1530, 1533, 1534, 1533, 1530, 1535, 1533, 1534, 1537, 1536, 1538, 1538, 1536, 1539, 1540, 1539, 1536, 1541, 1539, 1540, 1543, 1542, 1538, 1544, 1542, 1543, 1546, 1545, 1547, 1547, 1545, 1548, 1550, 1549, 1551, 1551, 1549, 1552, 1549, 1553, 1554, 1554, 1553, 1555, 1556, 1555, 1553, 1557, 1555, 1556, 1559, 1558, 1560, 1560, 1558, 1561, 1558, 1562, 1561, 1561, 1562, 1563, 1564, 1563, 1562, 1565, 1563, 1564, 1567, 1566, 1568, 1568, 1566, 1569, 1570, 1569, 1566, 1571, 1569, 1570, 1573, 1572, 1574, 1574, 1572, 1575, 1576, 1575, 1572, 1577, 1575, 1576, 1579, 1578, 1574, 1580, 1578, 1579, 1582, 1581, 1583, 1583, 1581, 1584, 1586, 1585, 1587, 1587, 1585, 1588, 1585, 1589, 1590, 1590, 1589, 1591, 1592, 1591, 1589, 1593, 1591, 1592, 1595, 1594, 1596, 1596, 1594, 1597, 1594, 1598, 1597, 1597, 1598, 1599, 1600, 1599, 1598, 1601, 1599, 1600, 1603, 1602, 1604, 1604, 1602, 1605, 1606, 1605, 1602, 1607, 1605, 1606, 1609, 1608, 1610, 1610, 1608, 1611, 1612, 1611, 1608, 1613, 1611, 1612, 1615, 1614, 1610, 1616, 1614, 1615, 1618, 1617, 1619, 1619, 1617, 1620, 1622, 1621, 1623, 1623, 1621, 1624, 1621, 1625, 1626, 1626, 1625, 1627, 1628, 1627, 1625, 1629, 1627, 1628, 1631, 1630, 1632, 1632, 1630, 1633, 1630, 1634, 1633, 1633, 1634, 1635, 1636, 1635, 1634, 1637, 1635, 1636, 1639, 1638, 1640, 1640, 1638, 1641, 1642, 1641, 1638, 1643, 1641, 1642, 1645, 1644, 1646, 1646, 1644, 1647, 1648, 1647, 1644, 1649, 1647, 1648, 1651, 1650, 1646, 1652, 1650, 1651, 1654, 1653, 1655, 1655, 1653, 1656, 1658, 1657, 1659, 1659, 1657, 1660, 1657, 1661, 1662, 1662, 1661, 1663, 1664, 1663, 1661, 1665, 1663, 1664, 1667, 1666, 1668, 1668, 1666, 1669, 1666, 1670, 1669, 1669, 1670, 1671, 1672, 1671, 1670, 1673, 1671, 1672, 1675, 1674, 1676, 1676, 1674, 1677, 1678, 1677, 1674, 1679, 1677, 1678, 1681, 1680, 1682, 1682, 1680, 1683, 1684, 1683, 1680, 1685, 1683, 1684, 1687, 1686, 1682, 1688, 1686, 1687, 1690, 1689, 1691, 1691, 1689, 1692, 1694, 1693, 1695, 1695, 1693, 1696, 1693, 1697, 1698, 1698, 1697, 1699, 1700, 1699, 1697, 1701, 1699, 1700, 1703, 1702, 1704, 1704, 1702, 1705, 1702, 1706, 1705, 1705, 1706, 1707, 1708, 1707, 1706, 1709, 1707, 1708, 1711, 1710, 1712, 1712, 1710, 1713, 1714, 1713, 1710, 1715, 1713, 1714, 1717, 1716, 1718, 1718, 1716, 1719, 1720, 1719, 1716, 1721, 1719, 1720, 1723, 1722, 1718, 1724, 1722, 1723, 1726, 1725, 1727, 1727, 1725, 1728, 1730, 1729, 1731, 1731, 1729, 1732, 1729, 1733, 1734, 1734, 1733, 1735, 1736, 1735, 1733, 1737, 1735, 1736, 1739, 1738, 1740, 1740, 1738, 1741, 1738, 1742, 1741, 1741, 1742, 1743, 1744, 1743, 1742, 1745, 1743, 1744]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-0.0008789997, 0, -0.99999964), (0, 0.0008189998, -0.99999964), (0, 0, -1), (0, -0.0071369978, -0.9999746), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.0071369978, -0.9999746), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, -1, 0), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0.000002546483), (0, -1, 0.00000254648), (0, -1, 0.000002546483), (0, -1, 0.00000254648), (0, 0, 1), (0, 0, 1), (0, -1, 0.00000254648), (0, -1, 0.000002546483), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0.000002546483), (0, 0, -1), (0, 0, -1), (0, 1, -0.00000254648), (0, 1, -0.000002546483), (0, -1, 0.00000254648), (0, -1, 0.000002546483), (0, 0, 1), (0, 0, 1), (0, -1, 0.00000254648), (0, 0, -1), (0, 0, -1), (0, -1, 0.000002546483), (0, 1, -0.000002546483), (0, 0, -1), (0, -1, 0.00000254648), (0, 0, -1), (-1, 0, 0), (0, 0, -1), (0, 1, -0.000002546483), (-1, 0, 0), (0, 1, -0.00000254648), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.06220169, 0.06647457, 0.25993526), (0.06220169, 0.06647457, 0.25993526), (0.06220169, -0.06647457, 0.25993526), (-0.06220169, -0.06647457, 0.25993526), (0.06220169, -0.06647457, -0.20722991), (-0.06220169, -0.06647457, 0.25993526), (0.06220169, -0.06647457, 0.25993526), (-0.06220169, -0.06647457, -0.20722991), (-0.06927275, -0.07354564, -0.20722991), (0.06927275, -0.07354564, -0.20722991), (-0.06927275, -0.07354564, -0.20891613), (0.06927275, -0.07354564, -0.20891613), (-0.06220169, -0.06647457, -0.20722991), (-0.06220169, 0.06647457, 0.25993526), (-0.06220169, -0.06647457, 0.25993526), (-0.06220169, 0.06647457, -0.20722991), (-0.06927275, 0.07354564, -0.20722991), (-0.06927275, -0.07354564, -0.20722991), (-0.06927275, 0.07354564, -0.20891613), (-0.06927275, -0.07354564, -0.20891613), (-0.06927275, -0.07354564, -0.20891613), (-0.06220169, 0.06647457, -0.20891613), (-0.06220169, -0.06647457, -0.20891613), (0.029146194, -0.031549223, -0.20899639), (0.05130409, -0.031549223, -0.20899639), (0.06220169, 0.06647457, -0.20891613), (0.029146194, -0.055229224, -0.20899639), (0.05130409, -0.031549223, -0.25993526), (0.029146194, -0.031549223, -0.25993526), (0.05130409, -0.055229224, -0.25993526), (0.05130409, -0.055229224, -0.20899639), (0.029146194, -0.055229224, -0.25993526), (0.06220169, -0.06647457, -0.20891613), (0.06927275, -0.07354564, -0.20891613), (-0.06927275, -0.07354564, -0.20891613), (0.06927275, 0.07354564, -0.20891613), (0.06927275, -0.07354564, -0.20891613), (-0.06927275, 0.07354564, -0.20891613), (-0.06220169, 0.06647457, -0.20891613), (0.06927275, 0.07354564, -0.20891613), (-0.06927275, 0.07354564, -0.20722991), (0.06927275, 0.07354564, -0.20722991), (-0.06220169, 0.06647457, -0.20722991), (0.06220169, 0.06647457, -0.20722991), (0.06220169, 0.06647457, 0.25993526), (-0.06220169, 0.06647457, 0.25993526), (0.06220169, 0.06647457, -0.20722991), (0.06220169, -0.06647457, 0.25993526), (0.06220169, 0.06647457, 0.25993526), (0.06220169, -0.06647457, -0.20722991), (0.06927275, -0.07354564, -0.20722991), (0.06927275, 0.07354564, -0.20722991), (0.06927275, -0.07354564, -0.20891613), (0.06927275, 0.07354564, -0.20891613), (0.06927275, -0.07354564, -0.19798724), (0.06927275, -0.07354564, -0.19967346), (-0.06927275, -0.07354564, -0.19967346), (-0.06927275, -0.07354564, -0.19798724), (0.06220169, -0.06647457, -0.19798724), (-0.06220169, -0.06647457, -0.19798724), (-0.06927275, -0.07354564, -0.19798724), (-0.06927275, -0.07354564, -0.19967346), (-0.06927275, 0.07354564, -0.19967346), (-0.06927275, 0.07354564, -0.19798724), (-0.06220169, -0.06647457, -0.19798724), (-0.06220169, 0.06647457, -0.19798724), (-0.06927275, -0.07354564, -0.19967346), (-0.06220169, 0.06647457, -0.19967346), (-0.06220169, -0.06647457, -0.19967346), (0.06927275, 0.07354564, -0.19798724), (0.06927275, 0.07354564, -0.19967346), (0.06927275, -0.07354564, -0.19967346), (0.06927275, -0.07354564, -0.19798724), (0.06220169, 0.06647457, -0.19798724), (0.06220169, -0.06647457, -0.19798724), (0.06927275, -0.07354564, -0.19967346), (0.06220169, -0.06647457, -0.19967346), (-0.06220169, -0.06647457, -0.19967346), (-0.06927275, -0.07354564, -0.19967346), (0.06927275, 0.07354564, -0.19967346), (0.06220169, -0.06647457, -0.19967346), (0.06927275, -0.07354564, -0.19967346), (0.06220169, 0.06647457, -0.19967346), (-0.06927275, 0.07354564, -0.19967346), (-0.06220169, 0.06647457, -0.19967346), (0.06927275, 0.07354564, -0.19967346), (-0.06927275, 0.07354564, -0.19798724), (0.06927275, 0.07354564, -0.19798724), (-0.06220169, 0.06647457, -0.19798724), (0.06220169, 0.06647457, -0.19798724), (0.06927275, -0.07354564, -0.18854697), (0.06927275, -0.07354564, -0.19023319), (-0.06927275, -0.07354564, -0.19023319), (-0.06927275, -0.07354564, -0.18854697), (0.06220169, -0.06647457, -0.18854697), (-0.06220169, -0.06647457, -0.18854697), (-0.06927275, -0.07354564, -0.18854697), (-0.06927275, -0.07354564, -0.19023319), (-0.06927275, 0.07354564, -0.19023319), (-0.06927275, 0.07354564, -0.18854697), (-0.06220169, -0.06647457, -0.18854697), (-0.06220169, 0.06647457, -0.18854697), (-0.06927275, -0.07354564, -0.19023319), (-0.06220169, 0.06647457, -0.19023319), (-0.06220169, -0.06647457, -0.19023319), (0.06927275, 0.07354564, -0.18854697), (0.06927275, 0.07354564, -0.19023319), (0.06927275, -0.07354564, -0.19023319), (0.06927275, -0.07354564, -0.18854697), (0.06220169, 0.06647457, -0.18854697), (0.06220169, -0.06647457, -0.18854697), (0.06927275, -0.07354564, -0.19023319), (0.06220169, -0.06647457, -0.19023319), (-0.06220169, -0.06647457, -0.19023319), (-0.06927275, -0.07354564, -0.19023319), (0.06927275, 0.07354564, -0.19023319), (0.06220169, -0.06647457, -0.19023319), (0.06927275, -0.07354564, -0.19023319), (0.06220169, 0.06647457, -0.19023319), (-0.06927275, 0.07354564, -0.19023319), (-0.06220169, 0.06647457, -0.19023319), (0.06927275, 0.07354564, -0.19023319), (-0.06927275, 0.07354564, -0.18854697), (0.06927275, 0.07354564, -0.18854697), (-0.06220169, 0.06647457, -0.18854697), (0.06220169, 0.06647457, -0.18854697), (0.06927275, -0.07354564, -0.1780831), (0.06927275, -0.07354564, -0.17976932), (-0.06927275, -0.07354564, -0.17976932), (-0.06927275, -0.07354564, -0.1780831), (0.06220169, -0.06647457, -0.1780831), (-0.06220169, -0.06647457, -0.1780831), (-0.06927275, -0.07354564, -0.1780831), (-0.06927275, -0.07354564, -0.17976932), (-0.06927275, 0.07354564, -0.17976932), (-0.06927275, 0.07354564, -0.1780831), (-0.06220169, -0.06647457, -0.1780831), (-0.06220169, 0.06647457, -0.1780831), (-0.06927275, -0.07354564, -0.17976932), (-0.06220169, 0.06647457, -0.17976932), (-0.06220169, -0.06647457, -0.17976932), (0.06927275, 0.07354564, -0.1780831), (0.06927275, 0.07354564, -0.17976932), (0.06927275, -0.07354564, -0.17976932), (0.06927275, -0.07354564, -0.1780831), (0.06220169, 0.06647457, -0.1780831), (0.06220169, -0.06647457, -0.1780831), (0.06927275, -0.07354564, -0.17976932), (0.06220169, -0.06647457, -0.17976932), (-0.06220169, -0.06647457, -0.17976932), (-0.06927275, -0.07354564, -0.17976932), (0.06927275, 0.07354564, -0.17976932), (0.06220169, -0.06647457, -0.17976932), (0.06927275, -0.07354564, -0.17976932), (0.06220169, 0.06647457, -0.17976932), (-0.06927275, 0.07354564, -0.17976932), (-0.06220169, 0.06647457, -0.17976932), (0.06927275, 0.07354564, -0.17976932), (-0.06927275, 0.07354564, -0.1780831), (0.06927275, 0.07354564, -0.1780831), (-0.06220169, 0.06647457, -0.1780831), (0.06220169, 0.06647457, -0.1780831), (0.06927275, -0.07354564, -0.1688388), (0.06927275, -0.07354564, -0.17052501), (-0.06927275, -0.07354564, -0.17052501), (-0.06927275, -0.07354564, -0.1688388), (0.06220169, -0.06647457, -0.1688388), (-0.06220169, -0.06647457, -0.1688388), (-0.06927275, -0.07354564, -0.1688388), (-0.06927275, -0.07354564, -0.17052501), (-0.06927275, 0.07354564, -0.17052501), (-0.06927275, 0.07354564, -0.1688388), (-0.06220169, -0.06647457, -0.1688388), (-0.06220169, 0.06647457, -0.1688388), (-0.06927275, -0.07354564, -0.17052501), (-0.06220169, 0.06647457, -0.17052501), (-0.06220169, -0.06647457, -0.17052501), (0.06927275, 0.07354564, -0.1688388), (0.06927275, 0.07354564, -0.17052501), (0.06927275, -0.07354564, -0.17052501), (0.06927275, -0.07354564, -0.1688388), (0.06220169, 0.06647457, -0.1688388), (0.06220169, -0.06647457, -0.1688388), (0.06927275, -0.07354564, -0.17052501), (0.06220169, -0.06647457, -0.17052501), (-0.06220169, -0.06647457, -0.17052501), (-0.06927275, -0.07354564, -0.17052501), (0.06927275, 0.07354564, -0.17052501), (0.06220169, -0.06647457, -0.17052501), (0.06927275, -0.07354564, -0.17052501), (0.06220169, 0.06647457, -0.17052501), (-0.06927275, 0.07354564, -0.17052501), (-0.06220169, 0.06647457, -0.17052501), (0.06927275, 0.07354564, -0.17052501), (-0.06927275, 0.07354564, -0.1688388), (0.06927275, 0.07354564, -0.1688388), (-0.06220169, 0.06647457, -0.1688388), (0.06220169, 0.06647457, -0.1688388), (0.06927275, -0.07354564, -0.15959613), (0.06927275, -0.07354564, -0.16128235), (-0.06927275, -0.07354564, -0.16128235), (-0.06927275, -0.07354564, -0.15959613), (0.06220169, -0.06647457, -0.15959613), (-0.06220169, -0.06647457, -0.15959613), (-0.06927275, -0.07354564, -0.15959613), (-0.06927275, -0.07354564, -0.16128235), (-0.06927275, 0.07354564, -0.16128235), (-0.06927275, 0.07354564, -0.15959613), (-0.06220169, -0.06647457, -0.15959613), (-0.06220169, 0.06647457, -0.15959613), (-0.06927275, -0.07354564, -0.16128235), (-0.06220169, 0.06647457, -0.16128235), (-0.06220169, -0.06647457, -0.16128235), (0.06927275, 0.07354564, -0.15959613), (0.06927275, 0.07354564, -0.16128235), (0.06927275, -0.07354564, -0.16128235), (0.06927275, -0.07354564, -0.15959613), (0.06220169, 0.06647457, -0.15959613), (0.06220169, -0.06647457, -0.15959613), (0.06927275, -0.07354564, -0.16128235), (0.06220169, -0.06647457, -0.16128235), (-0.06220169, -0.06647457, -0.16128235), (-0.06927275, -0.07354564, -0.16128235), (0.06927275, 0.07354564, -0.16128235), (0.06220169, -0.06647457, -0.16128235), (0.06927275, -0.07354564, -0.16128235), (0.06220169, 0.06647457, -0.16128235), (-0.06927275, 0.07354564, -0.16128235), (-0.06220169, 0.06647457, -0.16128235), (0.06927275, 0.07354564, -0.16128235), (-0.06927275, 0.07354564, -0.15959613), (0.06927275, 0.07354564, -0.15959613), (-0.06220169, 0.06647457, -0.15959613), (0.06220169, 0.06647457, -0.15959613), (0.06927275, -0.07354564, -0.15015587), (0.06927275, -0.07354564, -0.15184207), (-0.06927275, -0.07354564, -0.15184207), (-0.06927275, -0.07354564, -0.15015587), (0.06220169, -0.06647457, -0.15015587), (-0.06220169, -0.06647457, -0.15015587), (-0.06927275, -0.07354564, -0.15015587), (-0.06927275, -0.07354564, -0.15184207), (-0.06927275, 0.07354564, -0.15184207), (-0.06927275, 0.07354564, -0.15015587), (-0.06220169, -0.06647457, -0.15015587), (-0.06220169, 0.06647457, -0.15015587), (-0.06927275, -0.07354564, -0.15184207), (-0.06220169, 0.06647457, -0.15184207), (-0.06220169, -0.06647457, -0.15184207), (0.06927275, 0.07354564, -0.15015587), (0.06927275, 0.07354564, -0.15184207), (0.06927275, -0.07354564, -0.15184207), (0.06927275, -0.07354564, -0.15015587), (0.06220169, 0.06647457, -0.15015587), (0.06220169, -0.06647457, -0.15015587), (0.06927275, -0.07354564, -0.15184207), (0.06220169, -0.06647457, -0.15184207), (-0.06220169, -0.06647457, -0.15184207), (-0.06927275, -0.07354564, -0.15184207), (0.06927275, 0.07354564, -0.15184207), (0.06220169, -0.06647457, -0.15184207), (0.06927275, -0.07354564, -0.15184207), (0.06220169, 0.06647457, -0.15184207), (-0.06927275, 0.07354564, -0.15184207), (-0.06220169, 0.06647457, -0.15184207), (0.06927275, 0.07354564, -0.15184207), (-0.06927275, 0.07354564, -0.15015587), (0.06927275, 0.07354564, -0.15015587), (-0.06220169, 0.06647457, -0.15015587), (0.06220169, 0.06647457, -0.15015587), (0.06927275, -0.07354564, -0.139692), (0.06927275, -0.07354564, -0.14137821), (-0.06927275, -0.07354564, -0.14137821), (-0.06927275, -0.07354564, -0.139692), (0.06220169, -0.06647457, -0.139692), (-0.06220169, -0.06647457, -0.139692), (-0.06927275, -0.07354564, -0.139692), (-0.06927275, -0.07354564, -0.14137821), (-0.06927275, 0.07354564, -0.14137821), (-0.06927275, 0.07354564, -0.139692), (-0.06220169, -0.06647457, -0.139692), (-0.06220169, 0.06647457, -0.139692), (-0.06927275, -0.07354564, -0.14137821), (-0.06220169, 0.06647457, -0.14137821), (-0.06220169, -0.06647457, -0.14137821), (0.06927275, 0.07354564, -0.139692), (0.06927275, 0.07354564, -0.14137821), (0.06927275, -0.07354564, -0.14137821), (0.06927275, -0.07354564, -0.139692), (0.06220169, 0.06647457, -0.139692), (0.06220169, -0.06647457, -0.139692), (0.06927275, -0.07354564, -0.14137821), (0.06220169, -0.06647457, -0.14137821), (-0.06220169, -0.06647457, -0.14137821), (-0.06927275, -0.07354564, -0.14137821), (0.06927275, 0.07354564, -0.14137821), (0.06220169, -0.06647457, -0.14137821), (0.06927275, -0.07354564, -0.14137821), (0.06220169, 0.06647457, -0.14137821), (-0.06927275, 0.07354564, -0.14137821), (-0.06220169, 0.06647457, -0.14137821), (0.06927275, 0.07354564, -0.14137821), (-0.06927275, 0.07354564, -0.139692), (0.06927275, 0.07354564, -0.139692), (-0.06220169, 0.06647457, -0.139692), (0.06220169, 0.06647457, -0.139692), (0.06927275, -0.07354564, -0.13053535), (0.06927275, -0.07354564, -0.13222156), (-0.06927275, -0.07354564, -0.13222156), (-0.06927275, -0.07354564, -0.13053535), (0.06220169, -0.06647457, -0.13053535), (-0.06220169, -0.06647457, -0.13053535), (-0.06927275, -0.07354564, -0.13053535), (-0.06927275, -0.07354564, -0.13222156), (-0.06927275, 0.07354564, -0.13222156), (-0.06927275, 0.07354564, -0.13053535), (-0.06220169, -0.06647457, -0.13053535), (-0.06220169, 0.06647457, -0.13053535), (-0.06927275, -0.07354564, -0.13222156), (-0.06220169, 0.06647457, -0.13222156), (-0.06220169, -0.06647457, -0.13222156), (0.06927275, 0.07354564, -0.13053535), (0.06927275, 0.07354564, -0.13222156), (0.06927275, -0.07354564, -0.13222156), (0.06927275, -0.07354564, -0.13053535), (0.06220169, 0.06647457, -0.13053535), (0.06220169, -0.06647457, -0.13053535), (0.06927275, -0.07354564, -0.13222156), (0.06220169, -0.06647457, -0.13222156), (-0.06220169, -0.06647457, -0.13222156), (-0.06927275, -0.07354564, -0.13222156), (0.06927275, 0.07354564, -0.13222156), (0.06220169, -0.06647457, -0.13222156), (0.06927275, -0.07354564, -0.13222156), (0.06220169, 0.06647457, -0.13222156), (-0.06927275, 0.07354564, -0.13222156), (-0.06220169, 0.06647457, -0.13222156), (0.06927275, 0.07354564, -0.13222156), (-0.06927275, 0.07354564, -0.13053535), (0.06927275, 0.07354564, -0.13053535), (-0.06220169, 0.06647457, -0.13053535), (0.06220169, 0.06647457, -0.13053535), (0.06927275, -0.07354563, -0.12129268), (0.06927275, -0.07354564, -0.122978896), (-0.06927275, -0.07354564, -0.122978896), (-0.06927275, -0.07354563, -0.12129268), (0.06220169, -0.06647457, -0.12129268), (-0.06220169, -0.06647457, -0.12129268), (-0.06927275, -0.07354563, -0.12129268), (-0.06927275, -0.07354564, -0.122978896), (-0.06927275, 0.07354564, -0.122978896), (-0.06927275, 0.07354564, -0.12129268), (-0.06220169, -0.06647457, -0.12129268), (-0.06220169, 0.06647457, -0.12129268), (-0.06927275, -0.07354564, -0.122978896), (-0.06220169, 0.06647457, -0.122978896), (-0.06220169, -0.06647457, -0.122978896), (0.06927275, 0.07354564, -0.12129268), (0.06927275, 0.07354564, -0.122978896), (0.06927275, -0.07354564, -0.122978896), (0.06927275, -0.07354563, -0.12129268), (0.06220169, 0.06647457, -0.12129268), (0.06220169, -0.06647457, -0.12129268), (0.06927275, -0.07354564, -0.122978896), (0.06220169, -0.06647457, -0.122978896), (-0.06220169, -0.06647457, -0.122978896), (-0.06927275, -0.07354564, -0.122978896), (0.06927275, 0.07354564, -0.122978896), (0.06220169, -0.06647457, -0.122978896), (0.06927275, -0.07354564, -0.122978896), (0.06220169, 0.06647457, -0.122978896), (-0.06927275, 0.07354564, -0.122978896), (-0.06220169, 0.06647457, -0.122978896), (0.06927275, 0.07354564, -0.122978896), (-0.06927275, 0.07354564, -0.12129268), (0.06927275, 0.07354564, -0.12129268), (-0.06220169, 0.06647457, -0.12129268), (0.06220169, 0.06647457, -0.12129268), (0.06927275, -0.07354563, -0.111852415), (0.06927275, -0.07354563, -0.11353862), (-0.06927275, -0.07354563, -0.11353862), (-0.06927275, -0.07354563, -0.111852415), (0.06220169, -0.06647457, -0.111852415), (-0.06220169, -0.06647457, -0.111852415), (-0.06927275, -0.07354563, -0.111852415), (-0.06927275, -0.07354563, -0.11353862), (-0.06927275, 0.07354564, -0.11353862), (-0.06927275, 0.07354564, -0.111852415), (-0.06220169, -0.06647457, -0.111852415), (-0.06220169, 0.06647457, -0.111852415), (-0.06927275, -0.07354563, -0.11353862), (-0.06220169, 0.06647457, -0.11353862), (-0.06220169, -0.06647457, -0.11353862), (0.06927275, -0.07354563, -0.11353862), (0.06220169, -0.06647457, -0.11353862), (-0.06220169, -0.06647457, -0.11353862), (-0.06927275, -0.07354563, -0.11353862), (0.06927275, 0.07354564, -0.11353862), (0.06220169, 0.06647457, -0.11353862), (0.06220169, -0.06647457, -0.11353862), (0.06927275, -0.07354563, -0.11353862), (0.06927275, 0.07354564, -0.111852415), (0.06927275, -0.07354563, -0.11353862), (0.06927275, -0.07354563, -0.111852415), (0.06220169, 0.06647457, -0.111852415), (0.06220169, -0.06647457, -0.111852415), (-0.06927275, 0.07354564, -0.11353862), (-0.06220169, 0.06647457, -0.11353862), (0.06220169, 0.06647457, -0.11353862), (0.06927275, 0.07354564, -0.11353862), (-0.06927275, 0.07354564, -0.111852415), (0.06927275, 0.07354564, -0.111852415), (-0.06220169, 0.06647457, -0.111852415), (0.06220169, 0.06647457, -0.111852415), (0.06927275, -0.07354563, -0.101388544), (0.06927275, -0.07354563, -0.10307476), (-0.06927275, -0.07354563, -0.10307476), (-0.06927275, -0.07354563, -0.101388544), (0.06220169, -0.06647457, -0.101388544), (-0.06220169, -0.06647457, -0.101388544), (-0.06927275, -0.07354563, -0.101388544), (-0.06927275, -0.07354563, -0.10307476), (-0.06927275, 0.07354564, -0.10307476), (-0.06927275, 0.07354564, -0.101388544), (-0.06220169, -0.06647457, -0.101388544), (-0.06220169, 0.06647457, -0.101388544), (-0.06927275, -0.07354563, -0.10307476), (-0.06220169, 0.06647457, -0.10307476), (-0.06220169, -0.06647457, -0.10307476), (0.06927275, -0.07354563, -0.10307476), (0.06220169, -0.06647457, -0.10307476), (-0.06220169, -0.06647457, -0.10307476), (-0.06927275, -0.07354563, -0.10307476), (0.06927275, 0.07354564, -0.10307476), (0.06220169, 0.06647457, -0.10307476), (0.06220169, -0.06647457, -0.10307476), (0.06927275, -0.07354563, -0.10307476), (0.06927275, 0.07354564, -0.101388544), (0.06927275, -0.07354563, -0.10307476), (0.06927275, -0.07354563, -0.101388544), (0.06220169, 0.06647457, -0.101388544), (0.06220169, -0.06647457, -0.101388544), (-0.06927275, 0.07354564, -0.10307476), (-0.06220169, 0.06647457, -0.10307476), (0.06220169, 0.06647457, -0.10307476), (0.06927275, 0.07354564, -0.10307476), (-0.06927275, 0.07354564, -0.101388544), (0.06927275, 0.07354564, -0.101388544), (-0.06220169, 0.06647457, -0.101388544), (0.06220169, 0.06647457, -0.101388544), (0.06927275, -0.07354563, -0.09046688), (0.06927275, -0.07354563, -0.09215309), (-0.06927275, -0.07354563, -0.09215309), (-0.06927275, -0.07354563, -0.09046688), (0.06220169, -0.06647457, -0.09046688), (-0.06220169, -0.06647457, -0.09046688), (-0.06927275, -0.07354563, -0.09046688), (-0.06927275, -0.07354563, -0.09215309), (-0.06927275, 0.07354564, -0.09215309), (-0.06927275, 0.07354564, -0.09046688), (-0.06220169, -0.06647457, -0.09046688), (-0.06220169, 0.06647457, -0.09046688), (-0.06927275, -0.07354563, -0.09215309), (-0.06220169, 0.06647457, -0.09215309), (-0.06220169, -0.06647457, -0.09215309), (0.06927275, -0.07354563, -0.09215309), (0.06220169, -0.06647457, -0.09215309), (-0.06220169, -0.06647457, -0.09215309), (-0.06927275, -0.07354563, -0.09215309), (0.06927275, 0.07354564, -0.09215309), (0.06220169, 0.06647457, -0.09215309), (0.06220169, -0.06647457, -0.09215309), (0.06927275, -0.07354563, -0.09215309), (0.06927275, 0.07354564, -0.09046688), (0.06927275, -0.07354563, -0.09215309), (0.06927275, -0.07354563, -0.09046688), (0.06220169, 0.06647457, -0.09046688), (0.06220169, -0.06647457, -0.09046688), (-0.06927275, 0.07354564, -0.09215309), (-0.06220169, 0.06647457, -0.09215309), (0.06220169, 0.06647457, -0.09215309), (0.06927275, 0.07354564, -0.09215309), (-0.06927275, 0.07354564, -0.09046688), (0.06927275, 0.07354564, -0.09046688), (-0.06220169, 0.06647457, -0.09046688), (0.06220169, 0.06647457, -0.09046688), (0.06927275, -0.07354563, -0.08122421), (0.06927275, -0.07354563, -0.08291042), (-0.06927275, -0.07354563, -0.08291042), (-0.06927275, -0.07354563, -0.08122421), (0.06220169, -0.06647457, -0.08122421), (-0.06220169, -0.06647457, -0.08122421), (-0.06927275, -0.07354563, -0.08122421), (-0.06927275, -0.07354563, -0.08291042), (-0.06927275, 0.07354564, -0.08291042), (-0.06927275, 0.07354564, -0.08122421), (-0.06220169, -0.06647457, -0.08122421), (-0.06220169, 0.06647457, -0.08122421), (-0.06927275, -0.07354563, -0.08291042), (-0.06220169, 0.06647457, -0.08291042), (-0.06220169, -0.06647457, -0.08291042), (0.06927275, -0.07354563, -0.08291042), (0.06220169, -0.06647457, -0.08291042), (-0.06220169, -0.06647457, -0.08291042), (-0.06927275, -0.07354563, -0.08291042), (0.06927275, 0.07354564, -0.08291042), (0.06220169, 0.06647457, -0.08291042), (0.06220169, -0.06647457, -0.08291042), (0.06927275, -0.07354563, -0.08291042), (0.06927275, 0.07354564, -0.08122421), (0.06927275, -0.07354563, -0.08291042), (0.06927275, -0.07354563, -0.08122421), (0.06220169, 0.06647457, -0.08122421), (0.06220169, -0.06647457, -0.08122421), (-0.06927275, 0.07354564, -0.08291042), (-0.06220169, 0.06647457, -0.08291042), (0.06220169, 0.06647457, -0.08291042), (0.06927275, 0.07354564, -0.08291042), (-0.06927275, 0.07354564, -0.08122421), (0.06927275, 0.07354564, -0.08122421), (-0.06220169, 0.06647457, -0.08122421), (0.06220169, 0.06647457, -0.08122421), (0.06927275, -0.07354563, -0.071783945), (0.06927275, -0.07354563, -0.07347015), (-0.06927275, -0.07354563, -0.07347015), (-0.06927275, -0.07354563, -0.071783945), (0.06220169, -0.06647457, -0.071783945), (-0.06220169, -0.06647457, -0.071783945), (-0.06927275, -0.07354563, -0.071783945), (-0.06927275, -0.07354563, -0.07347015), (-0.06927275, 0.07354564, -0.07347015), (-0.06927275, 0.07354564, -0.071783945), (-0.06220169, -0.06647457, -0.071783945), (-0.06220169, 0.06647457, -0.071783945), (-0.06927275, -0.07354563, -0.07347015), (-0.06220169, 0.06647457, -0.07347015), (-0.06220169, -0.06647457, -0.07347015), (0.06927275, -0.07354563, -0.07347015), (0.06220169, -0.06647457, -0.07347015), (-0.06220169, -0.06647457, -0.07347015), (-0.06927275, -0.07354563, -0.07347015), (0.06927275, 0.07354564, -0.07347015), (0.06220169, 0.06647457, -0.07347015), (0.06220169, -0.06647457, -0.07347015), (0.06927275, -0.07354563, -0.07347015), (0.06927275, 0.07354564, -0.071783945), (0.06927275, -0.07354563, -0.07347015), (0.06927275, -0.07354563, -0.071783945), (0.06220169, 0.06647457, -0.071783945), (0.06220169, -0.06647457, -0.071783945), (-0.06927275, 0.07354564, -0.07347015), (-0.06220169, 0.06647457, -0.07347015), (0.06220169, 0.06647457, -0.07347015), (0.06927275, 0.07354564, -0.07347015), (-0.06927275, 0.07354564, -0.071783945), (0.06927275, 0.07354564, -0.071783945), (-0.06220169, 0.06647457, -0.071783945), (0.06220169, 0.06647457, -0.071783945), (0.06927275, -0.07354563, -0.061320074), (0.06927275, -0.07354563, -0.06300628), (-0.06927275, -0.07354563, -0.06300628), (-0.06927275, -0.07354563, -0.061320074), (0.06220169, -0.06647457, -0.061320074), (-0.06220169, -0.06647457, -0.061320074), (-0.06927275, -0.07354563, -0.061320074), (-0.06927275, -0.07354563, -0.06300628), (-0.06927275, 0.07354564, -0.06300628), (-0.06927275, 0.07354564, -0.061320074), (-0.06220169, -0.06647457, -0.061320074), (-0.06220169, 0.06647457, -0.061320074), (-0.06927275, -0.07354563, -0.06300628), (-0.06220169, 0.06647457, -0.06300628), (-0.06220169, -0.06647457, -0.06300628), (0.06927275, -0.07354563, -0.06300628), (0.06220169, -0.06647457, -0.06300628), (-0.06220169, -0.06647457, -0.06300628), (-0.06927275, -0.07354563, -0.06300628), (0.06927275, 0.07354564, -0.06300628), (0.06220169, 0.06647457, -0.06300628), (0.06220169, -0.06647457, -0.06300628), (0.06927275, -0.07354563, -0.06300628), (0.06927275, 0.07354564, -0.061320074), (0.06927275, -0.07354563, -0.06300628), (0.06927275, -0.07354563, -0.061320074), (0.06220169, 0.06647457, -0.061320074), (0.06220169, -0.06647457, -0.061320074), (-0.06927275, 0.07354564, -0.06300628), (-0.06220169, 0.06647457, -0.06300628), (0.06220169, 0.06647457, -0.06300628), (0.06927275, 0.07354564, -0.06300628), (-0.06927275, 0.07354564, -0.061320074), (0.06927275, 0.07354564, -0.061320074), (-0.06220169, 0.06647457, -0.061320074), (0.06220169, 0.06647457, -0.061320074), (0.06927275, -0.07354563, -0.04928211), (0.06927275, -0.07354563, -0.050968323), (-0.06927275, -0.07354563, -0.050968323), (-0.06927275, -0.07354563, -0.04928211), (0.06220169, -0.06647457, -0.04928211), (-0.06220169, -0.06647457, -0.04928211), (-0.06927275, -0.07354563, -0.04928211), (-0.06927275, -0.07354563, -0.050968323), (-0.06927275, 0.07354564, -0.050968323), (-0.06927275, 0.07354564, -0.04928211), (-0.06220169, -0.06647457, -0.04928211), (-0.06220169, 0.06647457, -0.04928211), (-0.06927275, -0.07354563, -0.050968323), (-0.06220169, 0.06647457, -0.050968323), (-0.06220169, -0.06647457, -0.050968323), (0.06927275, -0.07354563, -0.050968323), (0.06220169, -0.06647457, -0.050968323), (-0.06220169, -0.06647457, -0.050968323), (-0.06927275, -0.07354563, -0.050968323), (0.06927275, 0.07354564, -0.050968323), (0.06220169, 0.06647457, -0.050968323), (0.06220169, -0.06647457, -0.050968323), (0.06927275, -0.07354563, -0.050968323), (0.06927275, 0.07354564, -0.04928211), (0.06927275, -0.07354563, -0.050968323), (0.06927275, -0.07354563, -0.04928211), (0.06220169, 0.06647457, -0.04928211), (0.06220169, -0.06647457, -0.04928211), (-0.06927275, 0.07354564, -0.050968323), (-0.06220169, 0.06647457, -0.050968323), (0.06220169, 0.06647457, -0.050968323), (0.06927275, 0.07354564, -0.050968323), (-0.06927275, 0.07354564, -0.04928211), (0.06927275, 0.07354564, -0.04928211), (-0.06220169, 0.06647457, -0.04928211), (0.06220169, 0.06647457, -0.04928211), (0.06927275, -0.07354563, -0.040039442), (0.06927275, -0.07354563, -0.041725654), (-0.06927275, -0.07354563, -0.041725654), (-0.06927275, -0.07354563, -0.040039442), (0.06220169, -0.06647457, -0.040039442), (-0.06220169, -0.06647457, -0.040039442), (-0.06927275, -0.07354563, -0.040039442), (-0.06927275, -0.07354563, -0.041725654), (-0.06927275, 0.07354564, -0.041725654), (-0.06927275, 0.07354564, -0.040039442), (-0.06220169, -0.06647457, -0.040039442), (-0.06220169, 0.06647457, -0.040039442), (-0.06927275, -0.07354563, -0.041725654), (-0.06220169, 0.06647457, -0.041725654), (-0.06220169, -0.06647457, -0.041725654), (0.06927275, -0.07354563, -0.041725654), (0.06220169, -0.06647457, -0.041725654), (-0.06220169, -0.06647457, -0.041725654), (-0.06927275, -0.07354563, -0.041725654), (0.06927275, 0.07354564, -0.041725654), (0.06220169, 0.06647457, -0.041725654), (0.06220169, -0.06647457, -0.041725654), (0.06927275, -0.07354563, -0.041725654), (0.06927275, 0.07354564, -0.040039442), (0.06927275, -0.07354563, -0.041725654), (0.06927275, -0.07354563, -0.040039442), (0.06220169, 0.06647457, -0.040039442), (0.06220169, -0.06647457, -0.040039442), (-0.06927275, 0.07354564, -0.041725654), (-0.06220169, 0.06647457, -0.041725654), (0.06220169, 0.06647457, -0.041725654), (0.06927275, 0.07354564, -0.041725654), (-0.06927275, 0.07354564, -0.040039442), (0.06927275, 0.07354564, -0.040039442), (-0.06220169, 0.06647457, -0.040039442), (0.06220169, 0.06647457, -0.040039442), (0.06927275, -0.07354563, -0.030599173), (0.06927275, -0.07354563, -0.032285385), (-0.06927275, -0.07354563, -0.032285385), (-0.06927275, -0.07354563, -0.030599173), (0.06220169, -0.06647457, -0.030599173), (-0.06220169, -0.06647457, -0.030599173), (-0.06927275, -0.07354563, -0.030599173), (-0.06927275, -0.07354563, -0.032285385), (-0.06927275, 0.07354564, -0.032285385), (-0.06927275, 0.07354564, -0.030599173), (-0.06220169, -0.06647457, -0.030599173), (-0.06220169, 0.06647457, -0.030599173), (-0.06927275, -0.07354563, -0.032285385), (-0.06220169, 0.06647457, -0.032285385), (-0.06220169, -0.06647457, -0.032285385), (0.06927275, -0.07354563, -0.032285385), (0.06220169, -0.06647457, -0.032285385), (-0.06220169, -0.06647457, -0.032285385), (-0.06927275, -0.07354563, -0.032285385), (0.06927275, 0.07354564, -0.032285385), (0.06220169, 0.06647457, -0.032285385), (0.06220169, -0.06647457, -0.032285385), (0.06927275, -0.07354563, -0.032285385), (0.06927275, 0.07354564, -0.030599173), (0.06927275, -0.07354563, -0.032285385), (0.06927275, -0.07354563, -0.030599173), (0.06220169, 0.06647457, -0.030599173), (0.06220169, -0.06647457, -0.030599173), (-0.06927275, 0.07354564, -0.032285385), (-0.06220169, 0.06647457, -0.032285385), (0.06220169, 0.06647457, -0.032285385), (0.06927275, 0.07354564, -0.032285385), (-0.06927275, 0.07354564, -0.030599173), (0.06927275, 0.07354564, -0.030599173), (-0.06220169, 0.06647457, -0.030599173), (0.06220169, 0.06647457, -0.030599173), (0.06927275, -0.07354563, -0.020135308), (0.06927275, -0.07354563, -0.021821517), (-0.06927275, -0.07354563, -0.021821517), (-0.06927275, -0.07354563, -0.020135308), (0.06220169, -0.06647457, -0.020135308), (-0.06220169, -0.06647457, -0.020135308), (-0.06927275, -0.07354563, -0.020135308), (-0.06927275, -0.07354563, -0.021821517), (-0.06927275, 0.07354564, -0.021821517), (-0.06927275, 0.07354564, -0.020135308), (-0.06220169, -0.06647457, -0.020135308), (-0.06220169, 0.06647457, -0.020135308), (-0.06927275, -0.07354563, -0.021821517), (-0.06220169, 0.06647457, -0.021821517), (-0.06220169, -0.06647457, -0.021821517), (0.06927275, -0.07354563, -0.021821517), (0.06220169, -0.06647457, -0.021821517), (-0.06220169, -0.06647457, -0.021821517), (-0.06927275, -0.07354563, -0.021821517), (0.06927275, 0.07354564, -0.021821517), (0.06220169, 0.06647457, -0.021821517), (0.06220169, -0.06647457, -0.021821517), (0.06927275, -0.07354563, -0.021821517), (0.06927275, 0.07354564, -0.020135308), (0.06927275, -0.07354563, -0.021821517), (0.06927275, -0.07354563, -0.020135308), (0.06220169, 0.06647457, -0.020135308), (0.06220169, -0.06647457, -0.020135308), (-0.06927275, 0.07354564, -0.021821517), (-0.06220169, 0.06647457, -0.021821517), (0.06220169, 0.06647457, -0.021821517), (0.06927275, 0.07354564, -0.021821517), (-0.06927275, 0.07354564, -0.020135308), (0.06927275, 0.07354564, -0.020135308), (-0.06220169, 0.06647457, -0.020135308), (0.06220169, 0.06647457, -0.020135308), (0.06927275, -0.07354563, -0.009138355), (0.06927275, -0.07354563, -0.010824566), (-0.06927275, -0.07354563, -0.010824566), (-0.06927275, -0.07354563, -0.009138355), (0.06220169, -0.06647457, -0.009138355), (-0.06220169, -0.06647457, -0.009138355), (-0.06927275, -0.07354563, -0.009138355), (-0.06927275, -0.07354563, -0.010824566), (-0.06927275, 0.07354564, -0.010824566), (-0.06927275, 0.07354564, -0.009138355), (-0.06220169, -0.06647457, -0.009138355), (-0.06220169, 0.06647457, -0.009138355), (-0.06927275, -0.07354563, -0.010824566), (-0.06220169, 0.06647457, -0.010824566), (-0.06220169, -0.06647457, -0.010824566), (0.06927275, -0.07354563, -0.010824566), (0.06220169, -0.06647457, -0.010824566), (-0.06220169, -0.06647457, -0.010824566), (-0.06927275, -0.07354563, -0.010824566), (0.06927275, 0.07354564, -0.010824566), (0.06220169, 0.06647457, -0.010824566), (0.06220169, -0.06647457, -0.010824566), (0.06927275, -0.07354563, -0.010824566), (0.06927275, 0.07354564, -0.009138355), (0.06927275, -0.07354563, -0.010824566), (0.06927275, -0.07354563, -0.009138355), (0.06220169, 0.06647457, -0.009138355), (0.06220169, -0.06647457, -0.009138355), (-0.06927275, 0.07354564, -0.010824566), (-0.06220169, 0.06647457, -0.010824566), (0.06220169, 0.06647457, -0.010824566), (0.06927275, 0.07354564, -0.010824566), (-0.06927275, 0.07354564, -0.009138355), (0.06927275, 0.07354564, -0.009138355), (-0.06220169, 0.06647457, -0.009138355), (0.06220169, 0.06647457, -0.009138355), (0.06927275, -0.07354563, 0.000104312894), (0.06927275, -0.07354563, -0.0015818977), (-0.06927275, -0.07354563, -0.0015818977), (-0.06927275, -0.07354563, 0.000104312894), (0.06220169, -0.06647457, 0.000104312894), (-0.06220169, -0.06647457, 0.000104312894), (-0.06927275, -0.07354563, 0.000104312894), (-0.06927275, -0.07354563, -0.0015818977), (-0.06927275, 0.07354564, -0.0015818977), (-0.06927275, 0.07354564, 0.000104312894), (-0.06220169, -0.06647457, 0.000104312894), (-0.06220169, 0.06647457, 0.000104312894), (-0.06927275, -0.07354563, -0.0015818977), (-0.06220169, 0.06647457, -0.0015818977), (-0.06220169, -0.06647457, -0.0015818977), (0.06927275, -0.07354563, -0.0015818977), (0.06220169, -0.06647457, -0.0015818977), (-0.06220169, -0.06647457, -0.0015818977), (-0.06927275, -0.07354563, -0.0015818977), (0.06927275, 0.07354564, -0.0015818977), (0.06220169, 0.06647457, -0.0015818977), (0.06220169, -0.06647457, -0.0015818977), (0.06927275, -0.07354563, -0.0015818977), (0.06927275, 0.07354564, 0.000104312894), (0.06927275, -0.07354563, -0.0015818977), (0.06927275, -0.07354563, 0.000104312894), (0.06220169, 0.06647457, 0.000104312894), (0.06220169, -0.06647457, 0.000104312894), (-0.06927275, 0.07354564, -0.0015818977), (-0.06220169, 0.06647457, -0.0015818977), (0.06220169, 0.06647457, -0.0015818977), (0.06927275, 0.07354564, -0.0015818977), (-0.06927275, 0.07354564, 0.000104312894), (0.06927275, 0.07354564, 0.000104312894), (-0.06220169, 0.06647457, 0.000104312894), (0.06220169, 0.06647457, 0.000104312894), (0.06927275, -0.07354563, 0.009544602), (0.06927275, -0.07354563, 0.007858391), (-0.06927275, -0.07354563, 0.007858391), (-0.06927275, -0.07354563, 0.009544602), (0.06220169, -0.06647457, 0.009544602), (-0.06220169, -0.06647457, 0.009544602), (-0.06927275, -0.07354563, 0.009544602), (-0.06927275, -0.07354563, 0.007858391), (-0.06927275, 0.07354564, 0.007858391), (-0.06927275, 0.07354564, 0.009544602), (-0.06220169, -0.06647457, 0.009544602), (-0.06220169, 0.06647457, 0.009544602), (-0.06927275, -0.07354563, 0.007858391), (-0.06220169, 0.06647457, 0.007858391), (-0.06220169, -0.06647457, 0.007858391), (0.06927275, -0.07354563, 0.007858391), (0.06220169, -0.06647457, 0.007858391), (-0.06220169, -0.06647457, 0.007858391), (-0.06927275, -0.07354563, 0.007858391), (0.06927275, 0.07354564, 0.007858391), (0.06220169, 0.06647457, 0.007858391), (0.06220169, -0.06647457, 0.007858391), (0.06927275, -0.07354563, 0.007858391), (0.06927275, 0.07354564, 0.009544602), (0.06927275, -0.07354563, 0.007858391), (0.06927275, -0.07354563, 0.009544602), (0.06220169, 0.06647457, 0.009544602), (0.06220169, -0.06647457, 0.009544602), (-0.06927275, 0.07354564, 0.007858391), (-0.06220169, 0.06647457, 0.007858391), (0.06220169, 0.06647457, 0.007858391), (0.06927275, 0.07354564, 0.007858391), (-0.06927275, 0.07354564, 0.009544602), (0.06927275, 0.07354564, 0.009544602), (-0.06220169, 0.06647457, 0.009544602), (0.06220169, 0.06647457, 0.009544602), (0.06927275, -0.07354563, 0.020008469), (0.06927275, -0.07354563, 0.018322257), (-0.06927275, -0.07354563, 0.018322257), (-0.06927275, -0.07354563, 0.020008469), (0.06220169, -0.06647457, 0.020008469), (-0.06220169, -0.06647457, 0.020008469), (-0.06927275, -0.07354563, 0.020008469), (-0.06927275, -0.07354563, 0.018322257), (-0.06927275, 0.07354564, 0.018322257), (-0.06927275, 0.07354564, 0.020008469), (-0.06220169, -0.06647457, 0.020008469), (-0.06220169, 0.06647457, 0.020008469), (-0.06927275, -0.07354563, 0.018322257), (-0.06220169, 0.06647457, 0.018322257), (-0.06220169, -0.06647457, 0.018322257), (0.06927275, -0.07354563, 0.018322257), (0.06220169, -0.06647457, 0.018322257), (-0.06220169, -0.06647457, 0.018322257), (-0.06927275, -0.07354563, 0.018322257), (0.06927275, 0.07354564, 0.018322257), (0.06220169, 0.06647457, 0.018322257), (0.06220169, -0.06647457, 0.018322257), (0.06927275, -0.07354563, 0.018322257), (0.06927275, 0.07354564, 0.020008469), (0.06927275, -0.07354563, 0.018322257), (0.06927275, -0.07354563, 0.020008469), (0.06220169, 0.06647457, 0.020008469), (0.06220169, -0.06647457, 0.020008469), (-0.06927275, 0.07354564, 0.018322257), (-0.06220169, 0.06647457, 0.018322257), (0.06220169, 0.06647457, 0.018322257), (0.06927275, 0.07354564, 0.018322257), (-0.06927275, 0.07354564, 0.020008469), (0.06927275, 0.07354564, 0.020008469), (-0.06220169, 0.06647457, 0.020008469), (0.06220169, 0.06647457, 0.020008469), (0.06927275, -0.07354563, 0.031881295), (0.06927275, -0.07354563, 0.030195083), (-0.06927275, -0.07354563, 0.030195083), (-0.06927275, -0.07354563, 0.031881295), (0.06220169, -0.06647457, 0.031881295), (-0.06220169, -0.06647457, 0.031881295), (-0.06927275, -0.07354563, 0.031881295), (-0.06927275, -0.07354563, 0.030195083), (-0.06927275, 0.07354564, 0.030195083), (-0.06927275, 0.07354564, 0.031881295), (-0.06220169, -0.06647457, 0.031881295), (-0.06220169, 0.06647457, 0.031881295), (-0.06927275, -0.07354563, 0.030195083), (-0.06220169, 0.06647457, 0.030195083), (-0.06220169, -0.06647457, 0.030195083), (0.06927275, -0.07354563, 0.030195083), (0.06220169, -0.06647457, 0.030195083), (-0.06220169, -0.06647457, 0.030195083), (-0.06927275, -0.07354563, 0.030195083), (0.06927275, 0.07354564, 0.030195083), (0.06220169, 0.06647457, 0.030195083), (0.06220169, -0.06647457, 0.030195083), (0.06927275, -0.07354563, 0.030195083), (0.06927275, 0.07354564, 0.031881295), (0.06927275, -0.07354563, 0.030195083), (0.06927275, -0.07354563, 0.031881295), (0.06220169, 0.06647457, 0.031881295), (0.06220169, -0.06647457, 0.031881295), (-0.06927275, 0.07354564, 0.030195083), (-0.06220169, 0.06647457, 0.030195083), (0.06220169, 0.06647457, 0.030195083), (0.06927275, 0.07354564, 0.030195083), (-0.06927275, 0.07354564, 0.031881295), (0.06927275, 0.07354564, 0.031881295), (-0.06220169, 0.06647457, 0.031881295), (0.06220169, 0.06647457, 0.031881295), (0.06927275, -0.07354563, 0.04112396), (0.06927275, -0.07354563, 0.039437752), (-0.06927275, -0.07354563, 0.039437752), (-0.06927275, -0.07354563, 0.04112396), (0.06220169, -0.06647457, 0.04112396), (-0.06220169, -0.06647457, 0.04112396), (-0.06927275, -0.07354563, 0.04112396), (-0.06927275, -0.07354563, 0.039437752), (-0.06927275, 0.07354564, 0.039437752), (-0.06927275, 0.07354564, 0.04112396), (-0.06220169, -0.06647457, 0.04112396), (-0.06220169, 0.06647457, 0.04112396), (-0.06927275, -0.07354563, 0.039437752), (-0.06220169, 0.06647457, 0.039437752), (-0.06220169, -0.06647457, 0.039437752), (0.06927275, -0.07354563, 0.039437752), (0.06220169, -0.06647457, 0.039437752), (-0.06220169, -0.06647457, 0.039437752), (-0.06927275, -0.07354563, 0.039437752), (0.06927275, 0.07354564, 0.039437752), (0.06220169, 0.06647457, 0.039437752), (0.06220169, -0.06647457, 0.039437752), (0.06927275, -0.07354563, 0.039437752), (0.06927275, 0.07354564, 0.04112396), (0.06927275, -0.07354563, 0.039437752), (0.06927275, -0.07354563, 0.04112396), (0.06220169, 0.06647457, 0.04112396), (0.06220169, -0.06647457, 0.04112396), (-0.06927275, 0.07354564, 0.039437752), (-0.06220169, 0.06647457, 0.039437752), (0.06220169, 0.06647457, 0.039437752), (0.06927275, 0.07354564, 0.039437752), (-0.06927275, 0.07354564, 0.04112396), (0.06927275, 0.07354564, 0.04112396), (-0.06220169, 0.06647457, 0.04112396), (0.06220169, 0.06647457, 0.04112396), (0.06927275, -0.07354563, 0.050564248), (0.06927275, -0.07354563, 0.04887804), (-0.06927275, -0.07354563, 0.04887804), (-0.06927275, -0.07354563, 0.050564248), (0.06220169, -0.06647457, 0.050564248), (-0.06220169, -0.06647457, 0.050564248), (-0.06927275, -0.07354563, 0.050564248), (-0.06927275, -0.07354563, 0.04887804), (-0.06927275, 0.07354564, 0.04887804), (-0.06927275, 0.07354564, 0.050564248), (-0.06220169, -0.06647457, 0.050564248), (-0.06220169, 0.06647457, 0.050564248), (-0.06927275, -0.07354563, 0.04887804), (-0.06220169, 0.06647457, 0.04887804), (-0.06220169, -0.06647457, 0.04887804), (0.06927275, -0.07354563, 0.04887804), (0.06220169, -0.06647457, 0.04887804), (-0.06220169, -0.06647457, 0.04887804), (-0.06927275, -0.07354563, 0.04887804), (0.06927275, 0.07354564, 0.04887804), (0.06220169, 0.06647457, 0.04887804), (0.06220169, -0.06647457, 0.04887804), (0.06927275, -0.07354563, 0.04887804), (0.06927275, 0.07354564, 0.050564248), (0.06927275, -0.07354563, 0.04887804), (0.06927275, -0.07354563, 0.050564248), (0.06220169, 0.06647457, 0.050564248), (0.06220169, -0.06647457, 0.050564248), (-0.06927275, 0.07354564, 0.04887804), (-0.06220169, 0.06647457, 0.04887804), (0.06220169, 0.06647457, 0.04887804), (0.06927275, 0.07354564, 0.04887804), (-0.06927275, 0.07354564, 0.050564248), (0.06927275, 0.07354564, 0.050564248), (-0.06220169, 0.06647457, 0.050564248), (0.06220169, 0.06647457, 0.050564248), (0.06927275, -0.07354563, 0.061028115), (0.06927275, -0.07354563, 0.059341908), (-0.06927275, -0.07354563, 0.059341908), (-0.06927275, -0.07354563, 0.061028115), (0.06220169, -0.06647457, 0.061028115), (-0.06220169, -0.06647457, 0.061028115), (-0.06927275, -0.07354563, 0.061028115), (-0.06927275, -0.07354563, 0.059341908), (-0.06927275, 0.07354564, 0.059341908), (-0.06927275, 0.07354564, 0.061028115), (-0.06220169, -0.06647457, 0.061028115), (-0.06220169, 0.06647457, 0.061028115), (-0.06927275, -0.07354563, 0.059341908), (-0.06220169, 0.06647457, 0.059341908), (-0.06220169, -0.06647457, 0.059341908), (0.06927275, -0.07354563, 0.059341908), (0.06220169, -0.06647457, 0.059341908), (-0.06220169, -0.06647457, 0.059341908), (-0.06927275, -0.07354563, 0.059341908), (0.06927275, 0.07354564, 0.059341908), (0.06220169, 0.06647457, 0.059341908), (0.06220169, -0.06647457, 0.059341908), (0.06927275, -0.07354563, 0.059341908), (0.06927275, 0.07354564, 0.061028115), (0.06927275, -0.07354563, 0.059341908), (0.06927275, -0.07354563, 0.061028115), (0.06220169, 0.06647457, 0.061028115), (0.06220169, -0.06647457, 0.061028115), (-0.06927275, 0.07354564, 0.059341908), (-0.06220169, 0.06647457, 0.059341908), (0.06220169, 0.06647457, 0.059341908), (0.06927275, 0.07354564, 0.059341908), (-0.06927275, 0.07354564, 0.061028115), (0.06927275, 0.07354564, 0.061028115), (-0.06220169, 0.06647457, 0.061028115), (0.06220169, 0.06647457, 0.061028115), (0.06927275, -0.07354563, 0.07285139), (0.06927275, -0.07354563, 0.07116518), (-0.06927275, -0.07354563, 0.07116518), (-0.06927275, -0.07354563, 0.07285139), (0.06220169, -0.06647457, 0.07285139), (-0.06220169, -0.06647457, 0.07285139), (-0.06927275, -0.07354563, 0.07285139), (-0.06927275, -0.07354563, 0.07116518), (-0.06927275, 0.07354564, 0.07116518), (-0.06927275, 0.07354564, 0.07285139), (-0.06220169, -0.06647457, 0.07285139), (-0.06220169, 0.06647457, 0.07285139), (-0.06927275, -0.07354563, 0.07116518), (-0.06220169, 0.06647457, 0.07116518), (-0.06220169, -0.06647457, 0.07116518), (0.06927275, -0.07354563, 0.07116518), (0.06220169, -0.06647457, 0.07116518), (-0.06220169, -0.06647457, 0.07116518), (-0.06927275, -0.07354563, 0.07116518), (0.06927275, 0.07354564, 0.07116518), (0.06220169, 0.06647457, 0.07116518), (0.06220169, -0.06647457, 0.07116518), (0.06927275, -0.07354563, 0.07116518), (0.06927275, 0.07354564, 0.07285139), (0.06927275, -0.07354563, 0.07116518), (0.06927275, -0.07354563, 0.07285139), (0.06220169, 0.06647457, 0.07285139), (0.06220169, -0.06647457, 0.07285139), (-0.06927275, 0.07354564, 0.07116518), (-0.06220169, 0.06647457, 0.07116518), (0.06220169, 0.06647457, 0.07116518), (0.06927275, 0.07354564, 0.07116518), (-0.06927275, 0.07354564, 0.07285139), (0.06927275, 0.07354564, 0.07285139), (-0.06220169, 0.06647457, 0.07285139), (0.06220169, 0.06647457, 0.07285139), (0.06927275, -0.07354563, 0.08209406), (0.06927275, -0.07354563, 0.08040784), (-0.06927275, -0.07354563, 0.08040784), (-0.06927275, -0.07354563, 0.08209406), (0.06220169, -0.06647457, 0.08209406), (-0.06220169, -0.06647457, 0.08209406), (-0.06927275, -0.07354563, 0.08209406), (-0.06927275, -0.07354563, 0.08040784), (-0.06927275, 0.07354564, 0.08040784), (-0.06927275, 0.07354564, 0.08209406), (-0.06220169, -0.06647457, 0.08209406), (-0.06220169, 0.06647457, 0.08209406), (-0.06927275, -0.07354563, 0.08040784), (-0.06220169, 0.06647457, 0.08040784), (-0.06220169, -0.06647457, 0.08040784), (0.06927275, -0.07354563, 0.08040784), (0.06220169, -0.06647457, 0.08040784), (-0.06220169, -0.06647457, 0.08040784), (-0.06927275, -0.07354563, 0.08040784), (0.06927275, 0.07354564, 0.08040784), (0.06220169, 0.06647457, 0.08040784), (0.06220169, -0.06647457, 0.08040784), (0.06927275, -0.07354563, 0.08040784), (0.06927275, 0.07354564, 0.08209406), (0.06927275, -0.07354563, 0.08040784), (0.06927275, -0.07354563, 0.08209406), (0.06220169, 0.06647457, 0.08209406), (0.06220169, -0.06647457, 0.08209406), (-0.06927275, 0.07354564, 0.08040784), (-0.06220169, 0.06647457, 0.08040784), (0.06220169, 0.06647457, 0.08040784), (0.06927275, 0.07354564, 0.08040784), (-0.06927275, 0.07354564, 0.08209406), (0.06927275, 0.07354564, 0.08209406), (-0.06220169, 0.06647457, 0.08209406), (0.06220169, 0.06647457, 0.08209406), (0.06927275, -0.07354563, 0.09153435), (0.06927275, -0.07354563, 0.08984814), (-0.06927275, -0.07354563, 0.08984814), (-0.06927275, -0.07354563, 0.09153435), (0.06220169, -0.06647457, 0.09153435), (-0.06220169, -0.06647457, 0.09153435), (-0.06927275, -0.07354563, 0.09153435), (-0.06927275, -0.07354563, 0.08984814), (-0.06927275, 0.07354564, 0.08984814), (-0.06927275, 0.07354564, 0.09153435), (-0.06220169, -0.06647457, 0.09153435), (-0.06220169, 0.06647457, 0.09153435), (-0.06927275, -0.07354563, 0.08984814), (-0.06220169, 0.06647457, 0.08984814), (-0.06220169, -0.06647457, 0.08984814), (0.06927275, -0.07354563, 0.08984814), (0.06220169, -0.06647457, 0.08984814), (-0.06220169, -0.06647457, 0.08984814), (-0.06927275, -0.07354563, 0.08984814), (0.06927275, 0.07354564, 0.08984814), (0.06220169, 0.06647457, 0.08984814), (0.06220169, -0.06647457, 0.08984814), (0.06927275, -0.07354563, 0.08984814), (0.06927275, 0.07354564, 0.09153435), (0.06927275, -0.07354563, 0.08984814), (0.06927275, -0.07354563, 0.09153435), (0.06220169, 0.06647457, 0.09153435), (0.06220169, -0.06647457, 0.09153435), (-0.06927275, 0.07354564, 0.08984814), (-0.06220169, 0.06647457, 0.08984814), (0.06220169, 0.06647457, 0.08984814), (0.06927275, 0.07354564, 0.08984814), (-0.06927275, 0.07354564, 0.09153435), (0.06927275, 0.07354564, 0.09153435), (-0.06220169, 0.06647457, 0.09153435), (0.06220169, 0.06647457, 0.09153435), (0.06927275, -0.07354563, 0.10199821), (0.06927275, -0.07354563, 0.100312), (-0.06927275, -0.07354563, 0.100312), (-0.06927275, -0.07354563, 0.10199821), (0.06220169, -0.06647457, 0.10199821), (-0.06220169, -0.06647457, 0.10199821), (-0.06927275, -0.07354563, 0.10199821), (-0.06927275, -0.07354563, 0.100312), (-0.06927275, 0.07354564, 0.100312), (-0.06927275, 0.07354564, 0.10199821), (-0.06220169, -0.06647457, 0.10199821), (-0.06220169, 0.06647457, 0.10199821), (-0.06927275, -0.07354563, 0.100312), (-0.06220169, 0.06647457, 0.100312), (-0.06220169, -0.06647457, 0.100312), (0.06927275, -0.07354563, 0.100312), (0.06220169, -0.06647457, 0.100312), (-0.06220169, -0.06647457, 0.100312), (-0.06927275, -0.07354563, 0.100312), (0.06927275, 0.07354564, 0.100312), (0.06220169, 0.06647457, 0.100312), (0.06220169, -0.06647457, 0.100312), (0.06927275, -0.07354563, 0.100312), (0.06927275, 0.07354564, 0.10199821), (0.06927275, -0.07354563, 0.100312), (0.06927275, -0.07354563, 0.10199821), (0.06220169, 0.06647457, 0.10199821), (0.06220169, -0.06647457, 0.10199821), (-0.06927275, 0.07354564, 0.100312), (-0.06220169, 0.06647457, 0.100312), (0.06220169, 0.06647457, 0.100312), (0.06927275, 0.07354564, 0.100312), (-0.06927275, 0.07354564, 0.10199821), (0.06927275, 0.07354564, 0.10199821), (-0.06220169, 0.06647457, 0.10199821), (0.06220169, 0.06647457, 0.10199821), (0.06927275, -0.07354563, 0.11278781), (0.06927275, -0.07354563, 0.111101605), (-0.06927275, -0.07354563, 0.111101605), (-0.06927275, -0.07354563, 0.11278781), (0.06220169, -0.06647457, 0.11278781), (-0.06220169, -0.06647457, 0.11278781), (-0.06927275, -0.07354563, 0.11278781), (-0.06927275, -0.07354563, 0.111101605), (-0.06927275, 0.07354564, 0.111101605), (-0.06927275, 0.07354564, 0.11278781), (-0.06220169, -0.06647457, 0.11278781), (-0.06220169, 0.06647457, 0.11278781), (-0.06927275, -0.07354563, 0.111101605), (-0.06220169, 0.06647457, 0.111101605), (-0.06220169, -0.06647457, 0.111101605), (0.06927275, -0.07354563, 0.111101605), (0.06220169, -0.06647457, 0.111101605), (-0.06220169, -0.06647457, 0.111101605), (-0.06927275, -0.07354563, 0.111101605), (0.06927275, 0.07354564, 0.111101605), (0.06220169, 0.06647457, 0.111101605), (0.06220169, -0.06647457, 0.111101605), (0.06927275, -0.07354563, 0.111101605), (0.06927275, 0.07354564, 0.11278781), (0.06927275, -0.07354563, 0.111101605), (0.06927275, -0.07354563, 0.11278781), (0.06220169, 0.06647457, 0.11278781), (0.06220169, -0.06647457, 0.11278781), (-0.06927275, 0.07354564, 0.111101605), (-0.06220169, 0.06647457, 0.111101605), (0.06220169, 0.06647457, 0.111101605), (0.06927275, 0.07354564, 0.111101605), (-0.06927275, 0.07354564, 0.11278781), (0.06927275, 0.07354564, 0.11278781), (-0.06220169, 0.06647457, 0.11278781), (0.06220169, 0.06647457, 0.11278781), (0.06927275, -0.07354563, 0.12203048), (0.06927275, -0.07354563, 0.120344274), (-0.06927275, -0.07354563, 0.120344274), (-0.06927275, -0.07354563, 0.12203048), (0.06220169, -0.06647457, 0.12203048), (-0.06220169, -0.06647457, 0.12203048), (-0.06927275, -0.07354563, 0.12203048), (-0.06927275, -0.07354563, 0.120344274), (-0.06927275, 0.07354564, 0.120344274), (-0.06927275, 0.07354564, 0.12203048), (-0.06220169, -0.06647457, 0.12203048), (-0.06220169, 0.06647457, 0.12203048), (-0.06927275, -0.07354563, 0.120344274), (-0.06220169, 0.06647457, 0.120344274), (-0.06220169, -0.06647457, 0.120344274), (0.06927275, -0.07354563, 0.120344274), (0.06220169, -0.06647457, 0.120344274), (-0.06220169, -0.06647457, 0.120344274), (-0.06927275, -0.07354563, 0.120344274), (0.06927275, 0.07354564, 0.120344274), (0.06220169, 0.06647457, 0.120344274), (0.06220169, -0.06647457, 0.120344274), (0.06927275, -0.07354563, 0.120344274), (0.06927275, 0.07354564, 0.12203048), (0.06927275, -0.07354563, 0.120344274), (0.06927275, -0.07354563, 0.12203048), (0.06220169, 0.06647457, 0.12203048), (0.06220169, -0.06647457, 0.12203048), (-0.06927275, 0.07354564, 0.120344274), (-0.06220169, 0.06647457, 0.120344274), (0.06220169, 0.06647457, 0.120344274), (0.06927275, 0.07354564, 0.120344274), (-0.06927275, 0.07354564, 0.12203048), (0.06927275, 0.07354564, 0.12203048), (-0.06220169, 0.06647457, 0.12203048), (0.06220169, 0.06647457, 0.12203048), (0.06927275, -0.07354563, 0.13147077), (0.06927275, -0.07354563, 0.12978457), (-0.06927275, -0.07354563, 0.12978457), (-0.06927275, -0.07354563, 0.13147077), (0.06220169, -0.06647457, 0.13147077), (-0.06220169, -0.06647457, 0.13147077), (-0.06927275, -0.07354563, 0.13147077), (-0.06927275, -0.07354563, 0.12978457), (-0.06927275, 0.07354564, 0.12978457), (-0.06927275, 0.07354564, 0.13147077), (-0.06220169, -0.06647457, 0.13147077), (-0.06220169, 0.06647457, 0.13147077), (-0.06927275, -0.07354563, 0.12978457), (-0.06220169, 0.06647457, 0.12978457), (-0.06220169, -0.06647457, 0.12978457), (0.06927275, -0.07354563, 0.12978457), (0.06220169, -0.06647457, 0.12978457), (-0.06220169, -0.06647457, 0.12978457), (-0.06927275, -0.07354563, 0.12978457), (0.06927275, 0.07354564, 0.12978457), (0.06220169, 0.06647457, 0.12978457), (0.06220169, -0.06647457, 0.12978457), (0.06927275, -0.07354563, 0.12978457), (0.06927275, 0.07354564, 0.13147077), (0.06927275, -0.07354563, 0.12978457), (0.06927275, -0.07354563, 0.13147077), (0.06220169, 0.06647457, 0.13147077), (0.06220169, -0.06647457, 0.13147077), (-0.06927275, 0.07354564, 0.12978457), (-0.06220169, 0.06647457, 0.12978457), (0.06220169, 0.06647457, 0.12978457), (0.06927275, 0.07354564, 0.12978457), (-0.06927275, 0.07354564, 0.13147077), (0.06927275, 0.07354564, 0.13147077), (-0.06220169, 0.06647457, 0.13147077), (0.06220169, 0.06647457, 0.13147077), (0.06927275, -0.07354563, 0.14193463), (0.06927275, -0.07354563, 0.14024842), (-0.06927275, -0.07354563, 0.14024842), (-0.06927275, -0.07354563, 0.14193463), (0.06220169, -0.06647457, 0.14193463), (-0.06220169, -0.06647457, 0.14193463), (-0.06927275, -0.07354563, 0.14193463), (-0.06927275, -0.07354563, 0.14024842), (-0.06927275, 0.07354564, 0.14024842), (-0.06927275, 0.07354564, 0.14193463), (-0.06220169, -0.06647457, 0.14193463), (-0.06220169, 0.06647457, 0.14193463), (-0.06927275, -0.07354563, 0.14024842), (-0.06220169, 0.06647457, 0.14024842), (-0.06220169, -0.06647457, 0.14024842), (0.06927275, -0.07354563, 0.14024842), (0.06220169, -0.06647457, 0.14024842), (-0.06220169, -0.06647457, 0.14024842), (-0.06927275, -0.07354563, 0.14024842), (0.06927275, 0.07354564, 0.14024842), (0.06220169, 0.06647457, 0.14024842), (0.06220169, -0.06647457, 0.14024842), (0.06927275, -0.07354563, 0.14024842), (0.06927275, 0.07354564, 0.14193463), (0.06927275, -0.07354563, 0.14024842), (0.06927275, -0.07354563, 0.14193463), (0.06220169, 0.06647457, 0.14193463), (0.06220169, -0.06647457, 0.14193463), (-0.06927275, 0.07354564, 0.14024842), (-0.06220169, 0.06647457, 0.14024842), (0.06220169, 0.06647457, 0.14024842), (0.06927275, 0.07354564, 0.14024842), (-0.06927275, 0.07354564, 0.14193463), (0.06927275, 0.07354564, 0.14193463), (-0.06220169, 0.06647457, 0.14193463), (0.06220169, 0.06647457, 0.14193463), (0.06927275, -0.07354563, 0.15413971), (0.06927275, -0.07354563, 0.15245351), (-0.06927275, -0.07354563, 0.15245351), (-0.06927275, -0.07354563, 0.15413971), (0.06220169, -0.06647457, 0.15413971), (-0.06220169, -0.06647457, 0.15413971), (-0.06927275, -0.07354563, 0.15413971), (-0.06927275, -0.07354563, 0.15245351), (-0.06927275, 0.07354564, 0.15245351), (-0.06927275, 0.07354564, 0.15413971), (-0.06220169, -0.06647457, 0.15413971), (-0.06220169, 0.06647457, 0.15413971), (-0.06927275, -0.07354563, 0.15245351), (-0.06220169, 0.06647457, 0.15245351), (-0.06220169, -0.06647457, 0.15245351), (0.06927275, -0.07354563, 0.15245351), (0.06220169, -0.06647457, 0.15245351), (-0.06220169, -0.06647457, 0.15245351), (-0.06927275, -0.07354563, 0.15245351), (0.06927275, 0.07354564, 0.15245351), (0.06220169, 0.06647457, 0.15245351), (0.06220169, -0.06647457, 0.15245351), (0.06927275, -0.07354563, 0.15245351), (0.06927275, 0.07354564, 0.15413971), (0.06927275, -0.07354563, 0.15245351), (0.06927275, -0.07354563, 0.15413971), (0.06220169, 0.06647457, 0.15413971), (0.06220169, -0.06647457, 0.15413971), (-0.06927275, 0.07354564, 0.15245351), (-0.06220169, 0.06647457, 0.15245351), (0.06220169, 0.06647457, 0.15245351), (0.06927275, 0.07354564, 0.15245351), (-0.06927275, 0.07354564, 0.15413971), (0.06927275, 0.07354564, 0.15413971), (-0.06220169, 0.06647457, 0.15413971), (0.06220169, 0.06647457, 0.15413971), (0.06927275, -0.07354563, 0.16338241), (0.06927275, -0.07354563, 0.1616962), (-0.06927275, -0.07354563, 0.1616962), (-0.06927275, -0.07354563, 0.16338241), (0.06220169, -0.06647457, 0.16338241), (-0.06220169, -0.06647457, 0.16338241), (-0.06927275, -0.07354563, 0.16338241), (-0.06927275, -0.07354563, 0.1616962), (-0.06927275, 0.07354564, 0.1616962), (-0.06927275, 0.07354564, 0.16338241), (-0.06220169, -0.06647457, 0.16338241), (-0.06220169, 0.06647457, 0.16338241), (-0.06927275, -0.07354563, 0.1616962), (-0.06220169, 0.06647457, 0.1616962), (-0.06220169, -0.06647457, 0.1616962), (0.06927275, -0.07354563, 0.1616962), (0.06220169, -0.06647457, 0.1616962), (-0.06220169, -0.06647457, 0.1616962), (-0.06927275, -0.07354563, 0.1616962), (0.06927275, 0.07354564, 0.1616962), (0.06220169, 0.06647457, 0.1616962), (0.06220169, -0.06647457, 0.1616962), (0.06927275, -0.07354563, 0.1616962), (0.06927275, 0.07354564, 0.16338241), (0.06927275, -0.07354563, 0.1616962), (0.06927275, -0.07354563, 0.16338241), (0.06220169, 0.06647457, 0.16338241), (0.06220169, -0.06647457, 0.16338241), (-0.06927275, 0.07354564, 0.1616962), (-0.06220169, 0.06647457, 0.1616962), (0.06220169, 0.06647457, 0.1616962), (0.06927275, 0.07354564, 0.1616962), (-0.06927275, 0.07354564, 0.16338241), (0.06927275, 0.07354564, 0.16338241), (-0.06220169, 0.06647457, 0.16338241), (0.06220169, 0.06647457, 0.16338241), (0.06927275, -0.07354563, 0.17282268), (0.06927275, -0.07354563, 0.17113647), (-0.06927275, -0.07354563, 0.17113647), (-0.06927275, -0.07354563, 0.17282268), (0.06220169, -0.06647457, 0.17282268), (-0.06220169, -0.06647457, 0.17282268), (-0.06927275, -0.07354563, 0.17282268), (-0.06927275, -0.07354563, 0.17113647), (-0.06927275, 0.07354564, 0.17113647), (-0.06927275, 0.07354564, 0.17282268), (-0.06220169, -0.06647457, 0.17282268), (-0.06220169, 0.06647457, 0.17282268), (-0.06927275, -0.07354563, 0.17113647), (-0.06220169, 0.06647457, 0.17113647), (-0.06220169, -0.06647457, 0.17113647), (0.06927275, -0.07354563, 0.17113647), (0.06220169, -0.06647457, 0.17113647), (-0.06220169, -0.06647457, 0.17113647), (-0.06927275, -0.07354563, 0.17113647), (0.06927275, 0.07354564, 0.17113647), (0.06220169, 0.06647457, 0.17113647), (0.06220169, -0.06647457, 0.17113647), (0.06927275, -0.07354563, 0.17113647), (0.06927275, 0.07354564, 0.17282268), (0.06927275, -0.07354563, 0.17113647), (0.06927275, -0.07354563, 0.17282268), (0.06220169, 0.06647457, 0.17282268), (0.06220169, -0.06647457, 0.17282268), (-0.06927275, 0.07354564, 0.17113647), (-0.06220169, 0.06647457, 0.17113647), (0.06220169, 0.06647457, 0.17113647), (0.06927275, 0.07354564, 0.17113647), (-0.06927275, 0.07354564, 0.17282268), (0.06927275, 0.07354564, 0.17282268), (-0.06220169, 0.06647457, 0.17282268), (0.06220169, 0.06647457, 0.17282268), (0.06927275, -0.07354563, 0.18328653), (0.06927275, -0.07354563, 0.18160032), (-0.06927275, -0.07354563, 0.18160032), (-0.06927275, -0.07354563, 0.18328653), (0.06220169, -0.06647457, 0.18328653), (-0.06220169, -0.06647457, 0.18328653), (-0.06927275, -0.07354563, 0.18328653), (-0.06927275, -0.07354563, 0.18160032), (-0.06927275, 0.07354564, 0.18160032), (-0.06927275, 0.07354564, 0.18328653), (-0.06220169, -0.06647457, 0.18328653), (-0.06220169, 0.06647457, 0.18328653), (-0.06927275, -0.07354563, 0.18160032), (-0.06220169, 0.06647457, 0.18160032), (-0.06220169, -0.06647457, 0.18160032), (0.06927275, -0.07354563, 0.18160032), (0.06220169, -0.06647457, 0.18160032), (-0.06220169, -0.06647457, 0.18160032), (-0.06927275, -0.07354563, 0.18160032), (0.06927275, 0.07354564, 0.18160032), (0.06220169, 0.06647457, 0.18160032), (0.06220169, -0.06647457, 0.18160032), (0.06927275, -0.07354563, 0.18160032), (0.06927275, 0.07354564, 0.18328653), (0.06927275, -0.07354563, 0.18160032), (0.06927275, -0.07354563, 0.18328653), (0.06220169, 0.06647457, 0.18328653), (0.06220169, -0.06647457, 0.18328653), (-0.06927275, 0.07354564, 0.18160032), (-0.06220169, 0.06647457, 0.18160032), (0.06220169, 0.06647457, 0.18160032), (0.06927275, 0.07354564, 0.18160032), (-0.06927275, 0.07354564, 0.18328653), (0.06927275, 0.07354564, 0.18328653), (-0.06220169, 0.06647457, 0.18328653), (0.06220169, 0.06647457, 0.18328653), (0.06927275, -0.07354563, 0.19443098), (0.06927275, -0.07354563, 0.19274476), (-0.06927275, -0.07354563, 0.19274476), (-0.06927275, -0.07354563, 0.19443098), (0.06220169, -0.06647457, 0.19443098), (-0.06220169, -0.06647457, 0.19443098), (-0.06927275, -0.07354563, 0.19443098), (-0.06927275, -0.07354563, 0.19274476), (-0.06927275, 0.07354564, 0.19274476), (-0.06927275, 0.07354564, 0.19443098), (-0.06220169, -0.06647457, 0.19443098), (-0.06220169, 0.06647457, 0.19443098), (-0.06927275, -0.07354563, 0.19274476), (-0.06220169, 0.06647457, 0.19274476), (-0.06220169, -0.06647457, 0.19274476), (0.06927275, -0.07354563, 0.19274476), (0.06220169, -0.06647457, 0.19274476), (-0.06220169, -0.06647457, 0.19274476), (-0.06927275, -0.07354563, 0.19274476), (0.06927275, 0.07354564, 0.19274476), (0.06220169, 0.06647457, 0.19274476), (0.06220169, -0.06647457, 0.19274476), (0.06927275, -0.07354563, 0.19274476), (0.06927275, 0.07354564, 0.19443098), (0.06927275, -0.07354563, 0.19274476), (0.06927275, -0.07354563, 0.19443098), (0.06220169, 0.06647457, 0.19443098), (0.06220169, -0.06647457, 0.19443098), (-0.06927275, 0.07354564, 0.19274476), (-0.06220169, 0.06647457, 0.19274476), (0.06220169, 0.06647457, 0.19274476), (0.06927275, 0.07354564, 0.19274476), (-0.06927275, 0.07354564, 0.19443098), (0.06927275, 0.07354564, 0.19443098), (-0.06220169, 0.06647457, 0.19443098), (0.06220169, 0.06647457, 0.19443098), (0.06927275, -0.07354563, 0.20367365), (0.06927275, -0.07354563, 0.20198743), (-0.06927275, -0.07354563, 0.20198743), (-0.06927275, -0.07354563, 0.20367365), (0.06220169, -0.06647457, 0.20367365), (-0.06220169, -0.06647457, 0.20367365), (-0.06927275, -0.07354563, 0.20367365), (-0.06927275, -0.07354563, 0.20198743), (-0.06927275, 0.07354564, 0.20198743), (-0.06927275, 0.07354564, 0.20367365), (-0.06220169, -0.06647457, 0.20367365), (-0.06220169, 0.06647457, 0.20367365), (-0.06927275, -0.07354563, 0.20198743), (-0.06220169, 0.06647457, 0.20198743), (-0.06220169, -0.06647457, 0.20198743), (0.06927275, -0.07354563, 0.20198743), (0.06220169, -0.06647457, 0.20198743), (-0.06220169, -0.06647457, 0.20198743), (-0.06927275, -0.07354563, 0.20198743), (0.06927275, 0.07354564, 0.20198743), (0.06220169, 0.06647457, 0.20198743), (0.06220169, -0.06647457, 0.20198743), (0.06927275, -0.07354563, 0.20198743), (0.06927275, 0.07354564, 0.20367365), (0.06927275, -0.07354563, 0.20198743), (0.06927275, -0.07354563, 0.20367365), (0.06220169, 0.06647457, 0.20367365), (0.06220169, -0.06647457, 0.20367365), (-0.06927275, 0.07354564, 0.20198743), (-0.06220169, 0.06647457, 0.20198743), (0.06220169, 0.06647457, 0.20198743), (0.06927275, 0.07354564, 0.20198743), (-0.06927275, 0.07354564, 0.20367365), (0.06927275, 0.07354564, 0.20367365), (-0.06220169, 0.06647457, 0.20367365), (0.06220169, 0.06647457, 0.20367365), (0.06927275, -0.073545605, 0.21311392), (0.06927275, -0.073545605, 0.2114277), (-0.06927275, -0.073545605, 0.2114277), (-0.06927275, -0.073545605, 0.21311392), (0.06220169, -0.06647457, 0.21311392), (-0.06220169, -0.06647457, 0.21311392), (-0.06927275, -0.073545605, 0.21311392), (-0.06927275, -0.073545605, 0.2114277), (-0.06927275, 0.07354564, 0.2114277), (-0.06927275, 0.07354564, 0.21311392), (-0.06220169, -0.06647457, 0.21311392), (-0.06220169, 0.06647457, 0.21311392), (-0.06927275, -0.073545605, 0.2114277), (-0.06220169, 0.06647457, 0.2114277), (-0.06220169, -0.06647457, 0.2114277), (0.06927275, -0.073545605, 0.2114277), (0.06220169, -0.06647457, 0.2114277), (-0.06220169, -0.06647457, 0.2114277), (-0.06927275, -0.073545605, 0.2114277), (0.06927275, 0.07354564, 0.2114277), (0.06220169, 0.06647457, 0.2114277), (0.06220169, -0.06647457, 0.2114277), (0.06927275, -0.073545605, 0.2114277), (0.06927275, 0.07354564, 0.21311392), (0.06927275, -0.073545605, 0.2114277), (0.06927275, -0.073545605, 0.21311392), (0.06220169, 0.06647457, 0.21311392), (0.06220169, -0.06647457, 0.21311392), (-0.06927275, 0.07354564, 0.2114277), (-0.06220169, 0.06647457, 0.2114277), (0.06220169, 0.06647457, 0.2114277), (0.06927275, 0.07354564, 0.2114277), (-0.06927275, 0.07354564, 0.21311392), (0.06927275, 0.07354564, 0.21311392), (-0.06220169, 0.06647457, 0.21311392), (0.06220169, 0.06647457, 0.21311392), (0.06927275, -0.073545605, 0.22357777), (0.06927275, -0.073545605, 0.22189157), (-0.06927275, -0.073545605, 0.22189157), (-0.06927275, -0.073545605, 0.22357777), (0.06220169, -0.06647457, 0.22357777), (-0.06220169, -0.06647457, 0.22357777), (-0.06927275, -0.073545605, 0.22357777), (-0.06927275, -0.073545605, 0.22189157), (-0.06927275, 0.07354564, 0.22189157), (-0.06927275, 0.07354564, 0.22357778), (-0.06220169, -0.06647457, 0.22357777), (-0.06220169, 0.06647457, 0.22357778), (-0.06927275, -0.073545605, 0.22189157), (-0.06220169, 0.06647457, 0.22189157), (-0.06220169, -0.06647457, 0.22189157), (0.06927275, -0.073545605, 0.22189157), (0.06220169, -0.06647457, 0.22189157), (-0.06220169, -0.06647457, 0.22189157), (-0.06927275, -0.073545605, 0.22189157), (0.06927275, 0.07354564, 0.22189157), (0.06220169, 0.06647457, 0.22189157), (0.06220169, -0.06647457, 0.22189157), (0.06927275, -0.073545605, 0.22189157), (0.06927275, 0.07354564, 0.22357778), (0.06927275, -0.073545605, 0.22189157), (0.06927275, -0.073545605, 0.22357777), (0.06220169, 0.06647457, 0.22357778), (0.06220169, -0.06647457, 0.22357777), (-0.06927275, 0.07354564, 0.22189157), (-0.06220169, 0.06647457, 0.22189157), (0.06220169, 0.06647457, 0.22189157), (0.06927275, 0.07354564, 0.22189157), (-0.06927275, 0.07354564, 0.22357778), (0.06927275, 0.07354564, 0.22357778), (-0.06220169, 0.06647457, 0.22357778), (0.06220169, 0.06647457, 0.22357778), (0.06927275, -0.073545605, 0.23064831), (0.06927275, -0.073545605, 0.2289621), (-0.06927275, -0.073545605, 0.2289621), (-0.06927275, -0.073545605, 0.23064831), (0.06220169, -0.06647457, 0.23064831), (-0.06220169, -0.06647457, 0.23064831), (-0.06927275, -0.073545605, 0.23064831), (-0.06927275, -0.073545605, 0.2289621), (-0.06927275, 0.07354564, 0.2289621), (-0.06927275, 0.07354564, 0.23064831), (-0.06220169, -0.06647457, 0.23064831), (-0.06220169, 0.06647457, 0.23064831), (-0.06927275, -0.073545605, 0.2289621), (-0.06220169, 0.06647457, 0.2289621), (-0.06220169, -0.06647457, 0.2289621), (0.06927275, -0.073545605, 0.2289621), (0.06220169, -0.06647457, 0.2289621), (-0.06220169, -0.06647457, 0.2289621), (-0.06927275, -0.073545605, 0.2289621), (0.06927275, 0.07354564, 0.2289621), (0.06220169, 0.06647457, 0.2289621), (0.06220169, -0.06647457, 0.2289621), (0.06927275, -0.073545605, 0.2289621), (0.06927275, 0.07354564, 0.23064831), (0.06927275, -0.073545605, 0.2289621), (0.06927275, -0.073545605, 0.23064831), (0.06220169, 0.06647457, 0.23064831), (0.06220169, -0.06647457, 0.23064831), (-0.06927275, 0.07354564, 0.2289621), (-0.06220169, 0.06647457, 0.2289621), (0.06220169, 0.06647457, 0.2289621), (0.06927275, 0.07354564, 0.2289621), (-0.06927275, 0.07354564, 0.23064831), (0.06927275, 0.07354564, 0.23064831), (-0.06220169, 0.06647457, 0.23064831), (0.06220169, 0.06647457, 0.23064831), (0.06927275, -0.073545605, 0.23989098), (0.06927275, -0.073545605, 0.23820476), (-0.06927275, -0.073545605, 0.23820476), (-0.06927275, -0.073545605, 0.23989098), (0.06220169, -0.06647457, 0.23989098), (-0.06220169, -0.06647457, 0.23989098), (-0.06927275, -0.073545605, 0.23989098), (-0.06927275, -0.073545605, 0.23820476), (-0.06927275, 0.07354564, 0.23820476), (-0.06927275, 0.07354564, 0.23989098), (-0.06220169, -0.06647457, 0.23989098), (-0.06220169, 0.06647457, 0.23989098), (-0.06927275, -0.073545605, 0.23820476), (-0.06220169, 0.06647457, 0.23820476), (-0.06220169, -0.06647457, 0.23820476), (0.06927275, -0.073545605, 0.23820476), (0.06220169, -0.06647457, 0.23820476), (-0.06220169, -0.06647457, 0.23820476), (-0.06927275, -0.073545605, 0.23820476), (0.06927275, 0.07354564, 0.23820476), (0.06220169, 0.06647457, 0.23820476), (0.06220169, -0.06647457, 0.23820476), (0.06927275, -0.073545605, 0.23820476), (0.06927275, 0.07354564, 0.23989098), (0.06927275, -0.073545605, 0.23820476), (0.06927275, -0.073545605, 0.23989098), (0.06220169, 0.06647457, 0.23989098), (0.06220169, -0.06647457, 0.23989098), (-0.06927275, 0.07354564, 0.23820476), (-0.06220169, 0.06647457, 0.23820476), (0.06220169, 0.06647457, 0.23820476), (0.06927275, 0.07354564, 0.23820476), (-0.06927275, 0.07354564, 0.23989098), (0.06927275, 0.07354564, 0.23989098), (-0.06220169, 0.06647457, 0.23989098), (0.06220169, 0.06647457, 0.23989098), (0.06927275, -0.073545605, 0.24933124), (0.06927275, -0.073545605, 0.24764504), (-0.06927275, -0.073545605, 0.24764504), (-0.06927275, -0.073545605, 0.24933124), (0.06220169, -0.06647457, 0.24933124), (-0.06220169, -0.06647457, 0.24933124), (-0.06927275, -0.073545605, 0.24933124), (-0.06927275, -0.073545605, 0.24764504), (-0.06927275, 0.07354564, 0.24764504), (-0.06927275, 0.07354564, 0.24933124), (-0.06220169, -0.06647457, 0.24933124), (-0.06220169, 0.06647457, 0.24933124), (-0.06927275, -0.073545605, 0.24764504), (-0.06220169, 0.06647457, 0.24764504), (-0.06220169, -0.06647457, 0.24764504), (0.06927275, -0.073545605, 0.24764504), (0.06220169, -0.06647457, 0.24764504), (-0.06220169, -0.06647457, 0.24764504), (-0.06927275, -0.073545605, 0.24764504), (0.06927275, 0.07354564, 0.24764504), (0.06220169, 0.06647457, 0.24764504), (0.06220169, -0.06647457, 0.24764504), (0.06927275, -0.073545605, 0.24764504), (0.06927275, 0.07354564, 0.24933124), (0.06927275, -0.073545605, 0.24764504), (0.06927275, -0.073545605, 0.24933124), (0.06220169, 0.06647457, 0.24933124), (0.06220169, -0.06647457, 0.24933124), (-0.06927275, 0.07354564, 0.24764504), (-0.06220169, 0.06647457, 0.24764504), (0.06220169, 0.06647457, 0.24764504), (0.06927275, 0.07354564, 0.24764504), (-0.06927275, 0.07354564, 0.24933124), (0.06927275, 0.07354564, 0.24933124), (-0.06220169, 0.06647457, 0.24933124), (0.06220169, 0.06647457, 0.24933124), (0.06927275, -0.073545605, 0.2597951), (0.06927275, -0.073545605, 0.25810888), (-0.06927275, -0.073545605, 0.25810888), (-0.06927275, -0.073545605, 0.2597951), (0.06220169, -0.06647457, 0.2597951), (-0.06220169, -0.06647457, 0.2597951), (-0.06927275, -0.073545605, 0.2597951), (-0.06927275, -0.073545605, 0.25810888), (-0.06927275, 0.07354564, 0.25810888), (-0.06927275, 0.07354564, 0.25979513), (-0.06220169, -0.06647457, 0.2597951), (-0.06220169, 0.06647457, 0.25979513), (-0.06927275, -0.073545605, 0.25810888), (-0.06220169, 0.06647457, 0.25810888), (-0.06220169, -0.06647457, 0.25810888), (0.06927275, -0.073545605, 0.25810888), (0.06220169, -0.06647457, 0.25810888), (-0.06220169, -0.06647457, 0.25810888), (-0.06927275, -0.073545605, 0.25810888), (0.06927275, 0.07354564, 0.25810888), (0.06220169, 0.06647457, 0.25810888), (0.06220169, -0.06647457, 0.25810888), (0.06927275, -0.073545605, 0.25810888), (0.06927275, 0.07354564, 0.25979513), (0.06927275, -0.073545605, 0.25810888), (0.06927275, -0.073545605, 0.2597951), (0.06220169, 0.06647457, 0.25979513), (0.06220169, -0.06647457, 0.2597951), (-0.06927275, 0.07354564, 0.25810888), (-0.06220169, 0.06647457, 0.25810888), (0.06220169, 0.06647457, 0.25810888), (0.06927275, 0.07354564, 0.25810888), (-0.06927275, 0.07354564, 0.25979513), (0.06927275, 0.07354564, 0.25979513), (-0.06220169, 0.06647457, 0.25979513), (0.06220169, 0.06647457, 0.25979513)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (0, 0.981449), (1, 0), (0, 0), (1, 0.981449), (1, 0.981449), (0, 0.981449), (1, 1), (0, 1), (0, 0.981449), (1, 0), (0, 0), (1, 0.981449), (1, 0.981449), (0, 0.981449), (1, 1), (0, 1), (0, 1), (1, 1), (1, 0), (1, 1), (0, 1), (0, 1), (1, 0), (0, 1), (1, 1), (0, 0), (0, 0), (1, 0), (0, 0), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (1, 0), (0, 0), (0, 0.981449), (1, 0), (0, 0), (1, 0.981449), (1, 0.981449), (0, 0.981449), (1, 1), (0, 1), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 1), (0, 1), (0, 1), (1, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 0.981449), (0, 1), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (1, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 1), (0, 0), (1, 1), (0, 0.981449), (1, 1), (1, 0.981449), (0, 0.981449), (1, 0.981449), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0.981449), (1, 0.981449), (0, 0.981449), (1, 0.981449)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (-0.68904376, 0.72471976, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-0.7147177, -0.699413, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0, 1, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.70708895, 0, 0.70712453, 1), (0.050435983, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (0, 1, 0, -1), (0, 0, -1, -1), (0, 1, 0, -1), (0, 0, -1, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 0, -1, 1), (0, -1, 0, 1), (0, 0, -1, 1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435986, 0.99872726, 0, 1), (0.050435983, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435986, -0.99872726, 0, 1), (0.050435983, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435998, 0.99872726, 0, 1), (0.050435998, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435998, -0.99872726, 0, 1), (0.050435998, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435998, 0.99872726, 0, 1), (0.050435998, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435998, -0.99872726, 0, 1), (0.050435998, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 0, -1, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435998, 0.99872726, 0, 1), (0.050435998, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435998, -0.99872726, 0, 1), (0.050435998, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435998, 0.99872726, 0, 1), (0.050435998, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435998, -0.99872726, 0, 1), (0.050435998, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435998, 0.99872726, 0, 1), (0.050435998, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435998, -0.99872726, 0, 1), (0.050435998, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, 1), (0.050435998, 0.99872726, 0, 1), (0.050435998, 0.99872726, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, -1), (0.050435998, -0.99872726, 0, 1), (0.050435998, -0.99872726, 0, 1), (1, 0, 0, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 0, -1, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.641075302888964, 2.9190728487787965, -18.892182579453902, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh462"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.08543544, -0.08539558, -0.25), (0.08543544, 0.08539558, 0.25)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 13, 12, 8, 13, 14, 12, 12, 14, 15, 16, 15, 14, 17, 15, 16, 18, 17, 16, 19, 17, 18, 18, 20, 19, 19, 20, 21, 20, 22, 21, 21, 22, 23, 22, 24, 23, 23, 24, 25, 27, 26, 28, 28, 26, 29, 26, 30, 29, 31, 30, 26, 31, 32, 30, 30, 32, 33, 34, 33, 32, 35, 33, 34, 36, 35, 34, 37, 35, 36, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 49, 48, 44, 49, 50, 48, 48, 50, 51, 52, 51, 50, 53, 51, 52, 54, 53, 52, 55, 53, 54, 54, 56, 55, 55, 56, 57, 56, 58, 57, 57, 58, 59, 58, 60, 59, 59, 60, 61, 63, 62, 64, 64, 62, 65, 62, 66, 65, 67, 66, 62, 67, 68, 66, 66, 68, 69, 70, 69, 68, 71, 69, 70, 72, 71, 70, 73, 71, 72, 72, 74, 73, 73, 74, 75, 74, 76, 75, 75, 76, 77, 76, 78, 77, 77, 78, 79]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.008526588), (0, -0.99996364, 0.00852655), (0, -0.99996364, 0.00852655), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-0.99996793, 0.00090847147, 0.0079542585), (0, -0.99996364, 0.008526588), (-0.99997246, 0.0008766487, 0.007379305), (0, -0.99996364, 0.00852655), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 0.9999685, -0.007943587), (-0.99996793, 0.00090847147, 0.0079542585), (0, 0.9999685, -0.007943257), (-0.99997246, 0.0008766487, 0.007379305), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -0.99996364, 0.008526588), (0, 0.9999685, -0.007943587), (0, -0.99996364, 0.00852655), (0, 0.9999685, -0.007943257), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.059417114), (-0.049999997, -0.050040245, 0.059417114), (-0.08543544, -0.08531528, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (-0.085355334, -0.08539558, 0.049999997), (0.085355334, -0.08539558, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (-0.049999997, -0.050040245, -0.049999997), (0.049999997, -0.050040245, -0.049999997), (-0.049999997, -0.050040245, -0.14999999), (0.049999997, -0.050040245, -0.14999999), (-0.049999997, -0.050040245, -0.25), (0.049999997, -0.050040245, -0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.25), (-0.049999997, -0.050040245, 0.25), (-0.049999997, -0.050040245, 0.14999999), (-0.049999997, -0.050040245, 0.059417114), (-0.049999997, 0.049959753, 0.060131416), (-0.085274674, 0.08539558, 0.060131416), (-0.08543544, -0.08531528, 0.059417114), (-0.085355334, 0.08531509, 0.049999997), (-0.085355334, -0.08539558, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (-0.049999997, -0.050040245, 0.049999997), (-0.049999997, 0.049959753, -0.049999997), (-0.049999997, -0.050040245, -0.049999997), (-0.049999997, 0.049959753, -0.14999999), (-0.049999997, -0.050040245, -0.14999999), (-0.049999997, 0.049959753, -0.25), (-0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.25), (-0.049999997, 0.049959753, 0.14999999), (-0.049999997, 0.049959753, 0.060131416), (0.049999997, 0.049959753, 0.060131416), (0.085274674, 0.08539558, 0.060131416), (-0.085274674, 0.08539558, 0.060131416), (0.085355334, 0.08531509, 0.049999997), (-0.085355334, 0.08531509, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (-0.049999997, 0.049959753, 0.049999997), (0.049999997, 0.049959753, -0.049999997), (-0.049999997, 0.049959753, -0.049999997), (0.049999997, 0.049959753, -0.14999999), (-0.049999997, 0.049959753, -0.14999999), (0.049999997, 0.049959753, -0.25), (-0.049999997, 0.049959753, -0.25), (0.049999997, -0.050040245, 0.14999999), (0.049999997, -0.050040245, 0.25), (0.049999997, 0.049959753, 0.25), (0.049999997, 0.049959753, 0.14999999), (0.049999997, 0.049959753, 0.060131416), (0.049999997, -0.050040245, 0.059417114), (0.08543544, -0.08531528, 0.059417114), (0.085274674, 0.08539558, 0.060131416), (0.085355334, -0.08539558, 0.049999997), (0.085355334, 0.08531509, 0.049999997), (0.049999997, -0.050040245, 0.049999997), (0.049999997, 0.049959753, 0.049999997), (0.049999997, -0.050040245, -0.049999997), (0.049999997, 0.049959753, -0.049999997), (0.049999997, -0.050040245, -0.14999999), (0.049999997, 0.049959753, -0.14999999), (0.049999997, -0.050040245, -0.25), (0.049999997, 0.049959753, -0.25)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.381166), (1, 0.381166), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.381166), (1, 0.379737), (1, 0.379737), (0, 0.381166), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.379737), (1, 0.379737), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (0, 0.379737), (1, 0.381166), (1, 0.381166), (0, 0.379737), (1, 0.4), (0, 0.4), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0.1059095, 0.008467654, 0.99433976, -1), (0, 1, 0, -1), (0, 0.0085144015, 0.99996376, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.007981068, 0.11347066, 0.99350935, -1), (1, 0, 0, -1), (0.0074112844, 0.1179655, 0.99299, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 0, 1, -1), (0, 1, 0, -1), (0.1059095, -0.008467654, -0.99433976, -1), (0.113642216, -0.007873532, -0.9934906, -1), (0, -0.008514402, -0.99996376, -1), (0, -0.007939032, -0.9999685, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.43956125522527, 2.807499885559082, -21.325405562841695, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh463"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.33201376639681, 1.1149371934690464, -20.448138992359873, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh464"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.33201376639681, 1.1149371934690464, -22.18781024660845, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh465"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (51.57233809886719, 1.1149371934690464, -20.448177145887485, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh466"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (51.57233809886719, 1.1149371934690464, -22.190691507303285, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh467"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (51.57233809886719, 1.1149371934690464, -21.830747697341565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh468"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (51.57233809886719, 1.1149374444790965, -20.82318381794437, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh469"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.321189208997225, 1.1149374444790965, -20.82318381794437, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh470"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.321189208997225, 1.1149371934690464, -21.830747697341565, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh471"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (51.99118250479006, 1.1149374444790965, -22.228098112676207, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh472"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.998746718867324, 1.1149371934690464, -22.228098112676207, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh473"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.06), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.06), (0.005, -0.005, 0.020000001), (0.005, 0.005, 0.020000001), (0.005, -0.005, -0.019999992), (0.005, 0.005, -0.019999992), (0.005, -0.005, -0.059999995), (0.005, 0.005, -0.059999995), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.06), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.06), (-0.005, -0.005, 0.020000001), (0.005, -0.005, 0.020000001), (-0.005, -0.005, -0.019999992), (0.005, -0.005, -0.019999992), (-0.005, -0.005, -0.059999995), (0.005, -0.005, -0.059999995), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.06), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.06), (-0.005, 0.005, 0.020000001), (-0.005, -0.005, 0.020000001), (-0.005, 0.005, -0.019999992), (-0.005, -0.005, -0.019999992), (-0.005, 0.005, -0.059999995), (-0.005, -0.005, -0.059999995), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.06), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.06), (0.005, 0.005, 0.020000001), (-0.005, 0.005, 0.020000001), (0.005, 0.005, -0.019999992), (-0.005, 0.005, -0.019999992), (0.005, 0.005, -0.059999995), (-0.005, 0.005, -0.059999995), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (51.99118250479006, 1.1149374444790965, -20.462737067512307, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh474"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.099999994)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (3.1830987e-7, -1, 0), (0, 0, 1), (0, 0, 1), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (3.1830987e-7, -1, 0), (1, 3.1830987e-7, 0), (0, 0, -1), (0, 0, -1), (-1, -3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (-1, -3.1830987e-7, 0), (3.1830987e-7, -1, 0), (0, 0, -1), (0, 0, -1), (1, 3.1830987e-7, 0), (0, 0, 1), (0, 0, 1), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (1, 3.1830987e-7, 0), (-1, -3.1830987e-7, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.005, -0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, -0.005, 0.099999994), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994), (0.005, -0.005, 0.059999995), (0.005, -0.005, 0.099999994), (0.005, 0.005, 0.099999994), (0.005, 0.005, 0.059999995), (0.005, -0.005, 0.019999998), (0.005, 0.005, 0.019999998), (0.005, -0.005, -0.019999998), (0.005, 0.005, -0.019999998), (0.005, -0.005, -0.06), (0.005, 0.005, -0.06), (0.005, -0.005, -0.099999994), (0.005, 0.005, -0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.099999994), (0.005, -0.005, 0.099999994), (0.005, -0.005, 0.059999995), (-0.005, -0.005, 0.019999998), (0.005, -0.005, 0.019999998), (-0.005, -0.005, -0.019999998), (0.005, -0.005, -0.019999998), (-0.005, -0.005, -0.06), (0.005, -0.005, -0.06), (-0.005, -0.005, -0.099999994), (0.005, -0.005, -0.099999994), (-0.005, 0.005, 0.059999995), (-0.005, 0.005, 0.099999994), (-0.005, -0.005, 0.099999994), (-0.005, -0.005, 0.059999995), (-0.005, 0.005, 0.019999998), (-0.005, -0.005, 0.019999998), (-0.005, 0.005, -0.019999998), (-0.005, -0.005, -0.019999998), (-0.005, 0.005, -0.06), (-0.005, -0.005, -0.06), (-0.005, 0.005, -0.099999994), (-0.005, -0.005, -0.099999994), (0.005, 0.005, 0.059999995), (0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.099999994), (-0.005, 0.005, 0.059999995), (0.005, 0.005, 0.019999998), (-0.005, 0.005, 0.019999998), (0.005, 0.005, -0.019999998), (-0.005, 0.005, -0.019999998), (0.005, 0.005, -0.06), (-0.005, 0.005, -0.06), (0.005, 0.005, -0.099999994), (-0.005, 0.005, -0.099999994)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (52.998746718867324, 1.1149371934690464, -20.462737067512307, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh475"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.547681329211684, 2.292108982054401, -18.28424828664606, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh476"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (47.95129271945916, 2.292108982054401, -18.28424828664606, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh477"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (47.95129271945916, 2.292108982054401, -19.577494234339156, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh478"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.547681329211684, 2.292108982054401, -19.577494234339156, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh479"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.547681329211684, 2.292108982054401, -18.56638960717555, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh480"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.547681329211684, 2.292108982054401, -18.883468514555375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh481"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.049134616), (0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, -0.0024567412, 0.0098269265), (0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.02948076), (0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, -0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.049134616), (-0.0024567293, -0.0024567412, 0.02948076), (-0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, -0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, -0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, -0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, -0.0024567412, -0.049134616), (0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.049134616), (-0.0024567293, 0.0024567412, 0.02948076), (0.0024567293, 0.0024567412, 0.0098269265), (-0.0024567293, 0.0024567412, 0.0098269265), (0.0024567293, 0.0024567412, -0.0098269265), (-0.0024567293, 0.0024567412, -0.0098269265), (0.0024567293, 0.0024567412, -0.02948076), (-0.0024567293, 0.0024567412, -0.02948076), (0.0024567293, 0.0024567412, -0.049134616), (-0.0024567293, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.547681329211684, 2.292108982054401, -19.23896400807962, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh482"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (47.95114880703045, 2.292108982054401, -19.23896400807962, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh483"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (47.95114880703045, 2.292108982054401, -18.883468514555375, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh484"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.049134616), (0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, -0.0024567412, 0.0098269265), (0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.02948076), (0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, -0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.049134616), (-0.0024567223, -0.0024567412, 0.02948076), (-0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, -0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, -0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, -0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, -0.0024567412, -0.049134616), (0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.049134616), (-0.0024567223, 0.0024567412, 0.02948076), (0.0024567223, 0.0024567412, 0.0098269265), (-0.0024567223, 0.0024567412, 0.0098269265), (0.0024567223, 0.0024567412, -0.0098269265), (-0.0024567223, 0.0024567412, -0.0098269265), (0.0024567223, 0.0024567412, -0.02948076), (-0.0024567223, 0.0024567412, -0.02948076), (0.0024567223, 0.0024567412, -0.049134616), (-0.0024567223, 0.0024567412, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (47.95114880703045, 2.292108982054401, -18.56638960717555, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh485"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024644614, -0.002464447, -0.049134616), (0.0024644614, 0.002464447, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(-6.0950293e-7, 0, 1), (-6.0950293e-7, 0, 1), (-6.0950293e-7, 0, 1), (-6.0950293e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (-0.9999951, 0.0031491125, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (0.0031491125, 0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.002448983, 0.002464447, 0.049134616), (0.0024644614, 0.0024489975, 0.049134616), (0.0024489737, -0.002464447, 0.049134616), (-0.0024644614, -0.0024489975, 0.049134616), (-0.002448983, 0.002464447, -0.049134616), (-0.0024644614, -0.0024489975, -0.049134616), (0.0024489737, -0.002464447, -0.049134616), (0.0024644614, 0.0024489975, -0.049134616), (-0.0024644614, -0.0024489975, 0.02948076), (-0.0024644614, -0.0024489975, 0.049134616), (0.0024489737, -0.002464447, 0.049134616), (0.0024489737, -0.002464447, 0.02948076), (-0.0024644614, -0.0024489975, 0.0098269265), (0.0024489737, -0.002464447, 0.0098269265), (-0.0024644614, -0.0024489975, -0.0098269265), (0.0024489737, -0.002464447, -0.0098269265), (-0.0024644614, -0.0024489975, -0.02948076), (0.0024489737, -0.002464447, -0.02948076), (-0.0024644614, -0.0024489975, -0.049134616), (0.0024489737, -0.002464447, -0.049134616), (-0.002448983, 0.002464447, 0.02948076), (-0.002448983, 0.002464447, 0.049134616), (-0.0024644614, -0.0024489975, 0.049134616), (-0.0024644614, -0.0024489975, 0.02948076), (-0.002448983, 0.002464447, 0.0098269265), (-0.0024644614, -0.0024489975, 0.0098269265), (-0.002448983, 0.002464447, -0.0098269265), (-0.0024644614, -0.0024489975, -0.0098269265), (-0.002448983, 0.002464447, -0.02948076), (-0.0024644614, -0.0024489975, -0.02948076), (-0.002448983, 0.002464447, -0.049134616), (-0.0024644614, -0.0024489975, -0.049134616), (0.0024644614, 0.0024489975, 0.02948076), (0.0024644614, 0.0024489975, 0.049134616), (-0.002448983, 0.002464447, 0.049134616), (-0.002448983, 0.002464447, 0.02948076), (0.0024644614, 0.0024489975, 0.0098269265), (-0.002448983, 0.002464447, 0.0098269265), (0.0024644614, 0.0024489975, -0.0098269265), (-0.002448983, 0.002464447, -0.0098269265), (0.0024644614, 0.0024489975, -0.02948076), (-0.002448983, 0.002464447, -0.02948076), (0.0024644614, 0.0024489975, -0.049134616), (-0.002448983, 0.002464447, -0.049134616), (0.0024489737, -0.002464447, 0.02948076), (0.0024489737, -0.002464447, 0.049134616), (0.0024644614, 0.0024489975, 0.049134616), (0.0024644614, 0.0024489975, 0.02948076), (0.0024489737, -0.002464447, 0.0098269265), (0.0024644614, 0.0024489975, 0.0098269265), (0.0024489737, -0.002464447, -0.0098269265), (0.0024644614, 0.0024489975, -0.0098269265), (0.0024489737, -0.002464447, -0.02948076), (0.0024644614, 0.0024489975, -0.02948076), (0.0024489737, -0.002464447, -0.049134616), (0.0024644614, 0.0024489975, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0.9999951, -0.0031443245, 0, -1), (0.9999951, -0.003144321, 0, -1), (0.9999951, -0.0031443243, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.9999951, 0.0031443245, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031443243, 0, -1), (-0.9999951, 0.003144321, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9933873, -0.11481135, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98973864, -0.14288943, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085296, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085294, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9999951, -0.0031491125, 0, -1), (0.9999951, -0.0031443213, 0, -1), (0.9999951, -0.0031443213, 0, -1), (-0.024872037, 0.99969065, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.031082526, 0.99951684, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.03729183, 0.9993044, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.03729183, 0.9993044, 0, -1), (0.9999951, -0.0031443213, 0, -1), (0.9999951, -0.0031443213, 0, -1), (-0.99819535, 0.060051225, 0, -1), (-0.0031520855, -0.9999951, 0, -1), (-0.0031520855, -0.9999951, 0, -1), (-0.99819535, 0.060051233, 0, -1), (-0.998195, 0.06005592, 0, -1), (-0.998195, 0.060055915, 0, -1), (-0.9981949, 0.06005826, 0, -1), (-0.9981949, 0.060058262, 0, -1), (-0.998195, 0.060055915, 0, -1), (-0.998195, 0.06005592, 0, -1), (-0.003152085, -0.9999951, 0, -1), (-0.003152085, -0.9999951, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (48.40981445133798, 2.292108982054401, -18.263051324617095, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh486"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024644565, -0.002464447, -0.049134616), (0.0024644565, 0.002464447, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(-6.0950293e-7, 0, 1), (-6.09503e-7, 0, 1), (-6.0950293e-7, 0, 1), (-6.09503e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (-0.9999951, 0.0031491125, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (0.0031491125, 0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024489784, 0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024644565, -0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (0.0024489784, -0.002464447, 0.02948076), (-0.0024644565, -0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024489784, 0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024644565, 0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (0.0024644565, 0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (0.0024489784, -0.002464447, 0.02948076), (0.0024489784, -0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024489784, -0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9933873, -0.11481135, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98973864, -0.14288943, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085296, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085294, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9999951, -0.003149113, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.037337124, 0.99930274, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.03112091, 0.99951565, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.024903478, 0.9996898, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.024903476, 0.9996898, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.0031443276, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.98973936, 0.14288507, 0, -1), (-0.98973864, 0.14288943, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085296, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (48.76530668173157, 2.292108982054401, -18.264172168160712, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh487"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024644565, -0.002464447, -0.049134616), (0.0024644565, 0.002464447, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(-6.095077e-7, 0, 1), (-6.095077e-7, 0, 1), (-6.095077e-7, 0, 1), (-6.095077e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (-0.9999951, 0.0031491125, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (0.0031491125, 0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024489784, 0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024644565, -0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (0.0024489784, -0.002464447, 0.02948076), (-0.0024644565, -0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024489784, 0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024644565, 0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (0.0024644565, 0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (0.0024489784, -0.002464447, 0.02948076), (0.0024489784, -0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024489784, -0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9933873, -0.11481135, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98973864, -0.14288943, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085296, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085294, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9999951, -0.003149113, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.037337124, 0.99930274, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.03112091, 0.99951565, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.024903478, 0.9996898, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.024903476, 0.9996898, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.0031443276, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.98973936, 0.14288507, 0, -1), (-0.98973864, 0.14288943, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085296, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.08238584012145, 2.292108982054401, -18.26516951475969, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh488"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024644614, -0.002464447, -0.049134616), (0.0024644614, 0.002464447, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(-6.0951254e-7, 0, 1), (-6.0951254e-7, 0, 1), (-6.095126e-7, 0, 1), (-6.095126e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (-0.9999951, 0.0031491125, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (0.0031491125, 0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.002448983, 0.002464447, 0.049134616), (0.0024644614, 0.0024489975, 0.049134616), (0.0024489737, -0.002464447, 0.049134616), (-0.0024644614, -0.0024489975, 0.049134616), (-0.002448983, 0.002464447, -0.049134616), (-0.0024644614, -0.0024489975, -0.049134616), (0.0024489737, -0.002464447, -0.049134616), (0.0024644614, 0.0024489975, -0.049134616), (-0.0024644614, -0.0024489975, 0.02948076), (-0.0024644614, -0.0024489975, 0.049134616), (0.0024489737, -0.002464447, 0.049134616), (0.0024489737, -0.002464447, 0.02948076), (-0.0024644614, -0.0024489975, 0.0098269265), (0.0024489737, -0.002464447, 0.0098269265), (-0.0024644614, -0.0024489975, -0.0098269265), (0.0024489737, -0.002464447, -0.0098269265), (-0.0024644614, -0.0024489975, -0.02948076), (0.0024489737, -0.002464447, -0.02948076), (-0.0024644614, -0.0024489975, -0.049134616), (0.0024489737, -0.002464447, -0.049134616), (-0.002448983, 0.002464447, 0.02948076), (-0.002448983, 0.002464447, 0.049134616), (-0.0024644614, -0.0024489975, 0.049134616), (-0.0024644614, -0.0024489975, 0.02948076), (-0.002448983, 0.002464447, 0.0098269265), (-0.0024644614, -0.0024489975, 0.0098269265), (-0.002448983, 0.002464447, -0.0098269265), (-0.0024644614, -0.0024489975, -0.0098269265), (-0.002448983, 0.002464447, -0.02948076), (-0.0024644614, -0.0024489975, -0.02948076), (-0.002448983, 0.002464447, -0.049134616), (-0.0024644614, -0.0024489975, -0.049134616), (0.0024644614, 0.0024489975, 0.02948076), (0.0024644614, 0.0024489975, 0.049134616), (-0.002448983, 0.002464447, 0.049134616), (-0.002448983, 0.002464447, 0.02948076), (0.0024644614, 0.0024489975, 0.0098269265), (-0.002448983, 0.002464447, 0.0098269265), (0.0024644614, 0.0024489975, -0.0098269265), (-0.002448983, 0.002464447, -0.0098269265), (0.0024644614, 0.0024489975, -0.02948076), (-0.002448983, 0.002464447, -0.02948076), (0.0024644614, 0.0024489975, -0.049134616), (-0.002448983, 0.002464447, -0.049134616), (0.0024489737, -0.002464447, 0.02948076), (0.0024489737, -0.002464447, 0.049134616), (0.0024644614, 0.0024489975, 0.049134616), (0.0024644614, 0.0024489975, 0.02948076), (0.0024489737, -0.002464447, 0.0098269265), (0.0024644614, 0.0024489975, 0.0098269265), (0.0024489737, -0.002464447, -0.0098269265), (0.0024644614, 0.0024489975, -0.0098269265), (0.0024489737, -0.002464447, -0.02948076), (0.0024644614, 0.0024489975, -0.02948076), (0.0024489737, -0.002464447, -0.049134616), (0.0024644614, 0.0024489975, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0.9999951, -0.0031443245, 0, -1), (0.9999951, -0.003144321, 0, -1), (0.9999951, -0.0031443243, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.9999951, 0.0031443245, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031443243, 0, -1), (-0.9999951, 0.003144321, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9933873, -0.11481135, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98973864, -0.14288943, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085296, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085294, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9999951, -0.0031491125, 0, -1), (0.9999951, -0.0031443213, 0, -1), (0.9999951, -0.0031443213, 0, -1), (-0.024872037, 0.99969065, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.031082526, 0.99951684, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.03729183, 0.9993044, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.03729183, 0.9993044, 0, -1), (0.9999951, -0.0031443213, 0, -1), (0.9999951, -0.0031443213, 0, -1), (-0.99819535, 0.060051225, 0, -1), (-0.0031520855, -0.9999951, 0, -1), (-0.0031520855, -0.9999951, 0, -1), (-0.99819535, 0.060051233, 0, -1), (-0.998195, 0.06005592, 0, -1), (-0.998195, 0.060055915, 0, -1), (-0.9981949, 0.06005826, 0, -1), (-0.9981949, 0.060058262, 0, -1), (-0.998195, 0.060055915, 0, -1), (-0.998195, 0.06005592, 0, -1), (-0.003152085, -0.9999951, 0, -1), (-0.003152085, -0.9999951, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (48.40981445133798, 2.292108982054401, -19.585667121569713, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh489"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024644565, -0.002464447, -0.049134616), (0.0024644565, 0.002464447, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(-6.0951743e-7, 0, 1), (-6.0951743e-7, 0, 1), (-6.0951743e-7, 0, 1), (-6.0951743e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (-0.9999951, 0.0031491125, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (0.0031491125, 0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024489784, 0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024644565, -0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (0.0024489784, -0.002464447, 0.02948076), (-0.0024644565, -0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024489784, 0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024644565, 0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (0.0024644565, 0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (0.0024489784, -0.002464447, 0.02948076), (0.0024489784, -0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024489784, -0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9933873, -0.11481135, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98973864, -0.14288943, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085296, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085294, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9999951, -0.003149113, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.037337124, 0.99930274, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.03112091, 0.99951565, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.024903478, 0.9996898, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.024903476, 0.9996898, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.0031443276, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.98973936, 0.14288507, 0, -1), (-0.98973864, 0.14288943, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085296, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (48.76530668173157, 2.292108982054401, -19.586786291712997, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh490"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.0024644565, -0.002464447, -0.049134616), (0.0024644565, 0.002464447, 0.049134616)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 11, 11, 12, 13, 12, 14, 13, 13, 14, 15, 14, 16, 15, 15, 16, 17, 16, 18, 17, 17, 18, 19, 21, 20, 22, 22, 20, 23, 20, 24, 23, 23, 24, 25, 24, 26, 25, 25, 26, 27, 26, 28, 27, 27, 28, 29, 28, 30, 29, 29, 30, 31, 33, 32, 34, 34, 32, 35, 32, 36, 35, 35, 36, 37, 36, 38, 37, 37, 38, 39, 38, 40, 39, 39, 40, 41, 40, 42, 41, 41, 42, 43, 45, 44, 46, 46, 44, 47, 44, 48, 47, 47, 48, 49, 48, 50, 49, 49, 50, 51, 50, 52, 51, 51, 52, 53, 52, 54, 53, 53, 54, 55]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(-6.0951743e-7, 0, 1), (-6.0951743e-7, 0, 1), (-6.0951743e-7, 0, 1), (-6.0951743e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (-0.9999951, 0.0031491125, 0), (0, 0, 1), (0, 0, 1), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (-0.9999951, 0.0031491125, 0), (-0.0031491125, -0.9999951, 0), (0, 0, -1), (0, 0, -1), (0.0031491125, 0.9999951, 0), (0, 0, 1), (0, 0, 1), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0.0031491125, 0.9999951, 0), (-0.9999951, 0.0031491125, 0), (0, 0, -1), (0, 0, -1), (-0.0031491125, -0.9999951, 0), (0, 0, 1), (0, 0, 1), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (-0.0031491125, -0.9999951, 0), (0.0031491125, 0.9999951, 0), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.0024489784, 0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024644565, -0.0024489975, 0.049134616), (0.0024489784, -0.002464447, 0.049134616), (0.0024489784, -0.002464447, 0.02948076), (-0.0024644565, -0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024489784, -0.002464447, -0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024644565, -0.0024489975, 0.049134616), (-0.0024644565, -0.0024489975, 0.02948076), (-0.0024489784, 0.002464447, 0.0098269265), (-0.0024644565, -0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (-0.0024644565, -0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.02948076), (-0.0024644565, -0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.049134616), (-0.0024644565, -0.0024489975, -0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024644565, 0.0024489975, 0.049134616), (-0.0024489784, 0.002464447, 0.049134616), (-0.0024489784, 0.002464447, 0.02948076), (0.0024644565, 0.0024489975, 0.0098269265), (-0.0024489784, 0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (-0.0024489784, 0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.02948076), (-0.0024489784, 0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.049134616), (-0.0024489784, 0.002464447, -0.049134616), (0.0024489784, -0.002464447, 0.02948076), (0.0024489784, -0.002464447, 0.049134616), (0.0024644565, 0.0024489975, 0.049134616), (0.0024644565, 0.0024489975, 0.02948076), (0.0024489784, -0.002464447, 0.0098269265), (0.0024644565, 0.0024489975, 0.0098269265), (0.0024489784, -0.002464447, -0.0098269265), (0.0024644565, 0.0024489975, -0.0098269265), (0.0024489784, -0.002464447, -0.02948076), (0.0024644565, 0.0024489975, -0.02948076), (0.0024489784, -0.002464447, -0.049134616), (0.0024644565, 0.0024489975, -0.049134616)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1), (1, 0.2), (1, 0), (0, 0), (0, 0.2), (1, 0.4), (0, 0.4), (1, 0.6), (0, 0.6), (1, 0.8), (0, 0.8), (1, 1), (0, 1)]
        custom float4[] primvars:tangents = [(0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.003144327, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.003149113, 0, -1), (-0.9999951, 0.0031491125, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (-0.9999951, 0.0031443276, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9933873, -0.11481135, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98973864, -0.14288943, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085296, 0, -1), (0.0031491125, 0.9999951, 0, -1), (0.98529655, -0.17085294, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.0031501441, 0.9999951, 0, -1), (0.9999951, -0.003149113, 0, -1), (0.9999951, -0.003144327, 0, -1), (0.9999951, -0.003144327, 0, -1), (-0.037337124, 0.99930274, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.03112091, 0.99951565, 0, -1), (0.9999951, -0.0031491125, 0, -1), (-0.024903478, 0.9996898, 0, -1), (0.9999951, -0.003149113, 0, -1), (-0.024903476, 0.9996898, 0, -1), (0.9999951, -0.0031443276, 0, -1), (0.9999951, -0.0031443276, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.9933873, 0.11481135, 0, -1), (-0.98973936, 0.14288507, 0, -1), (-0.98973864, 0.14288943, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085296, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.98529655, 0.17085294, 0, -1), (-0.0031501441, -0.9999951, 0, -1), (-0.0031501441, -0.9999951, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (49.08238584012145, 2.292108982054401, -19.58778531171231, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh491"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.9309565, -0.9342034, -0.039655738), (0.9309565, 0.9342034, 0.039655738)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.9309565, 0.9342034, 0.039655738), (0.9309565, 0.9342034, 0.039655738), (0.9309565, -0.9342034, 0.039655738), (-0.9309565, -0.9342034, 0.039655738), (-0.9309565, 0.9342034, -0.039655738), (-0.9309565, -0.9342034, -0.039655738), (0.9309565, -0.9342034, -0.039655738), (0.9309565, 0.9342034, -0.039655738), (-0.9309565, -0.9342034, -0.039655738), (-0.9309565, -0.9342034, 0.039655738), (0.9309565, -0.9342034, 0.039655738), (0.9309565, -0.9342034, -0.039655738), (-0.9309565, 0.9342034, -0.039655738), (-0.9309565, 0.9342034, 0.039655738), (-0.9309565, -0.9342034, 0.039655738), (-0.9309565, -0.9342034, -0.039655738), (0.9309565, 0.9342034, -0.039655738), (0.9309565, 0.9342034, 0.039655738), (-0.9309565, 0.9342034, 0.039655738), (-0.9309565, 0.9342034, -0.039655738), (0.9309565, -0.9342034, -0.039655738), (0.9309565, -0.9342034, 0.039655738), (0.9309565, 0.9342034, 0.039655738), (0.9309565, 0.9342034, -0.039655738)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (50.16452932357788, -0.4122355204793422, -23.2744197845459, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh492"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.099999994, -0.099999994, -0.2857211), (0.099999994, 0.099999994, 0.2857211)]
        int[] faceVertexCounts
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 0, 4, 3, 5, 2, 3, 4, 5, 3, 6, 4, 0, 7, 2, 5, 6, 8, 4, 7, 5, 9, 4, 8, 10, 8, 11, 10, 12, 4, 10, 11, 12, 10, 13, 11, 8, 13, 14, 11, 15, 5, 4, 15, 4, 12, 15, 16, 5, 15, 12, 16, 9, 5, 17, 5, 16, 17, 18, 9, 17, 16, 18, 17, 19, 9, 18, 19, 18, 20, 11, 14, 21, 14, 22, 21, 23, 11, 21, 22, 23, 21, 24, 22, 14, 24, 25, 22, 26, 12, 11, 26, 11, 23, 26, 27, 12, 26, 23, 27, 16, 12, 28, 12, 27, 28, 29, 16, 28, 27, 29, 28, 30, 18, 16, 30, 16, 29, 30, 31, 18, 30, 29, 31, 18, 31, 32, 31, 33, 32, 20, 18, 32, 33, 20, 32, 34, 20, 33, 34, 33, 35, 35, 33, 36, 33, 37, 36, 38, 35, 36, 37, 38, 36, 39, 35, 38, 40, 38, 37, 40, 37, 41, 42, 33, 31, 42, 37, 33, 42, 31, 43, 42, 43, 37, 41, 37, 44, 37, 43, 44, 45, 41, 44, 43, 45, 44, 46, 41, 45, 46, 45, 47, 43, 31, 48, 49, 43, 48, 31, 29, 48, 29, 49, 48, 50, 45, 43, 50, 43, 49, 50, 51, 45, 50, 49, 51, 47, 45, 52, 45, 51, 52, 53, 47, 52, 51, 53, 52, 54, 47, 53, 54, 53, 55, 56, 49, 29, 56, 57, 49, 56, 29, 27, 56, 27, 57, 51, 49, 58, 49, 57, 58, 59, 51, 58, 57, 59, 58, 60, 53, 51, 60, 51, 59, 60, 61, 53, 60, 59, 61, 55, 53, 62, 53, 61, 62, 63, 55, 62, 61, 63, 62, 64, 55, 63, 65, 63, 61, 65, 61, 66, 66, 61, 67, 61, 59, 67, 68, 66, 67, 59, 68, 67, 69, 66, 68, 69, 68, 70, 71, 68, 59, 71, 72, 68, 71, 59, 57, 71, 57, 72, 70, 68, 73, 68, 72, 73, 74, 70, 73, 72, 74, 73, 75, 70, 74, 75, 74, 76, 72, 57, 77, 57, 27, 77, 27, 23, 77, 23, 72, 77, 78, 72, 23, 78, 74, 72, 78, 23, 22, 78, 22, 74, 74, 22, 79, 76, 74, 79, 22, 25, 79, 25, 76, 79, 80, 76, 25, 82, 81, 83, 83, 81, 84, 81, 85, 84, 86, 83, 84, 85, 86, 84, 87, 85, 81, 88, 83, 86, 87, 89, 85, 88, 86, 90, 85, 89, 91, 89, 92, 91, 93, 85, 91, 92, 93, 91, 94, 92, 89, 94, 95, 92, 96, 86, 85, 96, 85, 93, 96, 97, 86, 96, 93, 97, 90, 86, 98, 86, 97, 98, 99, 90, 98, 97, 99, 98, 100, 90, 99, 100, 99, 101, 92, 95, 102, 95, 103, 102, 104, 92, 102, 103, 104, 102, 105, 103, 95, 105, 106, 103, 107, 93, 92, 107, 92, 104, 107, 108, 93, 107, 104, 108, 97, 93, 109, 93, 108, 109, 110, 97, 109, 108, 110, 109, 111, 99, 97, 111, 97, 110, 111, 112, 99, 111, 110, 112, 99, 112, 113, 112, 114, 113, 101, 99, 113, 114, 101, 113, 115, 101, 114, 115, 114, 116, 116, 114, 117, 114, 118, 117, 119, 116, 117, 118, 119, 117, 120, 116, 119, 121, 119, 118, 121, 118, 122, 123, 114, 112, 123, 118, 114, 123, 112, 124, 123, 124, 118, 122, 118, 125, 118, 124, 125, 126, 122, 125, 124, 126, 125, 127, 122, 126, 127, 126, 128, 124, 112, 129, 130, 124, 129, 112, 110, 129, 110, 130, 129, 131, 126, 124, 131, 124, 130, 131, 132, 126, 131, 130, 132, 128, 126, 133, 126, 132, 133, 134, 128, 133, 132, 134, 133, 135, 128, 134, 135, 134, 136, 137, 130, 110, 137, 138, 130, 137, 110, 108, 137, 108, 138, 132, 130, 139, 130, 138, 139, 140, 132, 139, 138, 140, 139, 141, 134, 132, 141, 132, 140, 141, 142, 134, 141, 140, 142, 136, 134, 143, 134, 142, 143, 144, 136, 143, 142, 144, 143, 145, 136, 144, 146, 144, 142, 146, 142, 147, 147, 142, 148, 142, 140, 148, 149, 147, 148, 140, 149, 148, 150, 147, 149, 150, 149, 151, 152, 149, 140, 152, 153, 149, 152, 140, 138, 152, 138, 153, 151, 149, 154, 149, 153, 154, 155, 151, 154, 153, 155, 154, 156, 151, 155, 156, 155, 157, 153, 138, 158, 138, 108, 158, 108, 104, 158, 104, 153, 158, 159, 153, 104, 159, 155, 153, 159, 104, 103, 159, 103, 155, 155, 103, 160, 157, 155, 160, 103, 106, 160, 106, 157, 160, 161, 157, 106, 163, 162, 164, 164, 162, 165, 162, 166, 165, 167, 164, 165, 166, 167, 165, 168, 166, 162, 169, 164, 167, 168, 170, 166, 169, 167, 171, 166, 170, 172, 170, 173, 172, 174, 166, 172, 173, 174, 172, 175, 173, 170, 175, 176, 173, 177, 167, 166, 177, 166, 174, 177, 178, 167, 177, 174, 178, 171, 167, 179, 167, 178, 179, 180, 171, 179, 178, 180, 179, 181, 171, 180, 181, 180, 182, 173, 176, 183, 176, 184, 183, 185, 173, 183, 184, 185, 183, 186, 184, 176, 186, 187, 184, 188, 174, 173, 188, 173, 185, 188, 189, 174, 188, 185, 189, 178, 174, 190, 174, 189, 190, 191, 178, 190, 189, 191, 190, 192, 180, 178, 192, 178, 191, 192, 193, 180, 192, 191, 193, 180, 193, 194, 193, 195, 194, 182, 180, 194, 195, 182, 194, 196, 182, 195, 196, 195, 197, 197, 195, 198, 195, 199, 198, 200, 197, 198, 199, 200, 198, 201, 197, 200, 202, 200, 199, 202, 199, 203, 204, 195, 193, 204, 199, 195, 204, 193, 205, 204, 205, 199, 203, 199, 206, 199, 205, 206, 207, 203, 206, 205, 207, 206, 208, 203, 207, 208, 207, 209, 205, 193, 210, 211, 205, 210, 193, 191, 210, 191, 211, 210, 212, 207, 205, 212, 205, 211, 212, 213, 207, 212, 211, 213, 209, 207, 214, 207, 213, 214, 215, 209, 214, 213, 215, 214, 216, 209, 215, 216, 215, 217, 218, 211, 191, 218, 219, 211, 218, 191, 189, 218, 189, 219, 213, 211, 220, 211, 219, 220, 221, 213, 220, 219, 221, 220, 222, 215, 213, 222, 213, 221, 222, 223, 215, 222, 221, 223, 217, 215, 224, 215, 223, 224, 225, 217, 224, 223, 225, 224, 226, 217, 225, 227, 225, 223, 227, 223, 228, 219, 189, 229, 230, 219, 229, 189, 185, 229, 185, 230, 229, 231, 221, 219, 231, 219, 230, 231, 232, 221, 231, 230, 232, 223, 221, 233, 228, 223, 233, 221, 232, 233, 232, 228, 233, 234, 230, 185, 234, 235, 230, 234, 185, 184, 234, 184, 235, 232, 230, 236, 230, 235, 236, 237, 232, 236, 235, 237, 236, 238, 228, 232, 238, 232, 237, 238, 239, 228, 238, 237, 239, 228, 239, 240, 239, 237, 241, 237, 242, 241, 242, 243, 241, 243, 244, 241, 235, 184, 245, 246, 235, 245, 184, 187, 245, 187, 246, 245, 247, 246, 187, 247, 248, 246, 249, 237, 235, 249, 242, 237, 249, 235, 246, 249, 246, 242, 246, 248, 250, 242, 246, 250, 248, 251, 250, 251, 242, 250, 252, 251, 248, 252, 253, 251, 254, 243, 242, 254, 242, 251, 254, 251, 255, 254, 255, 243, 251, 253, 256, 255, 251, 256, 253, 257, 256, 257, 255, 256, 258, 257, 253, 258, 259, 257, 257, 259, 260, 259, 261, 260, 262, 257, 260, 261, 262, 260, 263, 261, 259, 263, 264, 261, 265, 255, 257, 265, 257, 262, 265, 266, 255, 265, 262, 266, 243, 255, 267, 255, 266, 267, 268, 243, 267, 266, 268, 267, 269, 243, 268, 269, 268, 270, 269, 244, 243, 269, 270, 244, 244, 270, 271, 270, 272, 271, 272, 273, 271, 274, 273, 272, 274, 272, 275, 275, 272, 276, 272, 277, 276, 278, 275, 276, 277, 278, 276, 279, 275, 278, 280, 278, 277, 280, 277, 281, 282, 272, 270, 282, 277, 272, 282, 270, 283, 282, 283, 277, 281, 277, 284, 277, 283, 284, 285, 281, 284, 283, 285, 284, 286, 281, 285, 286, 285, 287, 283, 270, 288, 289, 283, 288, 270, 268, 288, 268, 289, 288, 290, 285, 283, 290, 283, 289, 290, 291, 285, 290, 289, 291, 287, 285, 292, 285, 291, 292, 293, 287, 292, 291, 293, 292, 294, 287, 293, 294, 293, 295, 296, 289, 268, 296, 297, 289, 296, 268, 266, 296, 266, 297, 291, 289, 298, 289, 297, 298, 299, 291, 298, 297, 299, 298, 300, 293, 291, 300, 291, 299, 300, 301, 293, 300, 299, 301, 295, 293, 302, 293, 301, 302, 303, 295, 302, 301, 303, 302, 304, 295, 303, 297, 266, 305, 306, 297, 305, 266, 262, 305, 262, 306, 305, 307, 299, 297, 307, 297, 306, 307, 308, 299, 307, 306, 308, 301, 299, 309, 299, 308, 309, 310, 301, 309, 308, 310, 309, 304, 303, 311, 311, 303, 312, 311, 313, 304, 314, 306, 262, 314, 315, 306, 314, 262, 261, 314, 261, 315, 316, 303, 301, 316, 301, 310, 308, 306, 317, 306, 315, 317, 318, 308, 317, 315, 318, 317, 315, 261, 319, 261, 264, 319, 264, 320, 319, 320, 315, 319, 321, 320, 264, 316, 310, 322, 322, 310, 323, 322, 324, 316, 325, 308, 318, 325, 310, 308, 326, 315, 320, 326, 318, 315, 316, 324, 327, 316, 327, 303, 325, 318, 328, 328, 318, 329, 328, 330, 323, 331, 330, 328, 330, 332, 323, 326, 320, 333, 333, 320, 334, 333, 335, 329, 336, 335, 333, 331, 335, 337, 337, 335, 338, 337, 339, 331, 326, 340, 318, 318, 341, 329, 318, 340, 341, 333, 342, 326, 326, 342, 340, 320, 343, 334, 320, 344, 343, 321, 344, 320, 340, 345, 341, 340, 346, 345, 342, 346, 340, 341, 345, 347, 345, 346, 347, 342, 348, 346, 347, 346, 348, 341, 347, 349, 349, 347, 348, 349, 348, 342, 333, 349, 342, 329, 341, 349, 329, 349, 333, 334, 350, 333, 333, 350, 351, 333, 351, 336, 334, 352, 350, 353, 352, 334, 354, 353, 334, 355, 353, 354, 334, 356, 354, 334, 343, 356, 336, 353, 357, 357, 353, 358, 357, 359, 336, 350, 360, 351, 350, 361, 360, 352, 361, 350, 351, 360, 362, 361, 362, 360, 352, 363, 361, 363, 362, 361, 351, 362, 364, 364, 362, 363, 364, 363, 352, 353, 364, 352, 336, 351, 364, 336, 364, 353, 336, 359, 365, 336, 365, 335, 353, 366, 358, 353, 367, 366, 355, 367, 353, 359, 368, 365, 335, 365, 369, 365, 368, 370, 365, 370, 369, 370, 368, 371, 369, 370, 371, 359, 372, 368, 371, 368, 372, 373, 372, 359, 373, 371, 372, 369, 371, 373, 357, 373, 359, 338, 369, 373, 335, 369, 338, 338, 373, 357, 357, 374, 338, 375, 374, 357, 374, 376, 338, 338, 376, 377, 338, 377, 337, 357, 378, 375, 357, 379, 378, 358, 379, 357, 374, 380, 376, 381, 380, 374, 381, 382, 337, 337, 382, 383, 381, 384, 382, 381, 374, 385, 385, 374, 386, 385, 387, 381, 381, 387, 384, 381, 388, 380, 337, 388, 381, 380, 389, 376, 380, 390, 389, 388, 390, 380, 376, 389, 391, 389, 390, 391, 376, 391, 377, 337, 377, 388, 391, 390, 392, 377, 391, 392, 377, 392, 388, 388, 392, 390, 374, 393, 386, 374, 394, 393, 375, 394, 374, 386, 393, 395, 386, 395, 396, 375, 397, 396, 396, 397, 398, 375, 399, 397, 396, 400, 386, 401, 400, 396, 400, 402, 386, 386, 402, 403, 386, 403, 385, 375, 404, 394, 396, 404, 375, 396, 395, 404, 375, 378, 399, 394, 405, 393, 393, 406, 395, 393, 405, 406, 394, 407, 405, 404, 407, 394, 405, 407, 406, 395, 408, 404, 404, 408, 407, 406, 407, 408, 395, 406, 408, 378, 409, 399, 378, 410, 409, 379, 410, 378, 411, 409, 410, 379, 411, 410, 399, 409, 412, 412, 409, 411, 413, 411, 379, 413, 412, 411, 399, 412, 413, 358, 413, 379, 397, 399, 413, 397, 413, 358, 414, 397, 358, 415, 397, 414, 358, 416, 414, 358, 366, 416, 415, 417, 397, 397, 417, 418, 397, 418, 398, 366, 419, 416, 366, 420, 419, 367, 420, 366, 420, 421, 419, 367, 421, 420, 416, 419, 422, 419, 421, 422, 423, 421, 367, 423, 422, 421, 416, 422, 423, 414, 416, 423, 355, 423, 367, 414, 423, 355, 355, 424, 414, 414, 424, 425, 355, 426, 424, 355, 427, 426, 354, 427, 355, 425, 428, 414, 414, 428, 429, 414, 429, 415, 424, 426, 430, 424, 430, 431, 354, 432, 431, 321, 432, 354, 433, 424, 431, 434, 424, 433, 431, 435, 433, 424, 436, 425, 434, 437, 424, 424, 437, 436, 426, 438, 430, 426, 439, 438, 427, 439, 426, 430, 438, 440, 438, 439, 440, 427, 441, 439, 440, 439, 441, 430, 440, 442, 442, 440, 441, 442, 441, 427, 431, 430, 442, 354, 442, 427, 431, 442, 354, 433, 443, 434, 434, 444, 437, 445, 444, 434, 434, 446, 445, 445, 446, 447, 434, 448, 446, 434, 443, 448, 444, 449, 437, 437, 449, 450, 437, 450, 436, 450, 449, 451, 436, 450, 451, 444, 452, 449, 451, 449, 452, 436, 451, 453, 453, 451, 452, 453, 452, 444, 445, 453, 444, 425, 436, 453, 425, 453, 445, 445, 454, 425, 455, 454, 445, 454, 456, 425, 425, 456, 428, 445, 457, 455, 445, 458, 457, 447, 458, 445, 456, 459, 428, 428, 459, 460, 428, 460, 429, 459, 461, 460, 429, 460, 461, 456, 462, 459, 462, 461, 459, 429, 461, 463, 463, 461, 462, 463, 462, 456, 454, 463, 456, 415, 429, 463, 415, 463, 454, 415, 454, 464, 464, 454, 465, 464, 466, 415, 415, 466, 417, 454, 467, 465, 454, 468, 467, 455, 468, 454, 466, 469, 417, 417, 469, 470, 417, 470, 418, 470, 469, 471, 418, 470, 471, 466, 472, 469, 471, 469, 472, 418, 471, 473, 473, 471, 472, 473, 472, 466, 464, 473, 466, 398, 418, 473, 398, 473, 464, 464, 474, 398, 475, 474, 464, 474, 476, 398, 398, 476, 477, 398, 477, 396, 396, 477, 478, 396, 478, 401, 401, 474, 479, 479, 474, 480, 479, 481, 401, 464, 482, 475, 464, 483, 482, 465, 483, 464, 476, 484, 477, 477, 485, 478, 477, 484, 485, 478, 485, 486, 484, 486, 485, 476, 487, 484, 487, 486, 484, 478, 486, 488, 488, 486, 487, 488, 487, 476, 401, 478, 488, 474, 488, 476, 401, 488, 474, 475, 489, 474, 474, 489, 490, 474, 490, 480, 475, 491, 489, 492, 491, 475, 492, 493, 480, 494, 493, 492, 494, 495, 493, 494, 496, 495, 494, 497, 496, 475, 498, 492, 492, 498, 499, 475, 500, 498, 475, 482, 500, 494, 501, 497, 492, 501, 494, 502, 496, 499, 503, 496, 502, 499, 504, 502, 503, 505, 496, 503, 506, 505, 503, 507, 506, 502, 508, 503, 503, 508, 507, 482, 509, 500, 482, 510, 509, 483, 510, 482, 511, 509, 510, 483, 511, 510, 500, 509, 512, 512, 509, 511, 513, 511, 483, 513, 512, 511, 500, 512, 513, 465, 513, 483, 498, 500, 513, 498, 513, 465, 514, 498, 465, 515, 498, 514, 465, 516, 514, 465, 467, 516, 515, 517, 498, 498, 517, 518, 498, 518, 499, 467, 519, 516, 467, 520, 519, 468, 520, 467, 520, 521, 519, 468, 521, 520, 516, 519, 522, 519, 521, 522, 523, 521, 468, 523, 522, 521, 516, 522, 523, 514, 516, 523, 455, 523, 468, 514, 523, 455, 455, 524, 514, 514, 524, 525, 455, 526, 524, 455, 457, 526, 525, 527, 514, 514, 527, 528, 514, 528, 515, 457, 529, 526, 457, 530, 529, 458, 530, 457, 531, 529, 530, 458, 531, 530, 526, 529, 532, 532, 529, 531, 533, 531, 458, 533, 532, 531, 526, 532, 533, 524, 526, 533, 447, 533, 458, 524, 533, 447, 534, 524, 447, 535, 524, 534, 447, 536, 534, 447, 537, 536, 446, 537, 447, 535, 538, 524, 524, 538, 539, 524, 539, 525, 534, 540, 535, 534, 536, 541, 534, 541, 542, 542, 446, 543, 543, 446, 544, 543, 545, 542, 542, 546, 534, 534, 546, 547, 542, 548, 546, 542, 545, 548, 534, 549, 540, 547, 549, 534, 542, 541, 550, 542, 550, 446, 536, 551, 541, 541, 551, 552, 541, 552, 550, 536, 553, 551, 553, 552, 551, 537, 553, 536, 446, 550, 537, 554, 552, 553, 550, 552, 554, 550, 554, 537, 537, 554, 553, 545, 555, 548, 548, 555, 556, 548, 556, 557, 546, 548, 557, 546, 557, 558, 556, 555, 559, 557, 556, 559, 545, 560, 555, 559, 555, 560, 557, 559, 561, 561, 559, 560, 561, 560, 545, 558, 557, 561, 543, 561, 545, 558, 561, 543, 543, 562, 558, 563, 562, 543, 563, 564, 562, 563, 565, 564, 563, 566, 565, 543, 567, 563, 563, 567, 566, 568, 546, 558, 569, 546, 568, 558, 570, 568, 562, 571, 558, 558, 571, 570, 543, 572, 567, 544, 572, 543, 567, 573, 566, 572, 574, 567, 567, 574, 573, 572, 575, 574, 575, 573, 574, 566, 573, 576, 576, 573, 575, 577, 575, 572, 577, 576, 575, 566, 576, 577, 544, 577, 572, 565, 566, 577, 565, 577, 544, 568, 570, 578, 571, 579, 570, 570, 580, 578, 570, 579, 580, 579, 581, 580, 578, 580, 581, 571, 582, 579, 582, 581, 579, 583, 582, 571, 583, 581, 582, 578, 581, 583, 562, 583, 571, 584, 578, 583, 568, 578, 584, 584, 583, 562, 584, 562, 585, 584, 586, 568, 584, 585, 586, 568, 586, 587, 585, 562, 588, 589, 585, 588, 562, 564, 588, 564, 589, 588, 587, 590, 568, 568, 590, 591, 568, 591, 569, 586, 585, 592, 585, 593, 592, 594, 585, 589, 594, 593, 585, 594, 589, 595, 594, 595, 593, 596, 586, 592, 593, 596, 592, 597, 596, 593, 597, 593, 598, 599, 586, 596, 598, 593, 600, 593, 595, 600, 601, 598, 600, 595, 601, 600, 602, 598, 601, 602, 601, 603, 599, 604, 586, 586, 604, 605, 586, 605, 587, 603, 601, 606, 607, 603, 606, 601, 608, 606, 608, 607, 606, 609, 603, 607, 609, 607, 610, 611, 601, 595, 611, 608, 601, 611, 595, 612, 611, 612, 608, 612, 595, 613, 614, 612, 613, 595, 589, 613, 589, 614, 613, 615, 614, 589, 615, 616, 614, 615, 589, 564, 615, 564, 616, 616, 564, 617, 618, 616, 617, 564, 565, 617, 565, 618, 617, 619, 618, 565, 619, 565, 433, 433, 565, 544, 544, 620, 433, 544, 621, 620, 446, 621, 544, 446, 448, 621, 448, 622, 621, 448, 623, 622, 443, 623, 448, 433, 620, 443, 621, 622, 624, 622, 623, 624, 621, 624, 620, 620, 625, 443, 443, 625, 623, 624, 623, 625, 620, 624, 625, 433, 626, 619, 433, 435, 626, 619, 432, 618, 619, 626, 627, 619, 627, 432, 435, 628, 626, 626, 628, 629, 626, 629, 627, 435, 630, 628, 630, 629, 628, 627, 629, 631, 631, 629, 630, 632, 630, 435, 632, 631, 630, 627, 631, 632, 432, 627, 632, 431, 632, 435, 432, 632, 431, 618, 432, 633, 634, 618, 633, 432, 635, 633, 635, 634, 633, 321, 635, 432, 636, 634, 635, 636, 637, 634, 638, 618, 634, 638, 634, 639, 638, 616, 618, 638, 639, 616, 634, 637, 640, 639, 634, 640, 637, 641, 640, 641, 639, 640, 642, 641, 637, 642, 643, 641, 616, 639, 644, 639, 645, 644, 614, 616, 644, 645, 614, 644, 646, 639, 641, 646, 645, 639, 646, 641, 647, 646, 647, 645, 641, 643, 648, 647, 641, 648, 643, 649, 648, 649, 647, 648, 650, 649, 643, 650, 651, 649, 652, 614, 645, 652, 645, 653, 652, 612, 614, 652, 653, 612, 645, 647, 654, 653, 645, 654, 647, 655, 654, 655, 653, 654, 656, 647, 649, 656, 655, 647, 656, 649, 657, 656, 657, 655, 649, 651, 658, 657, 649, 658, 651, 659, 658, 659, 657, 658, 660, 659, 651, 660, 661, 659, 612, 653, 662, 653, 663, 662, 608, 612, 662, 663, 608, 662, 664, 653, 655, 664, 663, 653, 664, 655, 665, 664, 665, 663, 655, 657, 666, 665, 655, 666, 657, 667, 666, 667, 665, 666, 668, 657, 659, 668, 667, 657, 668, 659, 669, 668, 669, 667, 659, 661, 670, 669, 659, 670, 661, 671, 670, 671, 669, 670, 672, 671, 661, 672, 673, 671, 671, 673, 674, 673, 675, 674, 676, 671, 674, 675, 676, 674, 677, 675, 673, 677, 678, 675, 679, 669, 671, 679, 671, 676, 679, 680, 669, 679, 676, 680, 667, 669, 681, 669, 680, 681, 682, 667, 681, 680, 682, 681, 683, 667, 682, 683, 682, 684, 683, 665, 667, 683, 684, 665, 665, 684, 685, 684, 686, 685, 663, 665, 685, 686, 663, 685, 687, 663, 686, 687, 608, 663, 687, 607, 608, 687, 686, 607, 607, 686, 688, 686, 689, 688, 610, 607, 688, 689, 610, 688, 690, 610, 689, 690, 689, 691, 692, 686, 684, 692, 689, 686, 692, 684, 693, 692, 693, 689, 691, 689, 694, 689, 693, 694, 695, 691, 694, 693, 695, 694, 696, 691, 695, 696, 695, 697, 693, 684, 698, 699, 693, 698, 684, 682, 698, 682, 699, 698, 700, 695, 693, 700, 693, 699, 700, 701, 695, 700, 699, 701, 697, 695, 702, 695, 701, 702, 703, 697, 702, 701, 703, 702, 704, 697, 703, 704, 703, 705, 706, 699, 682, 706, 707, 699, 706, 682, 680, 706, 680, 707, 701, 699, 708, 699, 707, 708, 709, 701, 708, 707, 709, 708, 710, 703, 701, 710, 701, 709, 710, 711, 703, 710, 709, 711, 705, 703, 712, 703, 711, 712, 713, 705, 712, 711, 713, 712, 714, 705, 713, 714, 713, 715, 707, 680, 716, 717, 707, 716, 680, 676, 716, 676, 717, 716, 718, 709, 707, 718, 707, 717, 718, 719, 709, 718, 717, 719, 711, 709, 720, 709, 719, 720, 721, 711, 720, 719, 721, 720, 722, 713, 711, 722, 711, 721, 722, 723, 713, 722, 721, 723, 715, 713, 724, 713, 723, 724, 725, 715, 724, 723, 725, 724, 726, 715, 725, 727, 725, 723, 727, 723, 728, 728, 723, 729, 723, 721, 729, 730, 728, 729, 721, 730, 729, 731, 728, 730, 731, 730, 732, 733, 730, 721, 733, 734, 730, 733, 721, 719, 733, 719, 734, 732, 730, 735, 730, 734, 735, 736, 732, 735, 734, 736, 735, 737, 732, 736, 737, 736, 738, 734, 719, 739, 740, 734, 739, 719, 717, 739, 717, 740, 739, 741, 736, 734, 741, 734, 740, 741, 742, 736, 741, 740, 742, 738, 736, 743, 736, 742, 743, 744, 738, 743, 742, 744, 743, 745, 738, 744, 746, 744, 742, 746, 742, 678, 678, 742, 747, 742, 740, 747, 675, 678, 747, 740, 675, 747, 748, 740, 717, 748, 675, 740, 748, 717, 676, 748, 676, 675, 750, 749, 751, 751, 749, 752, 749, 753, 752, 754, 751, 752, 753, 754, 752, 755, 753, 749, 756, 751, 754, 755, 757, 753, 756, 754, 758, 753, 757, 759, 757, 760, 759, 761, 753, 759, 760, 761, 759, 762, 760, 757, 762, 763, 760, 764, 754, 753, 764, 753, 761, 764, 765, 754, 764, 761, 765, 758, 754, 766, 754, 765, 766, 767, 758, 766, 765, 767, 766, 768, 758, 767, 768, 767, 769, 760, 763, 770, 763, 771, 770, 772, 760, 770, 771, 772, 770, 773, 771, 763, 773, 774, 771, 775, 761, 760, 775, 760, 772, 775, 776, 761, 775, 772, 776, 765, 761, 777, 761, 776, 777, 778, 765, 777, 776, 778, 777, 779, 767, 765, 779, 765, 778, 779, 780, 767, 779, 778, 780, 767, 780, 781, 780, 782, 781, 769, 767, 781, 782, 769, 781, 783, 769, 782, 783, 782, 784, 784, 782, 785, 782, 786, 785, 787, 784, 785, 786, 787, 785, 788, 784, 787, 789, 787, 786, 789, 786, 790, 791, 782, 780, 791, 786, 782, 791, 780, 792, 791, 792, 786, 790, 786, 793, 786, 792, 793, 794, 790, 793, 792, 794, 793, 795, 790, 794, 795, 794, 796, 792, 780, 797, 798, 792, 797, 780, 778, 797, 778, 798, 797, 799, 794, 792, 799, 792, 798, 799, 800, 794, 799, 798, 800, 796, 794, 801, 794, 800, 801, 802, 796, 801, 800, 802, 801, 803, 796, 802, 803, 802, 804, 805, 798, 778, 805, 806, 798, 805, 778, 776, 805, 776, 806, 800, 798, 807, 798, 806, 807, 808, 800, 807, 806, 808, 807, 809, 802, 800, 809, 800, 808, 809, 810, 802, 809, 808, 810, 804, 802, 811, 802, 810, 811, 812, 804, 811, 810, 812, 811, 813, 804, 812, 813, 812, 814, 806, 776, 815, 816, 806, 815, 776, 772, 815, 772, 816, 815, 817, 808, 806, 817, 806, 816, 817, 818, 808, 817, 816, 818, 810, 808, 819, 808, 818, 819, 820, 810, 819, 818, 820, 819, 821, 810, 820, 821, 812, 810, 821, 822, 812, 823, 820, 818, 812, 822, 824, 814, 812, 824, 825, 814, 824, 826, 814, 825, 823, 818, 827, 828, 825, 824, 826, 825, 829, 827, 818, 830, 831, 827, 830, 818, 816, 830, 816, 831, 830, 832, 827, 831, 832, 831, 833, 834, 831, 816, 834, 816, 772, 834, 772, 771, 834, 771, 831, 831, 771, 835, 833, 831, 835, 771, 774, 835, 774, 833, 835, 836, 833, 774, 829, 825, 837, 838, 829, 837, 825, 839, 837, 839, 838, 837, 840, 829, 838, 840, 838, 841, 842, 839, 825, 842, 843, 839, 842, 825, 828, 842, 828, 843, 841, 838, 844, 845, 841, 844, 838, 846, 844, 846, 845, 844, 847, 841, 845, 847, 845, 848, 849, 838, 839, 849, 846, 838, 849, 839, 850, 849, 850, 846, 839, 843, 851, 850, 839, 851, 843, 852, 851, 852, 850, 851, 843, 828, 853, 854, 843, 853, 828, 855, 853, 855, 854, 853, 856, 855, 828, 857, 854, 855, 857, 858, 854, 859, 852, 843, 859, 843, 854, 859, 854, 860, 859, 860, 852, 854, 858, 861, 860, 854, 861, 858, 862, 861, 862, 860, 861, 863, 862, 858, 863, 864, 862, 862, 864, 865, 866, 862, 865, 864, 867, 865, 867, 866, 865, 868, 867, 864, 869, 866, 867, 869, 870, 866, 871, 860, 862, 871, 862, 866, 871, 872, 860, 871, 866, 872, 866, 870, 873, 872, 866, 873, 870, 874, 873, 874, 872, 873, 875, 874, 870, 875, 876, 874, 860, 872, 877, 872, 878, 877, 852, 860, 877, 878, 852, 877, 879, 872, 874, 879, 878, 872, 879, 874, 880, 879, 880, 878, 874, 876, 881, 880, 874, 881, 876, 882, 881, 882, 880, 881, 883, 882, 876, 883, 884, 882, 885, 852, 878, 885, 878, 886, 885, 850, 852, 885, 886, 850, 878, 880, 887, 886, 878, 887, 880, 888, 887, 888, 886, 887, 889, 880, 882, 889, 888, 880, 889, 882, 890, 889, 890, 888, 882, 884, 891, 890, 882, 891, 884, 892, 891, 892, 890, 891, 893, 892, 884, 850, 886, 894, 846, 850, 894, 886, 895, 894, 895, 846, 894, 896, 846, 895, 896, 845, 846, 896, 897, 845, 898, 895, 886, 898, 886, 888, 898, 899, 895, 898, 888, 899, 895, 899, 900, 901, 897, 900, 899, 901, 900, 845, 897, 902, 897, 903, 902, 903, 848, 902, 848, 845, 902, 599, 848, 903, 599, 903, 904, 904, 903, 905, 904, 906, 599, 599, 906, 604, 899, 888, 907, 908, 899, 907, 909, 899, 908, 888, 890, 907, 890, 908, 907, 909, 901, 899, 910, 908, 890, 910, 890, 892, 909, 908, 911, 911, 908, 912, 911, 913, 909, 909, 914, 901, 909, 913, 914, 910, 892, 915, 915, 892, 916, 915, 917, 912, 918, 917, 915, 917, 919, 912, 910, 920, 908, 915, 921, 910, 910, 921, 920, 908, 922, 912, 908, 920, 922, 892, 923, 916, 892, 924, 923, 893, 924, 892, 921, 925, 920, 920, 926, 922, 920, 925, 926, 922, 926, 927, 926, 925, 927, 921, 928, 925, 927, 925, 928, 922, 927, 929, 929, 927, 928, 929, 928, 921, 912, 922, 929, 915, 929, 921, 912, 929, 915, 916, 930, 915, 915, 930, 931, 915, 931, 918, 916, 932, 930, 933, 932, 916, 934, 933, 916, 935, 933, 934, 916, 936, 934, 916, 923, 936, 918, 933, 937, 937, 933, 938, 937, 939, 918, 930, 940, 931, 930, 941, 940, 932, 941, 930, 931, 940, 942, 941, 942, 940, 932, 943, 941, 943, 942, 941, 931, 942, 944, 944, 942, 943, 944, 943, 932, 933, 944, 932, 918, 931, 944, 918, 944, 933, 918, 939, 945, 918, 945, 917, 933, 946, 938, 933, 947, 946, 935, 947, 933, 939, 948, 945, 917, 945, 949, 917, 949, 950, 945, 948, 951, 945, 951, 949, 951, 948, 952, 949, 951, 952, 939, 953, 948, 952, 948, 953, 949, 952, 954, 954, 952, 953, 954, 953, 939, 950, 949, 954, 937, 954, 939, 950, 954, 937, 955, 917, 950, 956, 917, 955, 950, 957, 955, 937, 958, 950, 959, 958, 937, 958, 960, 950, 950, 960, 957, 956, 961, 917, 917, 961, 919, 937, 962, 959, 937, 963, 962, 938, 963, 937, 955, 957, 964, 955, 964, 965, 965, 958, 966, 966, 958, 967, 966, 968, 965, 965, 969, 955, 955, 969, 970, 965, 971, 969, 965, 968, 971, 965, 964, 972, 965, 972, 958, 957, 973, 964, 964, 973, 974, 964, 974, 972, 957, 975, 973, 975, 974, 973, 960, 975, 957, 958, 972, 960, 976, 974, 975, 972, 974, 976, 972, 976, 960, 960, 976, 975, 970, 977, 955, 955, 977, 978, 955, 978, 956, 970, 979, 977, 980, 979, 970, 981, 980, 970, 982, 980, 981, 970, 983, 981, 970, 984, 983, 969, 984, 970, 977, 985, 978, 977, 986, 985, 979, 986, 977, 978, 985, 987, 986, 987, 985, 979, 988, 986, 988, 987, 986, 978, 987, 989, 989, 987, 988, 989, 988, 979, 956, 978, 989, 980, 989, 979, 956, 989, 980, 956, 980, 911, 911, 980, 990, 911, 991, 956, 956, 991, 961, 980, 992, 990, 980, 993, 992, 982, 993, 980, 991, 994, 961, 961, 994, 995, 961, 995, 919, 995, 994, 996, 919, 995, 996, 991, 997, 994, 996, 994, 997, 919, 996, 998, 998, 996, 997, 998, 997, 991, 911, 998, 991, 912, 919, 998, 912, 998, 911, 990, 999, 911, 911, 999, 913, 999, 1000, 913, 913, 1000, 1001, 913, 1001, 914, 999, 1002, 1000, 1002, 1001, 1000, 914, 1001, 1003, 1003, 1001, 1002, 1004, 1002, 999, 1004, 1003, 1002, 914, 1003, 1004, 990, 1004, 999, 901, 914, 1004, 901, 1004, 990, 1005, 901, 990, 1006, 901, 1005, 990, 1007, 1005, 1006, 897, 901, 990, 992, 1007, 1006, 903, 897, 1006, 1008, 903, 1005, 1009, 1006, 1006, 1009, 1008, 903, 1008, 1010, 903, 1010, 905, 1005, 1011, 905, 982, 1011, 1005, 1011, 1012, 905, 992, 1013, 1007, 992, 1014, 1013, 993, 1014, 992, 1014, 1015, 1013, 993, 1015, 1014, 1007, 1013, 1016, 1013, 1015, 1016, 1017, 1015, 993, 1017, 1016, 1015, 1007, 1016, 1017, 982, 1017, 993, 1005, 1007, 1017, 1005, 1017, 982, 905, 1018, 1005, 905, 1010, 1018, 1005, 1018, 1009, 905, 1012, 1019, 905, 1019, 904, 1010, 1020, 1018, 1018, 1021, 1009, 1018, 1020, 1021, 1009, 1021, 1022, 1020, 1022, 1021, 1009, 1022, 1008, 1008, 1023, 1010, 1010, 1023, 1020, 1023, 1022, 1020, 1008, 1022, 1023, 1012, 1024, 1019, 904, 1019, 1025, 904, 1025, 1026, 1019, 1024, 1027, 1019, 1027, 1025, 1024, 1028, 1027, 1025, 1027, 1028, 1012, 1029, 1024, 1029, 1028, 1024, 1025, 1028, 1030, 1030, 1028, 1029, 1030, 1029, 1012, 1026, 1025, 1030, 1011, 1030, 1012, 1026, 1030, 1011, 1026, 1031, 904, 904, 1031, 587, 1026, 1032, 1031, 1026, 1011, 1033, 1033, 1011, 1034, 1033, 1035, 1026, 1026, 1035, 1032, 587, 1036, 904, 904, 1036, 906, 1031, 1037, 587, 587, 605, 1036, 587, 1037, 590, 1036, 1038, 906, 605, 1039, 1036, 1036, 1039, 1038, 906, 1038, 1040, 1039, 1040, 1038, 906, 1040, 604, 604, 1041, 605, 605, 1041, 1039, 1041, 1040, 1039, 604, 1040, 1041, 1037, 1042, 590, 590, 1042, 1043, 590, 1043, 591, 1042, 1044, 1043, 591, 1043, 1044, 1037, 1045, 1042, 1045, 1044, 1042, 591, 1044, 1046, 1046, 1044, 1045, 1046, 1045, 1037, 569, 591, 1046, 1031, 1046, 1037, 569, 1046, 1031, 569, 1031, 1047, 1047, 1031, 1048, 1047, 1049, 569, 1031, 1050, 1048, 1031, 1032, 1050, 569, 1049, 1051, 569, 1051, 546, 546, 1051, 1052, 546, 1052, 547, 1047, 1053, 547, 1054, 1053, 1047, 1053, 1055, 547, 1032, 1056, 1050, 1032, 1057, 1056, 1035, 1057, 1032, 1050, 1056, 1058, 1056, 1057, 1058, 1035, 1059, 1057, 1058, 1057, 1059, 1050, 1058, 1060, 1060, 1058, 1059, 1060, 1059, 1035, 1048, 1050, 1060, 1033, 1060, 1035, 1048, 1060, 1033, 1033, 1061, 1048, 1062, 1061, 1033, 1061, 1063, 1048, 1048, 1063, 1064, 1048, 1064, 1047, 547, 1065, 1047, 547, 1052, 1065, 1033, 1066, 1062, 1033, 1067, 1066, 1034, 1067, 1033, 1047, 1064, 1068, 1047, 1065, 1049, 1047, 1068, 1054, 1054, 1061, 1069, 1069, 1061, 1070, 1069, 1071, 1054, 1065, 1072, 1049, 1049, 1072, 1073, 1049, 1073, 1051, 1065, 1074, 1072, 1074, 1073, 1072, 1052, 1074, 1065, 1051, 1073, 1075, 1075, 1073, 1074, 1051, 1075, 1052, 1052, 1075, 1074, 1064, 1076, 1068, 1064, 1077, 1076, 1063, 1077, 1064, 1068, 1076, 1078, 1077, 1078, 1076, 1063, 1079, 1077, 1079, 1078, 1077, 1068, 1078, 1080, 1080, 1078, 1079, 1080, 1079, 1063, 1054, 1068, 1080, 1061, 1080, 1063, 1054, 1080, 1061, 1054, 1081, 1053, 1054, 1071, 1081, 1053, 1081, 1082, 1053, 1082, 1083, 1084, 1053, 1083, 535, 1053, 1084, 1083, 1085, 1084, 535, 1086, 1053, 1053, 1086, 1055, 1071, 1087, 1081, 1081, 1088, 1082, 1081, 1087, 1088, 1082, 1088, 1089, 1088, 1087, 1089, 1071, 1090, 1087, 1089, 1087, 1090, 1082, 1089, 1091, 1091, 1089, 1090, 1091, 1090, 1071, 1083, 1082, 1091, 1069, 1091, 1071, 1083, 1091, 1069, 1069, 1092, 1083, 1093, 1092, 1069, 1092, 1094, 1083, 1083, 1094, 1085, 1069, 1095, 1093, 1069, 1096, 1095, 1070, 1096, 1069, 1093, 1097, 1092, 1092, 1098, 1094, 1099, 1098, 1092, 1099, 1092, 1100, 1100, 1092, 1101, 1100, 1102, 1099, 1092, 1097, 1103, 1092, 1103, 1101, 1094, 1104, 1085, 1098, 1105, 1094, 1094, 1105, 1104, 1098, 1106, 1105, 1105, 1106, 1104, 1085, 1104, 1107, 1104, 1106, 1107, 1108, 1106, 1098, 1108, 1107, 1106, 1085, 1107, 1108, 1099, 1108, 1098, 1084, 1085, 1108, 1084, 1108, 1099, 1099, 1109, 1084, 1099, 1110, 1109, 1084, 1109, 525, 1099, 1102, 1110, 525, 1111, 1084, 1084, 1111, 1112, 1084, 1112, 535, 535, 1112, 538, 1112, 1113, 538, 1111, 1114, 1112, 1112, 1114, 1113, 538, 1113, 1115, 538, 1115, 539, 525, 539, 1111, 1116, 1113, 1114, 1115, 1113, 1116, 539, 1115, 1116, 539, 1116, 1111, 1111, 1116, 1114, 1109, 1117, 525, 525, 1117, 527, 1117, 1118, 527, 527, 1118, 1119, 527, 1119, 528, 1118, 1120, 1119, 528, 1119, 1120, 1117, 1121, 1118, 1121, 1120, 1118, 528, 1120, 1122, 1122, 1120, 1121, 1122, 1121, 1117, 1109, 1122, 1117, 515, 528, 1122, 515, 1122, 1109, 515, 1109, 502, 502, 1109, 1123, 502, 1124, 515, 515, 1124, 517, 1109, 1125, 1123, 1109, 1110, 1125, 502, 504, 1124, 1123, 1126, 502, 502, 1126, 508, 1124, 1127, 517, 504, 1128, 1124, 1124, 1128, 1127, 517, 1127, 1129, 517, 1129, 518, 1130, 1127, 1128, 1129, 1127, 1130, 504, 1130, 1128, 518, 1129, 1130, 518, 1130, 504, 499, 518, 504, 1110, 1131, 1125, 1110, 1132, 1131, 1102, 1132, 1110, 1125, 1131, 1133, 1131, 1132, 1133, 1102, 1134, 1132, 1133, 1132, 1134, 1125, 1133, 1135, 1135, 1133, 1134, 1135, 1134, 1102, 1123, 1125, 1135, 1100, 1135, 1102, 1123, 1135, 1100, 1100, 506, 1123, 506, 1136, 1123, 1123, 1136, 1126, 1136, 1137, 1126, 1126, 1137, 1138, 1126, 1138, 508, 508, 1138, 1139, 1137, 1139, 1138, 508, 1139, 507, 506, 507, 1136, 1140, 1139, 1137, 507, 1139, 1140, 507, 1140, 1136, 1136, 1140, 1137, 1141, 506, 1100, 1141, 1142, 506, 1141, 1143, 1142, 1141, 1144, 1143, 1100, 1145, 1141, 1141, 1145, 1144, 506, 1142, 1146, 1142, 1147, 1146, 505, 506, 1146, 1147, 505, 1146, 1100, 1148, 1145, 1101, 1148, 1100, 1149, 1143, 1101, 1150, 1143, 1149, 1101, 1151, 1149, 1150, 1152, 1143, 1150, 1153, 1152, 1150, 1154, 1153, 1149, 1155, 1150, 1150, 1155, 1154, 1148, 1156, 1145, 1145, 1156, 1157, 1145, 1157, 1144, 1148, 1158, 1156, 1158, 1157, 1156, 1101, 1159, 1148, 1159, 1158, 1148, 1143, 1159, 1101, 1143, 1144, 1159, 1101, 1103, 1151, 1160, 1157, 1158, 1144, 1157, 1160, 1144, 1160, 1159, 1159, 1160, 1158, 1103, 1161, 1151, 1103, 1162, 1161, 1097, 1162, 1103, 1162, 1163, 1161, 1097, 1163, 1162, 1151, 1161, 1164, 1161, 1163, 1164, 1165, 1163, 1097, 1165, 1164, 1163, 1151, 1164, 1165, 1093, 1165, 1097, 1149, 1151, 1165, 1149, 1165, 1093, 1093, 1166, 1149, 1149, 1166, 1167, 1093, 1168, 1166, 1093, 1095, 1168, 1167, 1169, 1149, 1149, 1169, 1155, 1095, 1170, 1168, 1095, 1171, 1170, 1096, 1171, 1095, 1172, 1170, 1171, 1096, 1172, 1171, 1168, 1170, 1173, 1173, 1170, 1172, 1174, 1172, 1096, 1174, 1173, 1172, 1168, 1173, 1174, 1166, 1168, 1174, 1070, 1174, 1096, 1166, 1174, 1070, 1175, 1166, 1070, 1176, 1166, 1175, 1070, 1177, 1175, 1070, 1178, 1177, 1061, 1178, 1070, 1061, 1179, 1178, 1062, 1179, 1061, 1062, 1180, 1175, 1175, 1180, 1181, 1062, 1182, 1180, 1176, 1183, 1166, 1166, 1183, 1184, 1166, 1184, 1167, 1178, 1185, 1177, 1179, 1186, 1178, 1178, 1186, 1185, 1179, 1187, 1186, 1186, 1187, 1185, 1062, 1188, 1179, 1188, 1187, 1179, 1185, 1187, 1189, 1177, 1185, 1189, 1188, 1189, 1187, 1177, 1189, 1188, 1175, 1177, 1188, 1175, 1188, 1062, 1175, 1190, 1176, 1175, 1191, 1190, 1181, 1191, 1175, 1176, 1190, 1192, 1176, 1192, 1193, 1176, 1193, 1194, 1194, 1193, 1195, 1194, 1196, 1176, 1176, 1196, 1183, 1197, 1193, 1181, 1198, 1193, 1197, 1181, 1199, 1197, 1191, 1200, 1190, 1190, 1200, 1201, 1190, 1201, 1192, 1191, 1202, 1200, 1202, 1201, 1200, 1192, 1201, 1203, 1203, 1201, 1202, 1204, 1202, 1191, 1204, 1203, 1202, 1192, 1203, 1204, 1193, 1192, 1204, 1181, 1204, 1191, 1193, 1204, 1181, 1181, 1205, 1199, 1180, 1205, 1181, 1198, 1206, 1193, 1193, 1206, 1207, 1193, 1207, 1195, 1205, 1208, 1199, 1180, 1209, 1205, 1210, 1209, 1180, 1205, 1211, 1208, 1209, 1211, 1205, 1211, 1212, 1208, 1209, 1212, 1211, 1199, 1208, 1213, 1208, 1212, 1213, 1214, 1212, 1209, 1214, 1213, 1212, 1199, 1213, 1214, 1210, 1214, 1209, 1197, 1199, 1214, 1197, 1214, 1210, 1198, 1215, 1206, 1216, 1215, 1198, 1216, 1217, 1195, 1218, 1217, 1216, 1218, 1219, 1217, 1218, 1220, 1219, 1218, 1221, 1220, 1198, 1222, 1216, 1216, 1222, 1223, 1198, 1224, 1222, 1197, 1225, 1198, 1198, 1225, 1224, 1218, 1226, 1221, 1216, 1226, 1218, 1227, 1220, 1223, 1228, 1220, 1227, 1223, 1229, 1227, 1228, 1230, 1220, 1228, 1231, 1230, 1228, 1232, 1231, 1227, 1233, 1228, 1228, 1233, 1232, 1225, 1234, 1224, 1224, 1234, 1235, 1224, 1235, 1236, 1222, 1224, 1236, 1222, 1236, 1237, 1235, 1234, 1238, 1236, 1235, 1238, 1225, 1239, 1234, 1238, 1234, 1239, 1236, 1238, 1240, 1240, 1238, 1239, 1240, 1239, 1225, 1237, 1236, 1240, 1197, 1240, 1225, 1237, 1240, 1197, 1197, 969, 1237, 1210, 969, 1197, 1233, 1241, 1232, 1232, 1241, 1242, 1232, 1242, 1243, 1231, 1232, 1243, 1231, 1243, 1244, 1242, 1241, 1245, 1243, 1242, 1245, 1233, 1246, 1241, 1245, 1241, 1246, 1243, 1245, 1247, 1247, 1245, 1246, 1247, 1246, 1233, 1244, 1243, 1247, 1227, 1247, 1233, 1244, 1247, 1227, 1248, 1231, 1244, 1249, 1231, 1248, 1249, 1250, 1231, 1244, 1251, 1248, 1249, 1252, 1250, 1249, 1253, 1252, 1227, 1254, 1244, 1255, 1254, 1227, 1254, 1256, 1244, 1244, 1256, 1251, 1231, 1250, 1257, 1250, 1258, 1257, 1230, 1231, 1257, 1258, 1230, 1257, 1248, 1259, 1249, 1249, 1259, 1253, 1227, 1260, 1255, 1227, 1229, 1260, 1256, 1261, 1251, 1248, 1251, 1262, 1248, 1262, 1263, 1251, 1261, 1264, 1251, 1264, 1262, 1261, 1265, 1264, 1262, 1264, 1265, 1256, 1266, 1261, 1266, 1265, 1261, 1262, 1265, 1267, 1267, 1265, 1266, 1267, 1266, 1256, 1263, 1262, 1267, 1254, 1267, 1256, 1263, 1267, 1254, 1263, 1268, 1248, 1248, 1268, 1269, 1263, 1270, 1268, 1263, 1254, 1271, 1271, 1272, 1263, 1263, 1272, 1270, 1271, 1254, 967, 1269, 1273, 1248, 1248, 1273, 1259, 1254, 1274, 967, 1254, 1275, 1274, 1255, 1275, 1254, 1273, 1276, 1259, 1259, 1276, 1277, 1259, 1277, 1253, 1273, 1278, 1276, 1278, 1277, 1276, 1253, 1277, 1279, 1279, 1277, 1278, 1280, 1278, 1273, 1280, 1279, 1278, 1253, 1279, 1280, 1269, 1280, 1273, 1252, 1253, 1280, 1252, 1280, 1269, 1281, 1252, 1269, 1269, 1282, 1281, 1283, 1252, 1281, 1283, 1284, 1252, 1283, 1285, 1284, 1283, 1286, 1285, 1269, 1287, 1282, 1268, 1287, 1269, 1281, 1288, 1283, 1283, 1288, 1286, 1252, 1284, 1289, 1284, 1290, 1289, 1250, 1252, 1289, 1290, 1250, 1289, 1291, 1250, 1290, 1291, 1290, 1292, 1291, 1258, 1250, 1291, 1292, 1258, 1281, 1282, 1293, 1281, 1293, 1294, 1294, 1295, 1281, 1281, 1295, 1296, 1294, 1297, 1295, 1296, 1298, 1281, 1281, 1298, 1288, 1282, 1299, 1293, 1282, 1300, 1299, 1287, 1300, 1282, 1293, 1299, 1301, 1300, 1301, 1299, 1287, 1302, 1300, 1302, 1301, 1300, 1293, 1301, 1303, 1303, 1301, 1302, 1303, 1302, 1287, 1294, 1293, 1303, 1268, 1303, 1287, 1294, 1303, 1268, 1294, 1268, 1304, 1304, 1268, 1305, 1304, 1306, 1294, 1294, 1306, 1297, 1268, 1307, 1305, 1268, 1270, 1307, 1270, 1308, 1307, 1270, 1309, 1308, 1272, 1309, 1270, 1307, 1308, 1310, 1308, 1309, 1310, 1272, 1311, 1309, 1310, 1309, 1311, 1307, 1310, 1312, 1312, 1310, 1311, 1312, 1311, 1272, 1305, 1307, 1312, 1271, 1312, 1272, 1305, 1312, 1271, 1271, 1313, 1305, 1313, 1314, 1305, 959, 1313, 1271, 1305, 1314, 1315, 1305, 1315, 1304, 1271, 1316, 959, 1271, 1317, 1316, 967, 1317, 1271, 959, 1318, 1313, 959, 1316, 1319, 959, 1319, 958, 959, 962, 1318, 958, 1320, 967, 958, 1319, 1320, 967, 1320, 1317, 1316, 1321, 1319, 1319, 1322, 1320, 1319, 1321, 1322, 1320, 1322, 1323, 1320, 1323, 1317, 1322, 1321, 1323, 1317, 1324, 1316, 1316, 1324, 1321, 1323, 1321, 1324, 1317, 1323, 1324, 962, 1325, 1318, 962, 1326, 1325, 963, 1326, 962, 1327, 1325, 1326, 963, 1327, 1326, 1318, 1325, 1328, 1328, 1325, 1327, 1329, 1327, 963, 1329, 1328, 1327, 1318, 1328, 1329, 938, 1329, 963, 1313, 1318, 1329, 1313, 1329, 938, 1330, 1313, 938, 1331, 1313, 1330, 938, 1332, 1330, 938, 946, 1332, 1331, 1333, 1313, 1313, 1333, 1314, 946, 1334, 1332, 946, 1335, 1334, 947, 1335, 946, 1335, 1336, 1334, 947, 1336, 1335, 1332, 1334, 1337, 1334, 1336, 1337, 1338, 1336, 947, 1338, 1337, 1336, 1332, 1337, 1338, 1330, 1332, 1338, 935, 1338, 947, 1330, 1338, 935, 935, 1339, 1330, 1330, 1339, 1340, 935, 1341, 1339, 935, 1342, 1341, 934, 1342, 935, 1340, 1343, 1330, 1330, 1343, 1344, 1330, 1344, 1331, 1339, 1341, 1345, 1339, 1345, 1346, 934, 1347, 1346, 893, 1347, 934, 1348, 1339, 1346, 1349, 1339, 1348, 1346, 1350, 1348, 1339, 1351, 1340, 1349, 1352, 1339, 1339, 1352, 1351, 1341, 1353, 1345, 1341, 1354, 1353, 1342, 1354, 1341, 1345, 1353, 1355, 1353, 1354, 1355, 1342, 1356, 1354, 1355, 1354, 1356, 1345, 1355, 1357, 1357, 1355, 1356, 1357, 1356, 1342, 1346, 1345, 1357, 934, 1357, 1342, 1346, 1357, 934, 1348, 1358, 1349, 1349, 1359, 1352, 1360, 1359, 1349, 1349, 1361, 1360, 1360, 1361, 1362, 1349, 1363, 1361, 1349, 1358, 1363, 1359, 1364, 1352, 1352, 1364, 1365, 1352, 1365, 1351, 1365, 1364, 1366, 1351, 1365, 1366, 1359, 1367, 1364, 1366, 1364, 1367, 1351, 1366, 1368, 1368, 1366, 1367, 1368, 1367, 1359, 1360, 1368, 1359, 1340, 1351, 1368, 1340, 1368, 1360, 1360, 1369, 1340, 1370, 1369, 1360, 1369, 1371, 1340, 1340, 1371, 1343, 1360, 1372, 1370, 1360, 1373, 1372, 1362, 1373, 1360, 1371, 1374, 1343, 1343, 1374, 1375, 1343, 1375, 1344, 1374, 1376, 1375, 1344, 1375, 1376, 1371, 1377, 1374, 1377, 1376, 1374, 1344, 1376, 1378, 1378, 1376, 1377, 1378, 1377, 1371, 1369, 1378, 1371, 1331, 1344, 1378, 1331, 1378, 1369, 1331, 1369, 1304, 1304, 1369, 1379, 1304, 1380, 1331, 1331, 1380, 1333, 1369, 1381, 1379, 1369, 1382, 1381, 1370, 1382, 1369, 1379, 1383, 1304, 1304, 1315, 1380, 1304, 1383, 1306, 1380, 1384, 1333, 1315, 1385, 1380, 1380, 1385, 1384, 1315, 1386, 1385, 1386, 1384, 1385, 1314, 1386, 1315, 1333, 1384, 1387, 1387, 1384, 1386, 1333, 1387, 1314, 1314, 1387, 1386, 1383, 1388, 1306, 1306, 1388, 1389, 1306, 1389, 1297, 1383, 1390, 1388, 1390, 1389, 1388, 1297, 1389, 1391, 1391, 1389, 1390, 1392, 1390, 1383, 1392, 1391, 1390, 1297, 1391, 1392, 1379, 1392, 1383, 1295, 1297, 1392, 1295, 1392, 1379, 1393, 1295, 1379, 1394, 1295, 1393, 1379, 1395, 1393, 1379, 1381, 1395, 1394, 1396, 1295, 1295, 1396, 1397, 1295, 1397, 1296, 1381, 1398, 1395, 1381, 1399, 1398, 1382, 1399, 1381, 1399, 1400, 1398, 1382, 1400, 1399, 1395, 1398, 1401, 1398, 1400, 1401, 1402, 1400, 1382, 1402, 1401, 1400, 1395, 1401, 1402, 1393, 1395, 1402, 1370, 1402, 1382, 1393, 1402, 1370, 1370, 1403, 1393, 1393, 1403, 1404, 1370, 1405, 1403, 1370, 1372, 1405, 1404, 1406, 1393, 1393, 1406, 1407, 1393, 1407, 1394, 1372, 1408, 1405, 1372, 1409, 1408, 1373, 1409, 1372, 1410, 1408, 1409, 1373, 1410, 1409, 1405, 1408, 1411, 1411, 1408, 1410, 1412, 1410, 1373, 1412, 1411, 1410, 1405, 1411, 1412, 1403, 1405, 1412, 1362, 1412, 1373, 1403, 1412, 1362, 1413, 1403, 1362, 1414, 1403, 1413, 1362, 1415, 1413, 1362, 1416, 1415, 1361, 1416, 1362, 1414, 1417, 1403, 1403, 1417, 1418, 1403, 1418, 1404, 1413, 1419, 1414, 1413, 1415, 1420, 1413, 1420, 1421, 1421, 1361, 1422, 1422, 1361, 1423, 1422, 1424, 1421, 1421, 1425, 1413, 1413, 1425, 1426, 1421, 1427, 1425, 1421, 1424, 1427, 1413, 1428, 1419, 1426, 1428, 1413, 1421, 1420, 1429, 1421, 1429, 1361, 1415, 1430, 1420, 1420, 1430, 1431, 1420, 1431, 1429, 1415, 1432, 1430, 1432, 1431, 1430, 1416, 1432, 1415, 1361, 1429, 1416, 1433, 1431, 1432, 1429, 1431, 1433, 1429, 1433, 1416, 1416, 1433, 1432, 1424, 1434, 1427, 1427, 1434, 1435, 1427, 1435, 1436, 1425, 1427, 1436, 1425, 1436, 1437, 1435, 1434, 1438, 1436, 1435, 1438, 1424, 1439, 1434, 1438, 1434, 1439, 1436, 1438, 1440, 1440, 1438, 1439, 1440, 1439, 1424, 1437, 1436, 1440, 1422, 1440, 1424, 1437, 1440, 1422, 1422, 1441, 1437, 1442, 1441, 1422, 1442, 1443, 1441, 1442, 1444, 1443, 1442, 1445, 1444, 1422, 1446, 1442, 1442, 1446, 1445, 1447, 1425, 1437, 1448, 1425, 1447, 1437, 1449, 1447, 1441, 1450, 1437, 1437, 1450, 1449, 1422, 1451, 1446, 1423, 1451, 1422, 1446, 1452, 1445, 1451, 1453, 1446, 1446, 1453, 1452, 1451, 1454, 1453, 1454, 1452, 1453, 1445, 1452, 1455, 1455, 1452, 1454, 1456, 1454, 1451, 1456, 1455, 1454, 1445, 1455, 1456, 1423, 1456, 1451, 1444, 1445, 1456, 1444, 1456, 1423, 1447, 1449, 1457, 1450, 1458, 1449, 1449, 1459, 1457, 1449, 1458, 1459, 1458, 1460, 1459, 1457, 1459, 1460, 1450, 1461, 1458, 1461, 1460, 1458, 1462, 1461, 1450, 1462, 1460, 1461, 1457, 1460, 1462, 1441, 1462, 1450, 1463, 1457, 1462, 1447, 1457, 1463, 1463, 1462, 1441, 1463, 1441, 1464, 1463, 1465, 1447, 1463, 1464, 1465, 1447, 1465, 1466, 1464, 1441, 1467, 1468, 1464, 1467, 1441, 1443, 1467, 1443, 1468, 1467, 1466, 1469, 1447, 1447, 1469, 1470, 1447, 1470, 1448, 1465, 1464, 1471, 1464, 1472, 1471, 1473, 1464, 1468, 1473, 1472, 1464, 1473, 1468, 1474, 1473, 1474, 1472, 1475, 1465, 1471, 1472, 1475, 1471, 1476, 1475, 1472, 304, 1465, 1475, 1476, 1472, 1477, 304, 1478, 1465, 304, 313, 1478, 1477, 1472, 1479, 1472, 1474, 1479, 1480, 1477, 1479, 1474, 1480, 1479, 1481, 1477, 1480, 1481, 1480, 1482, 1465, 1478, 1483, 1465, 1483, 1466, 313, 1484, 1478, 1478, 1485, 1483, 1478, 1484, 1485, 1483, 1485, 1486, 1485, 1484, 1486, 313, 1487, 1484, 1486, 1484, 1487, 1483, 1486, 1488, 1488, 1486, 1487, 1488, 1487, 313, 1466, 1483, 1488, 311, 1488, 313, 1466, 1488, 311, 311, 1489, 1466, 1490, 1489, 311, 1489, 1491, 1466, 1466, 1491, 1469, 311, 1492, 1490, 311, 1493, 1492, 312, 1493, 311, 1491, 1494, 1469, 1469, 1494, 1495, 1469, 1495, 1470, 1494, 1496, 1495, 1470, 1495, 1496, 1491, 1497, 1494, 1497, 1496, 1494, 1470, 1496, 1498, 1498, 1496, 1497, 1498, 1497, 1491, 1489, 1498, 1491, 1448, 1470, 1498, 1448, 1498, 1489, 1448, 1489, 1499, 1499, 1489, 1500, 1499, 1501, 1448, 1448, 1501, 1502, 1448, 1502, 1425, 1425, 1502, 1503, 1425, 1503, 1426, 1499, 1504, 1426, 1505, 1504, 1499, 1504, 1506, 1426, 1489, 1507, 1500, 1489, 1508, 1507, 1490, 1508, 1489, 1501, 1509, 1502, 1502, 1510, 1503, 1502, 1509, 1510, 1503, 1510, 1511, 1510, 1509, 1511, 1426, 1503, 1512, 1503, 1511, 1512, 1426, 1512, 1499, 1499, 1512, 1501, 1426, 1506, 1428, 1511, 1509, 1513, 1512, 1511, 1513, 1512, 1513, 1501, 1501, 1513, 1509, 1506, 1514, 1428, 1428, 1514, 1515, 1428, 1515, 1419, 1514, 1516, 1515, 1419, 1515, 1516, 1506, 1517, 1514, 1517, 1516, 1514, 1419, 1516, 1518, 1518, 1516, 1517, 1518, 1517, 1506, 1414, 1419, 1518, 1504, 1518, 1506, 1414, 1518, 1504, 1414, 1504, 1519, 1519, 1504, 1520, 1519, 1521, 1414, 1414, 1521, 1417, 1504, 1522, 1520, 1504, 1523, 1522, 1505, 1523, 1504, 1521, 1524, 1417, 1417, 1524, 1525, 1417, 1525, 1418, 1525, 1524, 1526, 1418, 1525, 1526, 1521, 1527, 1524, 1526, 1524, 1527, 1418, 1526, 1528, 1528, 1526, 1527, 1528, 1527, 1521, 1519, 1528, 1521, 1404, 1418, 1528, 1404, 1528, 1519, 1519, 1529, 1404, 1530, 1529, 1519, 1529, 1531, 1404, 1404, 1531, 1406, 1519, 1532, 1530, 1519, 1533, 1532, 1520, 1533, 1519, 1531, 1534, 1406, 1406, 1534, 1535, 1406, 1535, 1407, 1534, 1536, 1535, 1407, 1535, 1536, 1531, 1537, 1534, 1537, 1536, 1534, 1407, 1536, 1538, 1538, 1536, 1537, 1538, 1537, 1531, 1529, 1538, 1531, 1394, 1407, 1538, 1394, 1538, 1529, 1394, 1529, 1539, 1539, 1529, 1540, 1539, 1541, 1394, 1394, 1541, 1396, 1529, 1542, 1540, 1529, 1543, 1542, 1530, 1543, 1529, 1541, 1544, 1396, 1396, 1544, 1545, 1396, 1545, 1397, 1545, 1544, 1546, 1397, 1545, 1546, 1541, 1547, 1544, 1546, 1544, 1547, 1397, 1546, 1548, 1548, 1546, 1547, 1548, 1547, 1541, 1539, 1548, 1541, 1296, 1397, 1548, 1296, 1548, 1539, 1539, 1285, 1296, 1285, 1549, 1296, 1296, 1549, 1298, 1549, 1550, 1298, 1298, 1550, 1551, 1298, 1551, 1288, 1288, 1551, 1552, 1550, 1552, 1551, 1288, 1552, 1286, 1285, 1286, 1549, 1553, 1552, 1550, 1286, 1552, 1553, 1286, 1553, 1549, 1549, 1553, 1550, 1554, 1285, 1539, 1554, 1555, 1285, 1554, 1556, 1555, 1554, 1557, 1556, 1539, 1558, 1554, 1554, 1558, 1557, 1285, 1555, 1559, 1555, 1560, 1559, 1284, 1285, 1559, 1560, 1284, 1559, 1539, 1561, 1558, 1540, 1561, 1539, 1562, 1556, 1540, 1563, 1556, 1562, 1540, 1564, 1562, 1563, 1565, 1556, 1563, 1566, 1565, 1563, 1567, 1566, 1568, 1284, 1560, 1568, 1560, 1569, 1568, 1290, 1284, 1568, 1569, 1290, 1562, 1570, 1563, 1563, 1570, 1567, 1290, 1569, 1571, 1569, 1572, 1571, 1292, 1290, 1571, 1572, 1292, 1571, 1556, 1573, 1540, 1540, 1573, 1561, 1556, 1557, 1573, 1573, 1574, 1561, 1557, 1575, 1573, 1573, 1575, 1574, 1557, 1576, 1575, 1575, 1576, 1574, 1558, 1576, 1557, 1561, 1577, 1558, 1561, 1574, 1577, 1574, 1576, 1577, 1558, 1577, 1576, 1578, 1572, 1569, 1578, 1569, 1579, 1578, 1580, 1572, 1578, 1579, 1580, 1579, 1569, 1581, 1582, 1579, 1581, 1569, 1560, 1581, 1560, 1582, 1581, 1583, 1582, 1560, 1583, 1584, 1582, 1583, 1560, 1555, 1583, 1555, 1584, 1584, 1555, 1585, 1555, 1556, 1585, 1556, 1565, 1585, 1565, 1584, 1585, 1572, 1580, 1586, 1587, 1572, 1586, 1580, 1588, 1586, 1588, 1587, 1586, 1589, 1572, 1587, 1589, 1587, 1590, 1589, 1292, 1572, 1589, 1590, 1292, 1292, 1590, 1591, 1590, 1592, 1591, 1258, 1292, 1591, 1592, 1258, 1591, 1593, 1258, 1592, 1593, 1592, 1594, 1593, 1230, 1258, 1593, 1594, 1230, 1230, 1594, 1595, 1220, 1230, 1595, 1219, 1220, 1595, 1594, 1219, 1595, 1596, 1587, 1588, 1596, 1597, 1587, 1596, 1588, 1598, 1596, 1598, 1597, 1590, 1587, 1599, 1587, 1597, 1599, 1600, 1590, 1599, 1597, 1600, 1599, 1601, 1592, 1590, 1601, 1590, 1600, 1601, 1602, 1592, 1601, 1600, 1602, 1594, 1592, 1603, 1592, 1602, 1603, 1604, 1594, 1603, 1602, 1604, 1603, 1605, 1219, 1594, 1605, 1594, 1604, 1605, 1606, 1219, 1605, 1604, 1606, 1219, 1606, 1607, 1606, 1608, 1607, 1217, 1219, 1607, 1608, 1217, 1607, 1609, 1600, 1597, 1609, 1610, 1600, 1609, 1597, 1611, 1609, 1611, 1610, 1602, 1600, 1612, 1600, 1610, 1612, 1613, 1602, 1612, 1610, 1613, 1612, 1614, 1604, 1602, 1614, 1602, 1613, 1614, 1615, 1604, 1614, 1613, 1615, 1606, 1604, 1616, 1604, 1615, 1616, 1617, 1606, 1616, 1615, 1617, 1616, 1618, 1608, 1606, 1618, 1606, 1617, 1618, 1619, 1608, 1618, 1617, 1619, 1610, 1611, 1620, 1621, 1610, 1620, 1611, 1622, 1620, 1622, 1621, 1620, 1623, 1613, 1610, 1623, 1610, 1621, 1623, 1624, 1613, 1623, 1621, 1624, 1615, 1613, 1625, 1613, 1624, 1625, 1626, 1615, 1625, 1624, 1626, 1625, 1627, 1617, 1615, 1627, 1615, 1626, 1627, 1628, 1617, 1627, 1626, 1628, 1619, 1617, 1629, 1617, 1628, 1629, 1630, 1619, 1629, 1628, 1630, 1629, 1631, 1621, 1622, 1631, 1632, 1621, 1631, 1622, 1633, 1631, 1633, 1632, 1624, 1621, 1634, 1621, 1632, 1634, 1635, 1624, 1634, 1632, 1635, 1634, 1636, 1626, 1624, 1636, 1624, 1635, 1636, 1637, 1626, 1636, 1635, 1637, 1628, 1626, 1638, 1626, 1637, 1638, 1639, 1628, 1638, 1637, 1639, 1638, 1640, 1630, 1628, 1640, 1628, 1639, 1640, 1641, 1630, 1640, 1639, 1641, 1632, 1633, 1642, 1643, 1632, 1642, 1633, 1644, 1642, 1644, 1643, 1642, 1645, 1635, 1632, 1645, 1632, 1643, 1645, 1646, 1635, 1645, 1643, 1646, 1637, 1635, 1647, 1635, 1646, 1647, 1648, 1637, 1647, 1646, 1648, 1647, 1649, 1639, 1637, 1649, 1637, 1648, 1649, 1650, 1639, 1649, 1648, 1650, 1641, 1639, 1651, 1639, 1650, 1651, 1652, 1641, 1651, 1650, 1652, 1651, 1653, 1643, 1644, 1653, 1654, 1643, 1653, 1644, 1655, 1653, 1655, 1654, 1646, 1643, 1656, 1643, 1654, 1656, 1657, 1646, 1656, 1654, 1657, 1656, 1658, 1648, 1646, 1658, 1646, 1657, 1658, 1659, 1648, 1658, 1657, 1659, 1650, 1648, 1660, 1648, 1659, 1660, 1661, 1650, 1660, 1659, 1661, 1660, 1662, 1652, 1650, 1662, 1650, 1661, 1662, 1663, 1652, 1662, 1661, 1663, 1654, 1655, 1664, 1665, 1654, 1664, 1655, 1666, 1664, 1666, 1665, 1664, 1667, 1657, 1654, 1667, 1654, 1665, 1667, 1668, 1657, 1667, 1665, 1668, 1659, 1657, 1669, 1657, 1668, 1669, 1670, 1659, 1669, 1668, 1670, 1669, 1671, 1661, 1659, 1671, 1659, 1670, 1671, 1672, 1661, 1671, 1670, 1672, 1663, 1661, 1673, 1661, 1672, 1673, 1674, 1663, 1673, 1672, 1674, 1673, 1675, 1665, 1666, 1675, 1676, 1665, 1675, 1666, 1677, 1675, 1677, 1676, 1668, 1665, 1678, 1665, 1676, 1678, 1679, 1668, 1678, 1676, 1679, 1678, 1680, 1670, 1668, 1680, 1668, 1679, 1680, 1681, 1670, 1680, 1679, 1681, 1672, 1670, 1682, 1670, 1681, 1682, 1683, 1672, 1682, 1681, 1683, 1682, 1684, 1674, 1672, 1684, 1672, 1683, 1684, 1685, 1674, 1684, 1683, 1685, 1676, 1677, 1686, 1687, 1676, 1686, 1677, 1688, 1686, 1688, 1687, 1686, 1689, 1679, 1676, 1689, 1676, 1687, 1689, 1690, 1679, 1689, 1687, 1690, 1681, 1679, 1691, 1679, 1690, 1691, 1692, 1681, 1691, 1690, 1692, 1691, 1693, 1683, 1681, 1693, 1681, 1692, 1693, 1694, 1683, 1693, 1692, 1694, 1685, 1683, 1695, 1683, 1694, 1695, 1696, 1685, 1695, 1694, 1696, 1695, 1697, 1687, 1688, 1697, 1698, 1687, 1697, 1688, 1699, 1697, 1699, 1698, 1690, 1687, 1700, 1687, 1698, 1700, 1701, 1690, 1700, 1698, 1701, 1700, 1702, 1692, 1690, 1702, 1690, 1701, 1702, 1703, 1692, 1702, 1701, 1703, 1694, 1692, 1704, 1692, 1703, 1704, 1705, 1694, 1704, 1703, 1705, 1704, 1706, 1696, 1694, 1706, 1694, 1705, 1706, 1707, 1696, 1706, 1705, 1707, 1698, 1699, 1708, 1709, 1698, 1708, 1699, 1710, 1708, 1710, 1709, 1708, 1711, 1701, 1698, 1711, 1698, 1709, 1711, 1712, 1701, 1711, 1709, 1712, 1703, 1701, 1713, 1701, 1712, 1713, 1714, 1703, 1713, 1712, 1714, 1713, 1715, 1705, 1703, 1715, 1703, 1714, 1715, 1716, 1705, 1715, 1714, 1716, 1707, 1705, 1717, 1705, 1716, 1717, 1718, 1707, 1717, 1716, 1718, 1717, 1719, 1709, 1710, 1719, 1720, 1709, 1719, 1710, 1721, 1719, 1721, 1720, 1712, 1709, 1722, 1709, 1720, 1722, 1723, 1712, 1722, 1720, 1723, 1722, 1724, 1714, 1712, 1724, 1712, 1723, 1724, 1725, 1714, 1724, 1723, 1725, 1716, 1714, 1726, 1714, 1725, 1726, 1727, 1716, 1726, 1725, 1727, 1726, 1728, 1718, 1716, 1728, 1716, 1727, 1728, 1729, 1718, 1728, 1727, 1729, 1720, 1721, 1730, 1731, 1720, 1730, 1721, 1732, 1730, 1732, 1731, 1730, 1733, 1723, 1720, 1733, 1720, 1731, 1733, 1734, 1723, 1733, 1731, 1734, 1725, 1723, 1735, 1723, 1734, 1735, 1736, 1725, 1735, 1734, 1736, 1735, 1737, 1727, 1725, 1737, 1725, 1736, 1737, 1738, 1727, 1737, 1736, 1738, 1729, 1727, 1739, 1727, 1738, 1739, 1740, 1729, 1739, 1738, 1740, 1739, 1741, 1731, 1732, 1741, 1742, 1731, 1741, 1732, 1743, 1741, 1743, 1742, 1734, 1731, 1744, 1731, 1742, 1744, 1745, 1734, 1744, 1742, 1745, 1744, 1746, 1736, 1734, 1746, 1734, 1745, 1746, 1747, 1736, 1746, 1745, 1747, 1738, 1736, 1748, 1736, 1747, 1748, 1749, 1738, 1748, 1747, 1749, 1748, 1750, 1740, 1738, 1750, 1738, 1749, 1750, 1751, 1740, 1750, 1749, 1751, 1742, 1743, 1752, 1753, 1742, 1752, 1743, 1754, 1752, 1754, 1753, 1752, 1755, 1745, 1742, 1755, 1742, 1753, 1755, 1756, 1745, 1755, 1753, 1756, 1747, 1745, 1757, 1745, 1756, 1757, 1758, 1747, 1757, 1756, 1758, 1757, 1759, 1749, 1747, 1759, 1747, 1758, 1759, 1760, 1749, 1759, 1758, 1760, 1751, 1749, 1761, 1749, 1760, 1761, 1762, 1751, 1761, 1760, 1762, 1761, 1763, 1753, 1754, 1763, 1764, 1753, 1763, 1754, 1765, 1763, 1765, 1764, 1756, 1753, 1766, 1753, 1764, 1766, 1767, 1756, 1766, 1764, 1767, 1766, 1768, 1758, 1756, 1768, 1756, 1767, 1768, 1769, 1758, 1768, 1767, 1769, 1760, 1758, 1770, 1758, 1769, 1770, 1771, 1760, 1770, 1769, 1771, 1770, 1772, 1762, 1760, 1772, 1760, 1771, 1772, 1773, 1762, 1772, 1771, 1773, 1764, 1765, 1774, 1775, 1764, 1774, 1765, 1776, 1774, 1776, 1775, 1774, 1777, 1767, 1764, 1777, 1764, 1775, 1777, 1778, 1767, 1777, 1775, 1778, 1769, 1767, 1779, 1767, 1778, 1779, 1780, 1769, 1779, 1778, 1780, 1779, 1781, 1771, 1769, 1781, 1769, 1780, 1781, 1782, 1771, 1781, 1780, 1782, 1773, 1771, 1783, 1771, 1782, 1783, 1784, 1773, 1783, 1782, 1784, 1783, 1785, 1775, 1776, 1785, 1786, 1775, 1785, 1776, 1787, 1785, 1787, 1786, 1778, 1775, 1788, 1775, 1786, 1788, 1789, 1778, 1788, 1786, 1789, 1788, 1790, 1780, 1778, 1790, 1778, 1789, 1790, 1791, 1780, 1790, 1789, 1791, 1782, 1780, 1792, 1780, 1791, 1792, 1793, 1782, 1792, 1791, 1793, 1792, 1794, 1784, 1782, 1794, 1782, 1793, 1794, 1795, 1784, 1794, 1793, 1795, 1786, 1787, 1796, 1797, 1786, 1796, 1787, 1798, 1796, 1798, 1797, 1796, 1799, 1789, 1786, 1799, 1786, 1797, 1799, 1800, 1789, 1799, 1797, 1800, 1791, 1789, 1801, 1789, 1800, 1801, 1802, 1791, 1801, 1800, 1802, 1801, 1803, 1793, 1791, 1803, 1791, 1802, 1803, 1804, 1793, 1803, 1802, 1804, 1795, 1793, 1805, 1793, 1804, 1805, 1806, 1795, 1805, 1804, 1806, 1805, 1807, 1797, 1798, 1807, 1808, 1797, 1807, 1798, 1809, 1807, 1809, 1808, 1800, 1797, 1810, 1797, 1808, 1810, 1811, 1800, 1810, 1808, 1811, 1810, 1812, 1802, 1800, 1812, 1800, 1811, 1812, 1813, 1802, 1812, 1811, 1813, 1804, 1802, 1814, 1802, 1813, 1814, 1815, 1804, 1814, 1813, 1815, 1814, 1816, 1806, 1804, 1816, 1804, 1815, 1816, 1817, 1806, 1816, 1815, 1817, 1808, 1809, 1818, 1819, 1808, 1818, 1809, 1820, 1818, 1820, 1819, 1818, 1821, 1811, 1808, 1821, 1808, 1819, 1821, 1822, 1811, 1821, 1819, 1822, 1813, 1811, 1823, 1811, 1822, 1823, 1824, 1813, 1823, 1822, 1824, 1823, 1825, 1815, 1813, 1825, 1813, 1824, 1825, 1826, 1815, 1825, 1824, 1826, 1817, 1815, 1827, 1815, 1826, 1827, 1828, 1817, 1827, 1826, 1828, 1827, 1829, 1819, 1820, 1829, 1830, 1819, 1829, 1820, 1831, 1829, 1831, 1830, 1822, 1819, 1832, 1819, 1830, 1832, 1833, 1822, 1832, 1830, 1833, 1832, 1834, 1824, 1822, 1834, 1822, 1833, 1834, 1835, 1824, 1834, 1833, 1835, 1826, 1824, 1836, 1824, 1835, 1836, 1837, 1826, 1836, 1835, 1837, 1836, 1838, 1828, 1826, 1838, 1826, 1837, 1838, 1839, 1828, 1838, 1837, 1839, 1830, 1831, 1840, 1841, 1830, 1840, 1831, 1842, 1840, 1842, 1841, 1840, 1843, 1833, 1830, 1843, 1830, 1841, 1843, 1844, 1833, 1843, 1841, 1844, 1835, 1833, 1845, 1833, 1844, 1845, 1846, 1835, 1845, 1844, 1846, 1845, 1847, 1837, 1835, 1847, 1835, 1846, 1847, 1848, 1837, 1847, 1846, 1848, 1839, 1837, 1849, 1837, 1848, 1849, 1850, 1839, 1849, 1848, 1850, 1849, 1851, 1841, 1842, 1851, 1852, 1841, 1851, 1842, 1853, 1851, 1853, 1852, 1844, 1841, 1854, 1841, 1852, 1854, 1855, 1844, 1854, 1852, 1855, 1854, 1856, 1846, 1844, 1856, 1844, 1855, 1856, 1857, 1846, 1856, 1855, 1857, 1848, 1846, 1858, 1846, 1857, 1858, 1859, 1848, 1858, 1857, 1859, 1858, 1860, 1850, 1848, 1860, 1848, 1859, 1860, 1861, 1850, 1860, 1859, 1861, 1852, 1853, 1862, 1863, 1852, 1862, 1853, 1864, 1862, 1864, 1863, 1862, 1865, 1855, 1852, 1865, 1852, 1863, 1865, 1866, 1855, 1865, 1863, 1866, 1857, 1855, 1867, 1855, 1866, 1867, 1868, 1857, 1867, 1866, 1868, 1867, 1869, 1859, 1857, 1869, 1857, 1868, 1869, 1870, 1859, 1869, 1868, 1870, 1861, 1859, 1871, 1859, 1870, 1871, 1872, 1861, 1871, 1870, 1872, 1871, 1873, 1863, 1864, 1873, 1874, 1863, 1873, 1864, 1875, 1873, 1875, 1874, 1866, 1863, 1876, 1863, 1874, 1876, 1877, 1866, 1876, 1874, 1877, 1876, 1878, 1868, 1866, 1878, 1866, 1877, 1878, 1879, 1868, 1878, 1877, 1879, 1870, 1868, 1880, 1868, 1879, 1880, 1881, 1870, 1880, 1879, 1881, 1880, 1882, 1872, 1870, 1882, 1870, 1881, 1882, 1883, 1872, 1882, 1881, 1883, 1874, 1875, 1884, 1885, 1874, 1884, 1875, 1886, 1884, 1886, 1885, 1884, 1887, 1877, 1874, 1887, 1874, 1885, 1887, 1888, 1877, 1887, 1885, 1888, 1879, 1877, 1889, 1877, 1888, 1889, 1890, 1879, 1889, 1888, 1890, 1889, 1891, 1881, 1879, 1891, 1879, 1890, 1891, 1892, 1881, 1891, 1890, 1892, 1883, 1881, 1893, 1881, 1892, 1893, 1894, 1883, 1893, 1892, 1894, 1893, 1895, 1885, 1886, 1895, 1896, 1885, 1895, 1886, 1897, 1895, 1897, 1896, 1888, 1885, 1898, 1885, 1896, 1898, 1899, 1888, 1898, 1896, 1899, 1898, 1900, 1890, 1888, 1900, 1888, 1899, 1900, 1901, 1890, 1900, 1899, 1901, 1892, 1890, 1902, 1890, 1901, 1902, 1903, 1892, 1902, 1901, 1903, 1902, 1904, 1894, 1892, 1904, 1892, 1903, 1904, 1905, 1894, 1904, 1903, 1905, 1896, 1897, 1906, 1907, 1896, 1906, 1897, 1908, 1906, 1908, 1907, 1906, 1909, 1899, 1896, 1909, 1896, 1907, 1909, 1910, 1899, 1909, 1907, 1910, 1901, 1899, 1911, 1899, 1910, 1911, 1912, 1901, 1911, 1910, 1912, 1911, 1913, 1903, 1901, 1913, 1901, 1912, 1913, 1914, 1903, 1913, 1912, 1914, 1905, 1903, 1915, 1903, 1914, 1915, 1916, 1905, 1915, 1914, 1916, 1915, 1917, 1907, 1908, 1917, 1918, 1907, 1917, 1908, 1919, 1917, 1919, 1918, 1910, 1907, 1920, 1907, 1918, 1920, 1921, 1910, 1920, 1918, 1921, 1920, 1922, 1912, 1910, 1922, 1910, 1921, 1922, 1923, 1912, 1922, 1921, 1923, 1914, 1912, 1924, 1912, 1923, 1924, 1925, 1914, 1924, 1923, 1925, 1924, 1926, 1916, 1914, 1926, 1914, 1925, 1926, 1927, 1916, 1926, 1925, 1927, 1918, 1919, 1928, 1929, 1918, 1928, 1919, 1930, 1928, 1930, 1929, 1928, 1931, 1921, 1918, 1931, 1918, 1929, 1931, 1932, 1921, 1931, 1929, 1932, 1923, 1921, 1933, 1921, 1932, 1933, 1934, 1923, 1933, 1932, 1934, 1933, 1935, 1925, 1923, 1935, 1923, 1934, 1935, 1936, 1925, 1935, 1934, 1936, 1927, 1925, 1937, 1925, 1936, 1937, 1938, 1927, 1937, 1936, 1938, 1937, 1939, 1929, 1930, 1939, 1940, 1929, 1939, 1930, 1941, 1939, 1941, 1940, 1932, 1929, 1942, 1929, 1940, 1942, 1943, 1932, 1942, 1940, 1943, 1942, 1944, 1934, 1932, 1944, 1932, 1943, 1944, 1945, 1934, 1944, 1943, 1945, 1936, 1934, 1946, 1934, 1945, 1946, 1947, 1936, 1946, 1945, 1947, 1946, 1948, 1938, 1936, 1948, 1936, 1947, 1948, 1949, 1938, 1948, 1947, 1949, 1940, 1941, 1950, 1951, 1940, 1950, 1941, 1952, 1950, 1952, 1951, 1950, 1953, 1943, 1940, 1953, 1940, 1951, 1953, 1954, 1943, 1953, 1951, 1954, 1945, 1943, 1955, 1943, 1954, 1955, 1956, 1945, 1955, 1954, 1956, 1955, 1957, 1947, 1945, 1957, 1945, 1956, 1957, 1958, 1947, 1957, 1956, 1958, 1949, 1947, 1959, 1947, 1958, 1959, 1960, 1949, 1959, 1958, 1960, 1959, 1961, 1951, 1952, 1961, 1962, 1951, 1961, 1952, 1963, 1961, 1963, 1962, 1954, 1951, 1964, 1951, 1962, 1964, 1965, 1954, 1964, 1962, 1965, 1964, 1966, 1956, 1954, 1966, 1954, 1965, 1966, 1967, 1956, 1966, 1965, 1967, 1958, 1956, 1968, 1956, 1967, 1968, 1969, 1958, 1968, 1967, 1969, 1968, 1970, 1960, 1958, 1970, 1958, 1969, 1970, 1971, 1960, 1970, 1969, 1971, 1962, 1963, 1972, 1973, 1962, 1972, 1963, 1974, 1972, 1974, 1973, 1972, 1975, 1965, 1962, 1975, 1962, 1973, 1975, 1976, 1965, 1975, 1973, 1976, 1967, 1965, 1977, 1965, 1976, 1977, 1978, 1967, 1977, 1976, 1978, 1977, 1979, 1969, 1967, 1979, 1967, 1978, 1979, 1980, 1969, 1979, 1978, 1980, 1971, 1969, 1981, 1969, 1980, 1981, 1982, 1971, 1981, 1980, 1982, 1981, 1983, 1973, 1974, 1983, 1984, 1973, 1983, 1974, 1985, 1983, 1985, 1984, 1976, 1973, 1986, 1973, 1984, 1986, 1987, 1976, 1986, 1984, 1987, 1986, 1988, 1978, 1976, 1988, 1976, 1987, 1988, 1989, 1978, 1988, 1987, 1989, 1980, 1978, 1990, 1978, 1989, 1990, 1991, 1980, 1990, 1989, 1991, 1990, 1992, 1982, 1980, 1992, 1980, 1991, 1992, 1993, 1982, 1992, 1991, 1993, 1984, 1985, 1994, 1995, 1984, 1994, 1985, 1996, 1994, 1996, 1995, 1994, 1997, 1987, 1984, 1997, 1984, 1995, 1997, 1998, 1987, 1997, 1995, 1998, 1989, 1987, 1999, 1987, 1998, 1999, 2000, 1989, 1999, 1998, 2000, 1999, 2001, 1991, 1989, 2001, 1989, 2000, 2001, 2002, 1991, 2001, 2000, 2002, 1993, 1991, 2003, 1991, 2002, 2003, 2004, 1993, 2003, 2002, 2004, 2003, 2005, 1995, 1996, 2005, 2006, 1995, 2005, 1996, 2007, 2005, 2007, 2006, 1998, 1995, 2008, 1995, 2006, 2008, 2009, 1998, 2008, 2006, 2009, 2008, 2010, 2000, 1998, 2010, 1998, 2009, 2010, 2011, 2000, 2010, 2009, 2011, 2002, 2000, 2012, 2000, 2011, 2012, 2013, 2002, 2012, 2011, 2013, 2012, 2014, 2004, 2002, 2014, 2002, 2013, 2014, 2015, 2004, 2014, 2013, 2015, 2006, 2007, 2016, 2017, 2006, 2016, 2007, 2018, 2016, 2018, 2017, 2016, 2019, 2009, 2006, 2019, 2006, 2017, 2019, 2020, 2009, 2019, 2017, 2020, 2011, 2009, 2021, 2009, 2020, 2021, 2022, 2011, 2021, 2020, 2022, 2021, 2023, 2013, 2011, 2023, 2011, 2022, 2023, 2024, 2013, 2023, 2022, 2024, 2015, 2013, 2025, 2013, 2024, 2025, 2026, 2015, 2025, 2024, 2026, 2025, 2027, 2017, 2018, 2027, 2028, 2017, 2027, 2018, 2029, 2027, 2029, 2028, 2020, 2017, 2030, 2017, 2028, 2030, 2031, 2020, 2030, 2028, 2031, 2030, 2032, 2022, 2020, 2032, 2020, 2031, 2032, 2033, 2022, 2032, 2031, 2033, 2024, 2022, 2034, 2022, 2033, 2034, 2035, 2024, 2034, 2033, 2035, 2034, 2036, 2026, 2024, 2036, 2024, 2035, 2036, 2037, 2026, 2036, 2035, 2037, 2028, 2029, 2038, 2039, 2028, 2038, 2029, 2040, 2038, 2040, 2039, 2038, 2041, 2031, 2028, 2041, 2028, 2039, 2041, 2042, 2031, 2041, 2039, 2042, 2033, 2031, 2043, 2031, 2042, 2043, 2044, 2033, 2043, 2042, 2044, 2043, 2045, 2035, 2033, 2045, 2033, 2044, 2045, 2046, 2035, 2045, 2044, 2046, 2037, 2035, 2047, 2035, 2046, 2047, 2048, 2037, 2047, 2046, 2048, 2047, 2049, 2039, 2040, 2049, 2050, 2039, 2049, 2040, 2051, 2049, 2051, 2050, 2042, 2039, 2052, 2039, 2050, 2052, 2053, 2042, 2052, 2050, 2053, 2052, 2054, 2044, 2042, 2054, 2042, 2053, 2054, 2055, 2044, 2054, 2053, 2055, 2046, 2044, 2056, 2044, 2055, 2056, 2057, 2046, 2056, 2055, 2057, 2056, 2058, 2048, 2046, 2058, 2046, 2057, 2058, 2059, 2048, 2058, 2057, 2059, 2050, 2051, 2060, 2061, 2050, 2060, 2051, 2062, 2060, 2062, 2061, 2060, 2063, 2053, 2050, 2063, 2050, 2061, 2063, 2064, 2053, 2063, 2061, 2064, 2055, 2053, 2065, 2053, 2064, 2065, 2066, 2055, 2065, 2064, 2066, 2065, 2067, 2057, 2055, 2067, 2055, 2066, 2067, 2068, 2057, 2067, 2066, 2068, 2059, 2057, 2069, 2057, 2068, 2069, 2070, 2059, 2069, 2068, 2070, 2069, 2071, 2061, 2062, 2071, 2072, 2061, 2071, 2062, 2073, 2071, 2073, 2072, 2064, 2061, 2074, 2061, 2072, 2074, 2075, 2064, 2074, 2072, 2075, 2074, 2076, 2066, 2064, 2076, 2064, 2075, 2076, 2077, 2066, 2076, 2075, 2077, 2068, 2066, 2078, 2066, 2077, 2078, 2079, 2068, 2078, 2077, 2079, 2078, 2080, 2070, 2068, 2080, 2068, 2079, 2080, 2081, 2070, 2080, 2079, 2081, 2082, 2075, 2072, 2082, 2083, 2075, 2082, 2072, 2083, 2077, 2075, 2084, 2075, 2083, 2084, 2085, 2077, 2084, 2083, 2085, 2084, 2086, 2079, 2077, 2086, 2077, 2085, 2086, 2087, 2079, 2086, 2085, 2087, 2081, 2079, 2088, 2079, 2087, 2088, 2089, 2081, 2088, 2087, 2089, 2088, 2083, 2072, 2090, 2091, 2083, 2090, 2072, 2073, 2090, 2073, 2091, 2090, 2092, 2085, 2083, 2092, 2083, 2091, 2092, 2093, 2085, 2092, 2091, 2093, 2087, 2085, 2094, 2085, 2093, 2094, 2095, 2087, 2094, 2093, 2095, 2094, 2096, 2089, 2087, 2096, 2087, 2095, 2096, 2097, 2089, 2096, 2095, 2097, 2098, 2081, 2089, 2098, 2099, 2081, 2098, 2089, 2100, 2098, 2100, 2099, 2089, 2097, 2101, 2100, 2089, 2101, 2097, 2102, 2101, 2102, 2100, 2101, 2081, 2099, 2103, 2099, 2104, 2103, 2070, 2081, 2103, 2104, 2070, 2103, 2105, 2070, 2104, 2105, 2104, 2106, 2105, 2059, 2070, 2105, 2106, 2059, 2059, 2106, 2107, 2106, 2108, 2107, 2048, 2059, 2107, 2108, 2048, 2107, 2109, 2048, 2108, 2109, 2108, 2110, 2109, 2037, 2048, 2109, 2110, 2037, 2037, 2110, 2111, 2110, 2112, 2111, 2026, 2037, 2111, 2112, 2026, 2111, 2113, 2026, 2112, 2113, 2112, 2114, 2113, 2015, 2026, 2113, 2114, 2015, 2015, 2114, 2115, 2114, 2116, 2115, 2004, 2015, 2115, 2116, 2004, 2115, 2117, 2004, 2116, 2117, 2116, 2118, 2117, 1993, 2004, 2117, 2118, 1993, 1993, 2118, 2119, 2118, 2120, 2119, 1982, 1993, 2119, 2120, 1982, 2119, 2121, 1982, 2120, 2121, 2120, 2122, 2121, 1971, 1982, 2121, 2122, 1971, 1971, 2122, 2123, 2122, 2124, 2123, 1960, 1971, 2123, 2124, 1960, 2123, 2125, 1960, 2124, 2125, 2124, 2126, 2125, 1949, 1960, 2125, 2126, 1949, 1949, 2126, 2127, 2126, 2128, 2127, 1938, 1949, 2127, 2128, 1938, 2127, 2129, 1938, 2128, 2129, 2128, 2130, 2129, 1927, 1938, 2129, 2130, 1927, 1927, 2130, 2131, 2130, 2132, 2131, 1916, 1927, 2131, 2132, 1916, 2131, 2133, 1916, 2132, 2133, 2132, 2134, 2133, 1905, 1916, 2133, 2134, 1905, 1905, 2134, 2135, 2134, 2136, 2135, 1894, 1905, 2135, 2136, 1894, 2135, 2137, 1894, 2136, 2137, 2136, 2138, 2137, 1883, 1894, 2137, 2138, 1883, 1883, 2138, 2139, 2138, 2140, 2139, 1872, 1883, 2139, 2140, 1872, 2139, 2141, 1872, 2140, 2141, 2140, 2142, 2141, 1861, 1872, 2141, 2142, 1861, 1861, 2142, 2143, 2142, 2144, 2143, 1850, 1861, 2143, 2144, 1850, 2143, 2145, 1850, 2144, 2145, 2144, 2146, 2145, 1839, 1850, 2145, 2146, 1839, 1839, 2146, 2147, 2146, 2148, 2147, 1828, 1839, 2147, 2148, 1828, 2147, 2149, 1828, 2148, 2149, 2148, 2150, 2149, 1817, 1828, 2149, 2150, 1817, 1817, 2150, 2151, 2150, 2152, 2151, 1806, 1817, 2151, 2152, 1806, 2151, 2153, 1806, 2152, 2153, 2152, 2154, 2153, 1795, 1806, 2153, 2154, 1795, 1795, 2154, 2155, 2154, 2156, 2155, 1784, 1795, 2155, 2156, 1784, 2155, 2157, 1784, 2156, 2157, 2156, 2158, 2157, 1773, 1784, 2157, 2158, 1773, 1773, 2158, 2159, 2158, 2160, 2159, 1762, 1773, 2159, 2160, 1762, 2159, 2161, 1762, 2160, 2161, 2160, 2162, 2161, 1751, 1762, 2161, 2162, 1751, 1751, 2162, 2163, 2162, 2164, 2163, 1740, 1751, 2163, 2164, 1740, 2163, 2165, 1740, 2164, 2165, 2164, 2166, 2165, 1729, 1740, 2165, 2166, 1729, 1729, 2166, 2167, 2166, 2168, 2167, 1718, 1729, 2167, 2168, 1718, 2167, 2169, 1718, 2168, 2169, 2168, 2170, 2169, 1707, 1718, 2169, 2170, 1707, 1707, 2170, 2171, 2170, 2172, 2171, 1696, 1707, 2171, 2172, 1696, 2171, 2173, 1696, 2172, 2173, 2172, 2174, 2173, 1685, 1696, 2173, 2174, 1685, 1685, 2174, 2175, 2174, 2176, 2175, 1674, 1685, 2175, 2176, 1674, 2175, 2177, 1674, 2176, 2177, 2176, 2178, 2177, 1663, 1674, 2177, 2178, 1663, 1663, 2178, 2179, 2178, 2180, 2179, 1652, 1663, 2179, 2180, 1652, 2179, 2181, 1652, 2180, 2181, 2180, 2182, 2181, 1641, 1652, 2181, 2182, 1641, 1641, 2182, 2183, 2182, 2184, 2183, 1630, 1641, 2183, 2184, 1630, 2183, 2185, 1630, 2184, 2185, 1619, 1630, 2185, 1152, 1619, 2185, 2184, 1152, 1619, 1152, 2186, 1608, 1619, 2186, 1152, 1153, 2186, 1153, 1608, 2186, 1152, 2184, 2187, 1143, 1152, 2187, 1142, 1143, 2187, 2184, 1142, 2187, 2188, 1142, 2184, 2188, 2184, 2182, 2188, 1147, 1142, 2188, 2182, 1147, 2189, 1608, 1153, 2189, 1217, 1608, 1147, 2182, 2190, 2191, 1147, 2190, 2182, 2180, 2190, 2180, 2191, 2190, 2192, 1147, 2191, 2192, 2191, 2193, 2192, 505, 1147, 2192, 2193, 505, 2194, 2191, 2180, 2194, 2195, 2191, 2194, 2180, 2178, 2194, 2178, 2195, 505, 2193, 2196, 496, 505, 2196, 495, 496, 2196, 2193, 495, 2196, 2193, 2191, 2197, 2191, 2195, 2197, 2198, 2193, 2197, 2195, 2198, 2197, 2195, 2178, 2199, 2200, 2195, 2199, 2178, 2176, 2199, 2176, 2200, 2199, 2201, 495, 2193, 2201, 2193, 2198, 2201, 2202, 495, 2201, 2198, 2202, 2203, 2195, 2200, 2203, 2198, 2195, 2203, 2204, 2198, 2203, 2200, 2204, 2205, 2200, 2176, 2205, 2206, 2200, 2205, 2176, 2174, 2205, 2174, 2206, 495, 2202, 2207, 2202, 2208, 2207, 493, 495, 2207, 2208, 493, 2207, 2198, 2204, 2209, 2202, 2198, 2209, 2210, 2202, 2209, 2204, 2210, 2209, 2204, 2200, 2211, 2200, 2206, 2211, 2212, 2204, 2211, 2206, 2212, 2211, 2206, 2174, 2213, 2214, 2206, 2213, 2174, 2172, 2213, 2172, 2214, 2213, 2215, 2208, 2202, 2215, 2202, 2210, 2215, 2216, 2208, 2215, 2210, 2216, 2217, 2210, 2204, 2217, 2204, 2212, 2217, 2218, 2210, 2217, 2212, 2218, 2219, 2206, 2214, 2219, 2212, 2206, 2219, 2220, 2212, 2219, 2214, 2220, 2221, 2214, 2172, 2221, 2222, 2214, 2221, 2172, 2170, 2221, 2170, 2222, 2216, 2210, 2223, 2210, 2218, 2223, 2224, 2216, 2223, 2218, 2224, 2223, 2218, 2212, 2225, 2212, 2220, 2225, 2226, 2218, 2225, 2220, 2226, 2225, 2220, 2214, 2227, 2214, 2222, 2227, 2228, 2220, 2227, 2222, 2228, 2227, 2222, 2170, 2229, 2230, 2222, 2229, 2170, 2168, 2229, 2168, 2230, 2229, 2231, 2224, 2218, 2231, 2218, 2226, 2231, 2232, 2224, 2231, 2226, 2232, 2233, 2220, 2228, 2233, 2226, 2220, 2233, 2234, 2226, 2233, 2228, 2234, 2235, 2228, 2222, 2235, 2222, 2230, 2235, 2236, 2228, 2235, 2230, 2236, 2237, 2230, 2168, 2237, 2238, 2230, 2237, 2168, 2166, 2237, 2166, 2238, 2232, 2226, 2239, 2226, 2234, 2239, 2240, 2232, 2239, 2234, 2240, 2239, 2228, 2236, 2241, 2234, 2228, 2241, 2242, 2234, 2241, 2236, 2242, 2241, 2236, 2230, 2243, 2230, 2238, 2243, 2244, 2236, 2243, 2238, 2244, 2243, 2238, 2166, 2245, 2246, 2238, 2245, 2166, 2164, 2245, 2164, 2246, 2245, 2247, 2240, 2234, 2247, 2234, 2242, 2247, 2248, 2240, 2247, 2242, 2248, 2249, 2242, 2236, 2249, 2236, 2244, 2249, 2250, 2242, 2249, 2244, 2250, 2251, 2244, 2238, 2251, 2238, 2246, 2251, 2252, 2244, 2251, 2246, 2252, 2253, 2246, 2164, 2253, 2254, 2246, 2253, 2164, 2162, 2253, 2162, 2254, 2248, 2242, 2255, 2242, 2250, 2255, 2256, 2248, 2255, 2250, 2256, 2255, 2250, 2244, 2257, 2244, 2252, 2257, 2258, 2250, 2257, 2252, 2258, 2257, 2252, 2246, 2259, 2246, 2254, 2259, 2260, 2252, 2259, 2254, 2260, 2259, 2254, 2162, 2261, 2262, 2254, 2261, 2162, 2160, 2261, 2160, 2262, 2261, 2263, 2256, 2250, 2263, 2250, 2258, 2263, 2264, 2256, 2263, 2258, 2264, 2265, 2258, 2252, 2265, 2252, 2260, 2265, 2266, 2258, 2265, 2260, 2266, 2267, 2254, 2262, 2267, 2260, 2254, 2267, 2268, 2260, 2267, 2262, 2268, 2269, 2262, 2160, 2269, 2270, 2262, 2269, 2160, 2158, 2269, 2158, 2270, 2264, 2258, 2271, 2258, 2266, 2271, 2272, 2264, 2271, 2266, 2272, 2271, 2260, 2268, 2273, 2266, 2260, 2273, 2274, 2266, 2273, 2268, 2274, 2273, 2268, 2262, 2275, 2262, 2270, 2275, 2276, 2268, 2275, 2270, 2276, 2275, 2270, 2158, 2277, 2278, 2270, 2277, 2158, 2156, 2277, 2156, 2278, 2277, 2279, 2272, 2266, 2279, 2266, 2274, 2279, 2280, 2272, 2279, 2274, 2280, 2281, 2274, 2268, 2281, 2268, 2276, 2281, 2282, 2274, 2281, 2276, 2282, 2283, 2270, 2278, 2283, 2276, 2270, 2283, 2284, 2276, 2283, 2278, 2284, 2285, 2278, 2156, 2285, 2286, 2278, 2285, 2156, 2154, 2285, 2154, 2286, 2280, 2274, 2287, 2274, 2282, 2287, 2288, 2280, 2287, 2282, 2288, 2287, 2282, 2276, 2289, 2276, 2284, 2289, 2290, 2282, 2289, 2284, 2290, 2289, 2284, 2278, 2291, 2278, 2286, 2291, 2292, 2284, 2291, 2286, 2292, 2291, 2286, 2154, 2293, 2294, 2286, 2293, 2154, 2152, 2293, 2152, 2294, 2293, 2295, 2288, 2282, 2295, 2282, 2290, 2295, 2296, 2288, 2295, 2290, 2296, 2297, 2284, 2292, 2297, 2290, 2284, 2297, 2298, 2290, 2297, 2292, 2298, 2299, 2292, 2286, 2299, 2286, 2294, 2299, 2300, 2292, 2299, 2294, 2300, 2301, 2294, 2152, 2301, 2302, 2294, 2301, 2152, 2150, 2301, 2150, 2302, 2296, 2290, 2303, 2290, 2298, 2303, 2304, 2296, 2303, 2298, 2304, 2303, 2292, 2300, 2305, 2298, 2292, 2305, 2306, 2298, 2305, 2300, 2306, 2305, 2300, 2294, 2307, 2294, 2302, 2307, 2308, 2300, 2307, 2302, 2308, 2307, 2302, 2150, 2309, 2310, 2302, 2309, 2150, 2148, 2309, 2148, 2310, 2309, 2311, 2304, 2298, 2311, 2298, 2306, 2311, 2312, 2304, 2311, 2306, 2312, 2313, 2306, 2300, 2313, 2300, 2308, 2313, 2314, 2306, 2313, 2308, 2314, 2315, 2308, 2302, 2315, 2302, 2310, 2315, 2316, 2308, 2315, 2310, 2316, 2317, 2310, 2148, 2317, 2318, 2310, 2317, 2148, 2146, 2317, 2146, 2318, 2312, 2306, 2319, 2306, 2314, 2319, 2320, 2312, 2319, 2314, 2320, 2319, 2314, 2308, 2321, 2308, 2316, 2321, 2322, 2314, 2321, 2316, 2322, 2321, 2316, 2310, 2323, 2310, 2318, 2323, 2324, 2316, 2323, 2318, 2324, 2323, 2318, 2146, 2325, 2326, 2318, 2325, 2146, 2144, 2325, 2144, 2326, 2325, 2327, 2320, 2314, 2327, 2314, 2322, 2327, 2328, 2320, 2327, 2322, 2328, 2329, 2322, 2316, 2329, 2316, 2324, 2329, 2330, 2322, 2329, 2324, 2330, 2331, 2318, 2326, 2331, 2324, 2318, 2331, 2332, 2324, 2331, 2326, 2332, 2333, 2326, 2144, 2333, 2334, 2326, 2333, 2144, 2142, 2333, 2142, 2334, 2328, 2322, 2335, 2322, 2330, 2335, 2336, 2328, 2335, 2330, 2336, 2335, 2324, 2332, 2337, 2330, 2324, 2337, 2338, 2330, 2337, 2332, 2338, 2337, 2332, 2326, 2339, 2326, 2334, 2339, 2340, 2332, 2339, 2334, 2340, 2339, 2334, 2142, 2341, 2342, 2334, 2341, 2142, 2140, 2341, 2140, 2342, 2341, 2343, 2336, 2330, 2343, 2330, 2338, 2343, 2344, 2336, 2343, 2338, 2344, 2345, 2338, 2332, 2345, 2332, 2340, 2345, 2346, 2338, 2345, 2340, 2346, 2347, 2334, 2342, 2347, 2340, 2334, 2347, 2348, 2340, 2347, 2342, 2348, 2349, 2342, 2140, 2349, 2350, 2342, 2349, 2140, 2138, 2349, 2138, 2350, 2344, 2338, 2351, 2338, 2346, 2351, 2352, 2344, 2351, 2346, 2352, 2351, 2346, 2340, 2353, 2340, 2348, 2353, 2354, 2346, 2353, 2348, 2354, 2353, 2348, 2342, 2355, 2342, 2350, 2355, 2356, 2348, 2355, 2350, 2356, 2355, 2350, 2138, 2357, 2358, 2350, 2357, 2138, 2136, 2357, 2136, 2358, 2357, 2359, 2352, 2346, 2359, 2346, 2354, 2359, 2360, 2352, 2359, 2354, 2360, 2361, 2348, 2356, 2361, 2354, 2348, 2361, 2362, 2354, 2361, 2356, 2362, 2363, 2356, 2350, 2363, 2350, 2358, 2363, 2364, 2356, 2363, 2358, 2364, 2365, 2358, 2136, 2365, 2366, 2358, 2365, 2136, 2134, 2365, 2134, 2366, 2360, 2354, 2367, 2354, 2362, 2367, 2368, 2360, 2367, 2362, 2368, 2367, 2356, 2364, 2369, 2362, 2356, 2369, 2370, 2362, 2369, 2364, 2370, 2369, 2364, 2358, 2371, 2358, 2366, 2371, 2372, 2364, 2371, 2366, 2372, 2371, 2366, 2134, 2373, 2374, 2366, 2373, 2134, 2132, 2373, 2132, 2374, 2373, 2375, 2368, 2362, 2375, 2362, 2370, 2375, 2376, 2368, 2375, 2370, 2376, 2377, 2370, 2364, 2377, 2364, 2372, 2377, 2378, 2370, 2377, 2372, 2378, 2379, 2372, 2366, 2379, 2366, 2374, 2379, 2380, 2372, 2379, 2374, 2380, 2381, 2374, 2132, 2381, 2382, 2374, 2381, 2132, 2130, 2381, 2130, 2382, 2376, 2370, 2383, 2370, 2378, 2383, 2384, 2376, 2383, 2378, 2384, 2383, 2378, 2372, 2385, 2372, 2380, 2385, 2386, 2378, 2385, 2380, 2386, 2385, 2380, 2374, 2387, 2374, 2382, 2387, 2388, 2380, 2387, 2382, 2388, 2387, 2382, 2130, 2389, 2390, 2382, 2389, 2130, 2128, 2389, 2128, 2390, 2389, 2391, 2384, 2378, 2391, 2378, 2386, 2391, 2392, 2384, 2391, 2386, 2392, 2393, 2386, 2380, 2393, 2380, 2388, 2393, 2394, 2386, 2393, 2388, 2394, 2395, 2382, 2390, 2395, 2388, 2382, 2395, 2396, 2388, 2395, 2390, 2396, 2397, 2390, 2128, 2397, 2398, 2390, 2397, 2128, 2126, 2397, 2126, 2398, 2392, 2386, 2399, 2386, 2394, 2399, 2400, 2392, 2399, 2394, 2400, 2399, 2388, 2396, 2401, 2394, 2388, 2401, 2402, 2394, 2401, 2396, 2402, 2401, 2396, 2390, 2403, 2390, 2398, 2403, 2404, 2396, 2403, 2398, 2404, 2403, 2398, 2126, 2405, 2406, 2398, 2405, 2126, 2124, 2405, 2124, 2406, 2405, 2407, 2400, 2394, 2407, 2394, 2402, 2407, 2408, 2400, 2407, 2402, 2408, 2409, 2402, 2396, 2409, 2396, 2404, 2409, 2410, 2402, 2409, 2404, 2410, 2411, 2398, 2406, 2411, 2404, 2398, 2411, 2412, 2404, 2411, 2406, 2412, 2413, 2406, 2124, 2413, 2414, 2406, 2413, 2124, 2122, 2413, 2122, 2414, 2408, 2402, 2415, 2402, 2410, 2415, 2416, 2408, 2415, 2410, 2416, 2415, 2410, 2404, 2417, 2404, 2412, 2417, 2418, 2410, 2417, 2412, 2418, 2417, 2412, 2406, 2419, 2406, 2414, 2419, 2420, 2412, 2419, 2414, 2420, 2419, 2414, 2122, 2421, 2422, 2414, 2421, 2122, 2120, 2421, 2120, 2422, 2421, 2423, 2416, 2410, 2423, 2410, 2418, 2423, 2424, 2416, 2423, 2418, 2424, 2425, 2412, 2420, 2425, 2418, 2412, 2425, 2426, 2418, 2425, 2420, 2426, 2427, 2420, 2414, 2427, 2414, 2422, 2427, 2428, 2420, 2427, 2422, 2428, 2429, 2422, 2120, 2429, 2430, 2422, 2429, 2120, 2118, 2429, 2118, 2430, 2424, 2418, 2431, 2418, 2426, 2431, 2432, 2424, 2431, 2426, 2432, 2431, 2420, 2428, 2433, 2426, 2420, 2433, 2434, 2426, 2433, 2428, 2434, 2433, 2428, 2422, 2435, 2422, 2430, 2435, 2436, 2428, 2435, 2430, 2436, 2435, 2430, 2118, 2437, 2438, 2430, 2437, 2118, 2116, 2437, 2116, 2438, 2437, 2439, 2432, 2426, 2439, 2426, 2434, 2439, 2440, 2432, 2439, 2434, 2440, 2441, 2434, 2428, 2441, 2428, 2436, 2441, 2442, 2434, 2441, 2436, 2442, 2443, 2436, 2430, 2443, 2430, 2438, 2443, 2444, 2436, 2443, 2438, 2444, 2445, 2438, 2116, 2445, 2446, 2438, 2445, 2116, 2114, 2445, 2114, 2446, 2440, 2434, 2447, 2434, 2442, 2447, 2448, 2440, 2447, 2442, 2448, 2447, 2442, 2436, 2449, 2436, 2444, 2449, 2450, 2442, 2449, 2444, 2450, 2449, 2444, 2438, 2451, 2438, 2446, 2451, 2452, 2444, 2451, 2446, 2452, 2451, 2446, 2114, 2453, 2454, 2446, 2453, 2114, 2112, 2453, 2112, 2454, 2453, 2455, 2448, 2442, 2455, 2442, 2450, 2455, 2456, 2448, 2455, 2450, 2456, 2457, 2450, 2444, 2457, 2444, 2452, 2457, 2458, 2450, 2457, 2452, 2458, 2459, 2446, 2454, 2459, 2452, 2446, 2459, 2460, 2452, 2459, 2454, 2460, 2461, 2454, 2112, 2461, 2462, 2454, 2461, 2112, 2110, 2461, 2110, 2462, 2456, 2450, 2463, 2450, 2458, 2463, 2464, 2456, 2463, 2458, 2464, 2463, 2452, 2460, 2465, 2458, 2452, 2465, 2466, 2458, 2465, 2460, 2466, 2465, 2460, 2454, 2467, 2454, 2462, 2467, 2468, 2460, 2467, 2462, 2468, 2467, 2462, 2110, 2469, 2470, 2462, 2469, 2110, 2108, 2469, 2108, 2470, 2469, 2471, 2464, 2458, 2471, 2458, 2466, 2471, 2472, 2464, 2471, 2466, 2472, 2473, 2466, 2460, 2473, 2460, 2468, 2473, 2474, 2466, 2473, 2468, 2474, 2475, 2462, 2470, 2475, 2468, 2462, 2475, 2476, 2468, 2475, 2470, 2476, 2477, 2470, 2108, 2477, 2478, 2470, 2477, 2108, 2106, 2477, 2106, 2478, 2472, 2466, 2479, 2466, 2474, 2479, 2480, 2472, 2479, 2474, 2480, 2479, 2474, 2468, 2481, 2468, 2476, 2481, 2482, 2474, 2481, 2476, 2482, 2481, 2476, 2470, 2483, 2470, 2478, 2483, 2484, 2476, 2483, 2478, 2484, 2483, 2478, 2106, 2485, 2486, 2478, 2485, 2106, 2104, 2485, 2104, 2486, 2485, 2487, 2480, 2474, 2487, 2474, 2482, 2487, 2488, 2480, 2487, 2482, 2488, 2489, 2476, 2484, 2489, 2482, 2476, 2489, 2490, 2482, 2489, 2484, 2490, 2491, 2484, 2478, 2491, 2478, 2486, 2491, 2492, 2484, 2491, 2486, 2492, 2493, 2486, 2104, 2493, 2494, 2486, 2493, 2104, 2099, 2493, 2099, 2494, 2488, 2482, 2495, 2482, 2490, 2495, 2496, 2488, 2495, 2490, 2496, 2495, 2484, 2492, 2497, 2490, 2484, 2497, 2498, 2490, 2497, 2492, 2498, 2497, 2492, 2486, 2499, 2486, 2494, 2499, 2500, 2492, 2499, 2494, 2500, 2499, 2494, 2099, 2501, 2502, 2494, 2501, 2099, 2100, 2501, 2100, 2502, 2501, 2503, 2496, 2490, 2503, 2490, 2498, 2503, 2504, 2496, 2503, 2498, 2504, 2505, 2498, 2492, 2505, 2492, 2500, 2505, 2506, 2498, 2505, 2500, 2506, 2507, 2500, 2494, 2507, 2494, 2502, 2507, 2508, 2500, 2507, 2502, 2508, 2509, 2502, 2100, 2509, 2510, 2502, 2509, 2100, 2102, 2509, 2102, 2510, 2504, 2498, 2511, 2498, 2506, 2511, 2512, 2504, 2511, 2506, 2512, 2511, 2506, 2500, 2513, 2500, 2508, 2513, 2514, 2506, 2513, 2508, 2514, 2513, 2508, 2502, 2515, 2502, 2510, 2515, 2516, 2508, 2515, 2510, 2516, 2515, 2517, 2512, 2506, 2517, 2506, 2514, 2517, 2518, 2512, 2517, 2514, 2518, 2519, 2514, 2508, 2519, 2508, 2516, 2519, 2520, 2514, 2519, 2516, 2520, 2518, 2514, 2521, 2514, 2520, 2521, 2522, 2518, 2521, 2520, 2522, 2521, 2523, 2516, 2510, 2523, 2524, 2516, 2523, 2510, 2525, 2523, 2525, 2524, 2520, 2516, 2526, 2516, 2524, 2526, 2527, 2520, 2526, 2524, 2527, 2526, 2528, 2522, 2520, 2528, 2520, 2527, 2528, 2529, 2522, 2528, 2527, 2529, 2525, 2510, 2530, 2531, 2525, 2530, 2510, 2102, 2530, 2102, 2531, 2530, 2532, 2531, 2102, 2532, 2533, 2531, 2532, 2102, 2097, 2532, 2097, 2533, 2533, 2097, 2534, 2535, 2533, 2534, 2097, 2095, 2534, 2095, 2535, 2534, 2536, 2535, 2095, 2536, 2537, 2535, 2536, 2095, 2093, 2536, 2093, 2537, 2537, 2093, 2538, 2539, 2537, 2538, 2093, 2091, 2538, 2091, 2539, 2538, 2540, 2539, 2091, 2540, 2541, 2539, 2540, 2091, 2073, 2540, 2073, 2541, 2541, 2073, 2542, 2543, 2541, 2542, 2073, 2062, 2542, 2062, 2543, 2542, 2544, 2543, 2062, 2544, 2545, 2543, 2544, 2062, 2051, 2544, 2051, 2545, 2545, 2051, 2546, 2547, 2545, 2546, 2051, 2040, 2546, 2040, 2547, 2546, 2548, 2547, 2040, 2548, 2549, 2547, 2548, 2040, 2029, 2548, 2029, 2549, 2549, 2029, 2550, 2551, 2549, 2550, 2029, 2018, 2550, 2018, 2551, 2550, 2552, 2551, 2018, 2552, 2553, 2551, 2552, 2018, 2007, 2552, 2007, 2553, 2553, 2007, 2554, 2555, 2553, 2554, 2007, 1996, 2554, 1996, 2555, 2554, 2556, 2555, 1996, 2556, 2557, 2555, 2556, 1996, 1985, 2556, 1985, 2557, 2557, 1985, 2558, 2559, 2557, 2558, 1985, 1974, 2558, 1974, 2559, 2558, 2560, 2559, 1974, 2560, 2561, 2559, 2560, 1974, 1963, 2560, 1963, 2561, 2561, 1963, 2562, 2563, 2561, 2562, 1963, 1952, 2562, 1952, 2563, 2562, 2564, 2563, 1952, 2564, 2565, 2563, 2564, 1952, 1941, 2564, 1941, 2565, 2565, 1941, 2566, 2567, 2565, 2566, 1941, 1930, 2566, 1930, 2567, 2566, 2568, 2567, 1930, 2568, 2569, 2567, 2568, 1930, 1919, 2568, 1919, 2569, 2569, 1919, 2570, 2571, 2569, 2570, 1919, 1908, 2570, 1908, 2571, 2570, 2572, 2571, 1908, 2572, 2573, 2571, 2572, 1908, 1897, 2572, 1897, 2573, 2573, 1897, 2574, 2575, 2573, 2574, 1897, 1886, 2574, 1886, 2575, 2574, 2576, 2575, 1886, 2576, 2577, 2575, 2576, 1886, 1875, 2576, 1875, 2577, 2577, 1875, 2578, 2579, 2577, 2578, 1875, 1864, 2578, 1864, 2579, 2578, 2580, 2579, 1864, 2580, 2581, 2579, 2580, 1864, 1853, 2580, 1853, 2581, 2581, 1853, 2582, 2583, 2581, 2582, 1853, 1842, 2582, 1842, 2583, 2582, 2584, 2583, 1842, 2584, 2585, 2583, 2584, 1842, 1831, 2584, 1831, 2585, 2585, 1831, 2586, 2587, 2585, 2586, 1831, 1820, 2586, 1820, 2587, 2586, 2588, 2587, 1820, 2588, 2589, 2587, 2588, 1820, 1809, 2588, 1809, 2589, 2589, 1809, 2590, 2591, 2589, 2590, 1809, 1798, 2590, 1798, 2591, 2590, 2592, 2591, 1798, 2592, 2593, 2591, 2592, 1798, 1787, 2592, 1787, 2593, 2593, 1787, 2594, 2595, 2593, 2594, 1787, 1776, 2594, 1776, 2595, 2594, 2596, 2595, 1776, 2596, 2597, 2595, 2596, 1776, 1765, 2596, 1765, 2597, 2597, 1765, 2598, 2599, 2597, 2598, 1765, 1754, 2598, 1754, 2599, 2598, 2600, 2599, 1754, 2600, 2601, 2599, 2600, 1754, 1743, 2600, 1743, 2601, 2601, 1743, 2602, 2603, 2601, 2602, 1743, 1732, 2602, 1732, 2603, 2602, 2604, 2603, 1732, 2604, 2605, 2603, 2604, 1732, 1721, 2604, 1721, 2605, 2605, 1721, 2606, 2607, 2605, 2606, 1721, 1710, 2606, 1710, 2607, 2606, 2608, 2607, 1710, 2608, 2609, 2607, 2608, 1710, 1699, 2608, 1699, 2609, 2609, 1699, 2610, 2611, 2609, 2610, 1699, 1688, 2610, 1688, 2611, 2610, 2612, 2611, 1688, 2612, 2613, 2611, 2612, 1688, 1677, 2612, 1677, 2613, 2613, 1677, 2614, 2615, 2613, 2614, 1677, 1666, 2614, 1666, 2615, 2614, 2616, 2615, 1666, 2616, 2617, 2615, 2616, 1666, 1655, 2616, 1655, 2617, 2617, 1655, 2618, 2619, 2617, 2618, 1655, 1644, 2618, 1644, 2619, 2618, 2620, 2619, 1644, 2620, 2621, 2619, 2620, 1644, 1633, 2620, 1633, 2621, 2621, 1633, 2622, 2623, 2621, 2622, 1633, 1622, 2622, 1622, 2623, 2622, 2624, 2623, 1622, 2624, 2625, 2623, 2624, 1622, 1611, 2624, 1611, 2625, 2625, 1611, 2626, 1611, 1597, 2626, 1597, 1598, 2626, 1598, 2625, 2626, 2619, 2621, 2627, 2621, 2628, 2627, 2629, 2619, 2627, 2628, 2629, 2627, 2630, 2621, 2623, 2630, 2628, 2621, 2630, 2623, 2631, 2630, 2631, 2628, 2623, 2625, 2632, 2631, 2623, 2632, 2625, 2633, 2632, 2633, 2631, 2632, 2634, 2625, 1598, 2634, 2633, 2625, 2634, 1598, 2635, 2634, 2635, 2633, 2636, 2619, 2629, 2636, 2629, 2637, 2636, 2617, 2619, 2636, 2637, 2617, 2635, 1598, 2638, 2639, 2635, 2638, 1598, 1588, 2638, 1588, 2639, 2638, 2617, 2637, 2640, 2637, 2641, 2640, 2615, 2617, 2640, 2641, 2615, 2640, 2642, 2639, 1588, 2642, 2643, 2639, 2642, 1588, 1580, 2642, 1580, 2643, 2644, 2615, 2641, 2644, 2641, 2645, 2644, 2613, 2615, 2644, 2645, 2613, 2643, 1580, 2646, 2647, 2643, 2646, 1580, 1579, 2646, 1579, 2647, 2646, 2613, 2645, 2648, 2645, 2649, 2648, 2611, 2613, 2648, 2649, 2611, 2648, 2650, 2647, 1579, 2650, 2651, 2647, 2650, 1579, 1582, 2650, 1582, 2651, 2652, 2611, 2649, 2652, 2649, 2653, 2652, 2609, 2611, 2652, 2653, 2609, 2651, 1582, 2654, 2655, 2651, 2654, 1582, 1584, 2654, 1584, 2655, 2654, 2609, 2653, 2656, 2653, 2657, 2656, 2607, 2609, 2656, 2657, 2607, 2656, 2658, 2655, 1584, 2658, 2659, 2655, 2658, 1584, 1565, 2658, 1565, 2659, 2660, 2607, 2657, 2660, 2657, 2661, 2660, 2605, 2607, 2660, 2661, 2605, 2659, 1565, 2662, 2663, 2659, 2662, 1565, 1566, 2662, 1566, 2663, 2662, 2605, 2661, 2664, 2661, 2665, 2664, 2603, 2605, 2664, 2665, 2603, 2664, 2666, 2603, 2665, 2666, 2665, 2667, 2666, 2601, 2603, 2666, 2667, 2601, 2601, 2667, 2668, 2667, 2669, 2668, 2599, 2601, 2668, 2669, 2599, 2668, 2670, 2599, 2669, 2670, 2669, 2671, 2670, 2597, 2599, 2670, 2671, 2597, 2597, 2671, 2672, 2671, 2673, 2672, 2595, 2597, 2672, 2673, 2595, 2672, 2674, 2595, 2673, 2674, 2673, 2675, 2674, 2593, 2595, 2674, 2675, 2593, 2593, 2675, 2676, 2675, 2677, 2676, 2591, 2593, 2676, 2677, 2591, 2676, 2678, 2591, 2677, 2678, 2677, 2679, 2678, 2589, 2591, 2678, 2679, 2589, 2589, 2679, 2680, 2679, 2681, 2680, 2587, 2589, 2680, 2681, 2587, 2680, 2682, 2587, 2681, 2682, 2681, 2683, 2682, 2585, 2587, 2682, 2683, 2585, 2585, 2683, 2684, 2683, 2685, 2684, 2583, 2585, 2684, 2685, 2583, 2684, 2686, 2583, 2685, 2686, 2685, 2687, 2686, 2581, 2583, 2686, 2687, 2581, 2581, 2687, 2688, 2687, 2689, 2688, 2579, 2581, 2688, 2689, 2579, 2688, 2690, 2579, 2689, 2690, 2689, 2691, 2690, 2577, 2579, 2690, 2691, 2577, 2577, 2691, 2692, 2691, 2693, 2692, 2575, 2577, 2692, 2693, 2575, 2692, 2694, 2575, 2693, 2694, 2693, 2695, 2694, 2573, 2575, 2694, 2695, 2573, 2573, 2695, 2696, 2695, 2697, 2696, 2571, 2573, 2696, 2697, 2571, 2696, 2698, 2571, 2697, 2698, 2697, 2699, 2698, 2569, 2571, 2698, 2699, 2569, 2569, 2699, 2700, 2699, 2701, 2700, 2567, 2569, 2700, 2701, 2567, 2700, 2702, 2567, 2701, 2702, 2701, 2703, 2702, 2565, 2567, 2702, 2703, 2565, 2565, 2703, 2704, 2703, 2705, 2704, 2563, 2565, 2704, 2705, 2563, 2704, 2706, 2563, 2705, 2706, 2705, 2707, 2706, 2561, 2563, 2706, 2707, 2561, 2561, 2707, 2708, 2707, 2709, 2708, 2559, 2561, 2708, 2709, 2559, 2708, 2710, 2559, 2709, 2710, 2709, 2711, 2710, 2557, 2559, 2710, 2711, 2557, 2557, 2711, 2712, 2711, 2713, 2712, 2555, 2557, 2712, 2713, 2555, 2712, 2714, 2555, 2713, 2714, 2713, 2715, 2714, 2553, 2555, 2714, 2715, 2553, 2553, 2715, 2716, 2715, 2717, 2716, 2551, 2553, 2716, 2717, 2551, 2716, 2718, 2551, 2717, 2718, 2717, 2719, 2718, 2549, 2551, 2718, 2719, 2549, 2549, 2719, 2720, 2719, 2721, 2720, 2547, 2549, 2720, 2721, 2547, 2720, 2722, 2547, 2721, 2722, 2721, 2723, 2722, 2545, 2547, 2722, 2723, 2545, 2545, 2723, 2724, 2723, 2725, 2724, 2543, 2545, 2724, 2725, 2543, 2724, 2726, 2543, 2725, 2726, 2725, 2727, 2726, 2541, 2543, 2726, 2727, 2541, 2541, 2727, 2728, 2727, 2729, 2728, 2539, 2541, 2728, 2729, 2539, 2728, 2730, 2539, 2729, 2730, 2729, 2731, 2730, 2537, 2539, 2730, 2731, 2537, 2537, 2731, 2732, 2731, 2733, 2732, 2535, 2537, 2732, 2733, 2535, 2732, 2734, 2535, 2733, 2734, 2733, 2735, 2734, 2533, 2535, 2734, 2735, 2533, 2533, 2735, 2736, 2735, 2737, 2736, 2531, 2533, 2736, 2737, 2531, 2736, 2738, 2531, 2737, 2738, 2737, 2739, 2738, 2525, 2531, 2738, 2739, 2525, 2525, 2739, 2740, 2739, 2741, 2740, 2524, 2525, 2740, 2741, 2524, 2740, 2742, 2524, 2741, 2742, 2741, 2743, 2742, 2527, 2524, 2742, 2743, 2527, 2527, 2743, 2744, 2743, 2745, 2744, 2529, 2527, 2744, 2745, 2529, 2744, 2739, 2737, 2746, 2737, 2747, 2746, 2748, 2739, 2746, 2747, 2748, 2746, 2749, 2747, 2737, 2749, 2737, 2735, 2749, 2735, 2747, 2750, 2741, 2739, 2750, 2739, 2748, 2750, 2751, 2741, 2750, 2748, 2751, 2743, 2741, 2752, 2741, 2751, 2752, 2753, 2743, 2752, 2751, 2753, 2752, 2754, 2745, 2743, 2754, 2743, 2753, 2754, 2755, 2745, 2754, 2753, 2755, 2747, 2735, 2756, 2757, 2747, 2756, 2735, 2733, 2756, 2733, 2757, 2756, 2758, 2748, 2747, 2758, 2747, 2757, 2758, 2759, 2748, 2758, 2757, 2759, 2751, 2748, 2760, 2748, 2759, 2760, 2761, 2751, 2760, 2759, 2761, 2760, 2762, 2753, 2751, 2762, 2751, 2761, 2762, 2763, 2753, 2762, 2761, 2763, 2755, 2753, 2764, 2753, 2763, 2764, 2765, 2755, 2764, 2763, 2765, 2764, 2766, 2757, 2733, 2766, 2767, 2757, 2766, 2733, 2731, 2766, 2731, 2767, 2759, 2757, 2768, 2757, 2767, 2768, 2769, 2759, 2768, 2767, 2769, 2768, 2770, 2761, 2759, 2770, 2759, 2769, 2770, 2771, 2761, 2770, 2769, 2771, 2763, 2761, 2772, 2761, 2771, 2772, 2773, 2763, 2772, 2771, 2773, 2772, 2774, 2765, 2763, 2774, 2763, 2773, 2774, 2775, 2765, 2774, 2773, 2775, 2767, 2731, 2776, 2777, 2767, 2776, 2731, 2729, 2776, 2729, 2777, 2776, 2778, 2769, 2767, 2778, 2767, 2777, 2778, 2779, 2769, 2778, 2777, 2779, 2771, 2769, 2780, 2769, 2779, 2780, 2781, 2771, 2780, 2779, 2781, 2780, 2782, 2773, 2771, 2782, 2771, 2781, 2782, 2783, 2773, 2782, 2781, 2783, 2775, 2773, 2784, 2773, 2783, 2784, 2785, 2775, 2784, 2783, 2785, 2784, 2786, 2777, 2729, 2786, 2787, 2777, 2786, 2729, 2727, 2786, 2727, 2787, 2779, 2777, 2788, 2777, 2787, 2788, 2789, 2779, 2788, 2787, 2789, 2788, 2790, 2781, 2779, 2790, 2779, 2789, 2790, 2791, 2781, 2790, 2789, 2791, 2783, 2781, 2792, 2781, 2791, 2792, 2793, 2783, 2792, 2791, 2793, 2792, 2794, 2785, 2783, 2794, 2783, 2793, 2794, 2793, 2785, 2787, 2727, 2795, 2796, 2787, 2795, 2727, 2725, 2795, 2725, 2796, 2795, 2797, 2789, 2787, 2797, 2787, 2796, 2797, 2798, 2789, 2797, 2796, 2798, 2791, 2789, 2799, 2789, 2798, 2799, 2800, 2791, 2799, 2798, 2800, 2799, 2801, 2793, 2791, 2801, 2791, 2800, 2801, 2802, 2793, 2801, 2800, 2802, 2785, 2793, 2803, 2793, 2802, 2803, 2804, 2785, 2803, 2802, 2804, 2803, 2805, 2796, 2725, 2805, 2806, 2796, 2805, 2725, 2723, 2805, 2723, 2806, 2798, 2796, 2807, 2796, 2806, 2807, 2808, 2798, 2807, 2806, 2808, 2807, 2809, 2800, 2798, 2809, 2798, 2808, 2809, 2810, 2800, 2809, 2808, 2810, 2811, 2785, 2804, 2811, 2804, 2812, 2811, 2775, 2785, 2811, 2812, 2775, 2806, 2723, 2813, 2814, 2806, 2813, 2723, 2721, 2813, 2721, 2814, 2813, 2815, 2814, 2721, 2815, 2721, 2719, 2815, 2719, 2814, 2800, 2810, 2816, 2810, 2817, 2816, 2802, 2800, 2816, 2817, 2802, 2816, 2775, 2812, 2818, 2812, 2819, 2818, 2765, 2775, 2818, 2819, 2765, 2818, 2814, 2719, 2820, 2821, 2814, 2820, 2719, 2717, 2820, 2717, 2821, 2820, 2822, 2802, 2817, 2822, 2817, 2823, 2822, 2804, 2802, 2822, 2823, 2804, 2812, 2804, 2824, 2804, 2823, 2824, 2825, 2812, 2824, 2823, 2825, 2824, 2826, 2765, 2819, 2826, 2819, 2827, 2826, 2755, 2765, 2826, 2827, 2755, 2828, 2821, 2717, 2828, 2829, 2821, 2828, 2717, 2715, 2828, 2715, 2829, 2830, 2819, 2812, 2830, 2812, 2825, 2830, 2831, 2819, 2830, 2825, 2831, 2755, 2827, 2832, 2827, 2833, 2832, 2745, 2755, 2832, 2833, 2745, 2832, 2829, 2715, 2834, 2835, 2829, 2834, 2715, 2713, 2834, 2713, 2835, 2834, 2819, 2831, 2836, 2827, 2819, 2836, 2837, 2827, 2836, 2831, 2837, 2836, 2838, 2745, 2833, 2838, 2833, 2839, 2838, 2529, 2745, 2838, 2839, 2529, 2840, 2835, 2713, 2840, 2841, 2835, 2840, 2713, 2711, 2840, 2711, 2841, 2842, 2833, 2827, 2842, 2827, 2837, 2842, 2843, 2833, 2842, 2837, 2843, 2529, 2839, 2844, 2839, 2845, 2844, 2522, 2529, 2844, 2845, 2522, 2844, 2841, 2711, 2846, 2847, 2841, 2846, 2711, 2709, 2846, 2709, 2847, 2846, 2839, 2833, 2848, 2833, 2843, 2848, 2849, 2839, 2848, 2843, 2849, 2848, 2850, 2522, 2845, 2850, 2845, 2851, 2850, 2518, 2522, 2850, 2851, 2518, 2852, 2847, 2709, 2852, 2853, 2847, 2852, 2709, 2707, 2852, 2707, 2853, 2854, 2845, 2839, 2854, 2839, 2849, 2854, 2855, 2845, 2854, 2849, 2855, 2518, 2851, 2856, 2851, 2857, 2856, 2512, 2518, 2856, 2857, 2512, 2856, 2853, 2707, 2858, 2859, 2853, 2858, 2707, 2705, 2858, 2705, 2859, 2858, 2845, 2855, 2860, 2851, 2845, 2860, 2861, 2851, 2860, 2855, 2861, 2860, 2862, 2512, 2857, 2862, 2857, 2863, 2862, 2504, 2512, 2862, 2863, 2504, 2864, 2859, 2705, 2864, 2865, 2859, 2864, 2705, 2703, 2864, 2703, 2865, 2866, 2857, 2851, 2866, 2851, 2861, 2866, 2867, 2857, 2866, 2861, 2867, 2863, 2857, 2868, 2857, 2867, 2868, 2869, 2863, 2868, 2867, 2869, 2868, 2504, 2863, 2870, 2863, 2871, 2870, 2496, 2504, 2870, 2871, 2496, 2870, 2865, 2703, 2872, 2873, 2865, 2872, 2703, 2701, 2872, 2701, 2873, 2872, 2874, 2863, 2869, 2874, 2871, 2863, 2874, 2869, 2875, 2874, 2875, 2871, 2876, 2496, 2871, 2876, 2871, 2877, 2876, 2488, 2496, 2876, 2877, 2488, 2878, 2873, 2701, 2878, 2879, 2873, 2878, 2701, 2699, 2878, 2699, 2879, 2871, 2875, 2880, 2877, 2871, 2880, 2875, 2881, 2880, 2881, 2877, 2880, 2488, 2877, 2882, 2877, 2883, 2882, 2480, 2488, 2882, 2883, 2480, 2882, 2879, 2699, 2884, 2885, 2879, 2884, 2699, 2697, 2884, 2697, 2885, 2884, 2886, 2877, 2881, 2886, 2883, 2877, 2886, 2881, 2887, 2886, 2887, 2883, 2888, 2480, 2883, 2888, 2883, 2889, 2888, 2472, 2480, 2888, 2889, 2472, 2890, 2885, 2697, 2890, 2891, 2885, 2890, 2697, 2695, 2890, 2695, 2891, 2883, 2887, 2892, 2889, 2883, 2892, 2887, 2893, 2892, 2893, 2889, 2892, 2472, 2889, 2894, 2889, 2895, 2894, 2464, 2472, 2894, 2895, 2464, 2894, 2891, 2695, 2896, 2897, 2891, 2896, 2695, 2693, 2896, 2693, 2897, 2896, 2898, 2889, 2893, 2898, 2895, 2889, 2898, 2893, 2899, 2898, 2899, 2895, 2900, 2464, 2895, 2900, 2895, 2901, 2900, 2456, 2464, 2900, 2901, 2456, 2902, 2897, 2693, 2902, 2903, 2897, 2902, 2693, 2691, 2902, 2691, 2903, 2895, 2899, 2904, 2901, 2895, 2904, 2899, 2905, 2904, 2905, 2901, 2904, 2456, 2901, 2906, 2901, 2907, 2906, 2448, 2456, 2906, 2907, 2448, 2906, 2903, 2691, 2908, 2909, 2903, 2908, 2691, 2689, 2908, 2689, 2909, 2908, 2910, 2901, 2905, 2910, 2907, 2901, 2910, 2905, 2911, 2910, 2911, 2907, 2912, 2448, 2907, 2912, 2907, 2913, 2912, 2440, 2448, 2912, 2913, 2440, 2914, 2909, 2689, 2914, 2915, 2909, 2914, 2689, 2687, 2914, 2687, 2915, 2907, 2911, 2916, 2913, 2907, 2916, 2911, 2917, 2916, 2917, 2913, 2916, 2440, 2913, 2918, 2913, 2919, 2918, 2432, 2440, 2918, 2919, 2432, 2918, 2915, 2687, 2920, 2921, 2915, 2920, 2687, 2685, 2920, 2685, 2921, 2920, 2922, 2913, 2917, 2922, 2919, 2913, 2922, 2917, 2923, 2922, 2923, 2919, 2924, 2432, 2919, 2924, 2919, 2925, 2924, 2424, 2432, 2924, 2925, 2424, 2926, 2921, 2685, 2926, 2927, 2921, 2926, 2685, 2683, 2926, 2683, 2927, 2919, 2923, 2928, 2925, 2919, 2928, 2923, 2929, 2928, 2929, 2925, 2928, 2424, 2925, 2930, 2925, 2931, 2930, 2416, 2424, 2930, 2931, 2416, 2930, 2927, 2683, 2932, 2933, 2927, 2932, 2683, 2681, 2932, 2681, 2933, 2932, 2934, 2925, 2929, 2934, 2931, 2925, 2934, 2929, 2935, 2934, 2935, 2931, 2936, 2416, 2931, 2936, 2931, 2937, 2936, 2408, 2416, 2936, 2937, 2408, 2938, 2933, 2681, 2938, 2939, 2933, 2938, 2681, 2679, 2938, 2679, 2939, 2931, 2935, 2940, 2937, 2931, 2940, 2935, 2941, 2940, 2941, 2937, 2940, 2408, 2937, 2942, 2937, 2943, 2942, 2400, 2408, 2942, 2943, 2400, 2942, 2939, 2679, 2944, 2945, 2939, 2944, 2679, 2677, 2944, 2677, 2945, 2944, 2946, 2937, 2941, 2946, 2943, 2937, 2946, 2941, 2947, 2946, 2947, 2943, 2948, 2400, 2943, 2948, 2943, 2949, 2948, 2392, 2400, 2948, 2949, 2392, 2950, 2945, 2677, 2950, 2951, 2945, 2950, 2677, 2675, 2950, 2675, 2951, 2943, 2947, 2952, 2949, 2943, 2952, 2947, 2953, 2952, 2953, 2949, 2952, 2392, 2949, 2954, 2949, 2955, 2954, 2384, 2392, 2954, 2955, 2384, 2954, 2951, 2675, 2956, 2957, 2951, 2956, 2675, 2673, 2956, 2673, 2957, 2956, 2958, 2949, 2953, 2958, 2955, 2949, 2958, 2953, 2959, 2958, 2959, 2955, 2960, 2384, 2955, 2960, 2955, 2961, 2960, 2376, 2384, 2960, 2961, 2376, 2962, 2957, 2673, 2962, 2963, 2957, 2962, 2673, 2671, 2962, 2671, 2963, 2955, 2959, 2964, 2961, 2955, 2964, 2959, 2965, 2964, 2965, 2961, 2964, 2376, 2961, 2966, 2961, 2967, 2966, 2368, 2376, 2966, 2967, 2368, 2966, 2963, 2671, 2968, 2969, 2963, 2968, 2671, 2669, 2968, 2669, 2969, 2968, 2970, 2961, 2965, 2970, 2967, 2961, 2970, 2965, 2971, 2970, 2971, 2967, 2972, 2368, 2967, 2972, 2967, 2973, 2972, 2360, 2368, 2972, 2973, 2360, 2974, 2969, 2669, 2974, 2975, 2969, 2974, 2669, 2667, 2974, 2667, 2975, 2967, 2971, 2976, 2973, 2967, 2976, 2971, 2977, 2976, 2977, 2973, 2976, 2360, 2973, 2978, 2973, 2979, 2978, 2352, 2360, 2978, 2979, 2352, 2978, 2975, 2667, 2980, 2981, 2975, 2980, 2667, 2665, 2980, 2665, 2981, 2980, 2982, 2973, 2977, 2982, 2979, 2973, 2982, 2977, 2983, 2982, 2983, 2979, 2984, 2352, 2979, 2984, 2979, 2985, 2984, 2344, 2352, 2984, 2985, 2344, 2986, 2981, 2665, 2986, 2987, 2981, 2986, 2665, 2661, 2986, 2661, 2987, 2979, 2983, 2988, 2985, 2979, 2988, 2983, 2989, 2988, 2989, 2985, 2988, 2344, 2985, 2990, 2985, 2991, 2990, 2336, 2344, 2990, 2991, 2336, 2990, 2987, 2661, 2992, 2993, 2987, 2992, 2661, 2657, 2992, 2657, 2993, 2992, 2994, 2985, 2989, 2994, 2991, 2985, 2994, 2989, 2995, 2994, 2995, 2991, 2996, 2336, 2991, 2996, 2991, 2997, 2996, 2328, 2336, 2996, 2997, 2328, 2998, 2993, 2657, 2998, 2999, 2993, 2998, 2657, 2653, 2998, 2653, 2999, 2991, 2995, 3000, 2997, 2991, 3000, 2995, 3001, 3000, 3001, 2997, 3000, 2328, 2997, 3002, 2997, 3003, 3002, 2320, 2328, 3002, 3003, 2320, 3002, 2999, 2653, 3004, 3005, 2999, 3004, 2653, 2649, 3004, 2649, 3005, 3004, 3006, 2997, 3001, 3006, 3003, 2997, 3006, 3001, 3007, 3006, 3007, 3003, 3008, 2320, 3003, 3008, 3003, 3009, 3008, 2312, 2320, 3008, 3009, 2312, 3010, 3005, 2649, 3010, 3011, 3005, 3010, 2649, 2645, 3010, 2645, 3011, 3003, 3007, 3012, 3009, 3003, 3012, 3007, 3013, 3012, 3013, 3009, 3012, 2312, 3009, 3014, 3009, 3015, 3014, 2304, 2312, 3014, 3015, 2304, 3014, 3011, 2645, 3016, 3017, 3011, 3016, 2645, 2641, 3016, 2641, 3017, 3016, 3018, 3009, 3013, 3018, 3015, 3009, 3018, 3013, 3019, 3018, 3019, 3015, 3020, 2304, 3015, 3020, 3015, 3021, 3020, 2296, 2304, 3020, 3021, 2296, 3022, 3017, 2641, 3022, 3023, 3017, 3022, 2641, 2637, 3022, 2637, 3023, 3015, 3019, 3024, 3021, 3015, 3024, 3019, 3025, 3024, 3025, 3021, 3024, 2296, 3021, 3026, 3021, 3027, 3026, 2288, 2296, 3026, 3027, 2288, 3026, 3023, 2637, 3028, 3029, 3023, 3028, 2637, 2629, 3028, 2629, 3029, 3028, 3030, 3021, 3025, 3030, 3027, 3021, 3030, 3025, 3031, 3030, 3031, 3027, 3032, 2288, 3027, 3032, 3027, 3033, 3032, 2280, 2288, 3032, 3033, 2280, 3034, 3029, 2629, 3034, 3035, 3029, 3034, 2629, 2628, 3034, 2628, 3035, 3027, 3031, 3036, 3033, 3027, 3036, 3031, 3037, 3036, 3037, 3033, 3036, 2280, 3033, 3038, 3033, 3039, 3038, 2272, 2280, 3038, 3039, 2272, 3038, 3035, 2628, 3040, 3041, 3035, 3040, 2628, 2631, 3040, 2631, 3041, 3040, 3042, 3033, 3037, 3042, 3039, 3033, 3042, 3037, 3043, 3042, 3043, 3039, 3044, 2272, 3039, 3044, 3039, 3045, 3044, 2264, 2272, 3044, 3045, 2264, 3046, 3041, 2631, 3046, 3047, 3041, 3046, 2631, 2633, 3046, 2633, 3047, 3039, 3043, 3048, 3045, 3039, 3048, 3043, 3049, 3048, 3049, 3045, 3048, 2264, 3045, 3050, 3045, 3051, 3050, 2256, 2264, 3050, 3051, 2256, 3050, 3047, 2633, 3052, 3053, 3047, 3052, 2633, 2635, 3052, 2635, 3053, 3052, 3054, 3045, 3049, 3054, 3051, 3045, 3054, 3049, 3055, 3054, 3055, 3051, 3056, 2256, 3051, 3056, 3051, 3057, 3056, 2248, 2256, 3056, 3057, 2248, 3058, 3053, 2635, 3058, 3059, 3053, 3058, 2635, 2639, 3058, 2639, 3059, 3051, 3055, 3060, 3057, 3051, 3060, 3055, 3061, 3060, 3061, 3057, 3060, 2248, 3057, 3062, 3057, 3063, 3062, 2240, 2248, 3062, 3063, 2240, 3062, 3059, 2639, 3064, 3065, 3059, 3064, 2639, 2643, 3064, 2643, 3065, 3064, 3066, 3057, 3061, 3066, 3063, 3057, 3066, 3061, 3067, 3066, 3067, 3063, 3068, 2240, 3063, 3068, 3063, 3069, 3068, 2232, 2240, 3068, 3069, 2232, 3070, 3065, 2643, 3070, 3071, 3065, 3070, 2643, 2647, 3070, 2647, 3071, 3063, 3067, 3072, 3069, 3063, 3072, 3067, 3073, 3072, 3073, 3069, 3072, 2232, 3069, 3074, 3069, 3075, 3074, 2224, 2232, 3074, 3075, 2224, 3074, 3071, 2647, 3076, 3077, 3071, 3076, 2647, 2651, 3076, 2651, 3077, 3076, 3078, 3069, 3073, 3078, 3075, 3069, 3078, 3073, 3079, 3078, 3079, 3075, 3080, 2224, 3075, 3080, 3075, 3081, 3080, 2216, 2224, 3080, 3081, 2216, 3082, 3077, 2651, 3082, 3083, 3077, 3082, 2651, 2655, 3082, 2655, 3083, 3075, 3079, 3084, 3081, 3075, 3084, 3079, 3085, 3084, 3085, 3081, 3084, 2216, 3081, 3086, 3081, 3087, 3086, 3088, 3087, 3081, 3088, 3081, 3085, 2208, 2216, 3086, 3087, 2208, 3086, 3083, 2655, 3089, 3090, 3083, 3089, 2655, 2659, 3089, 2659, 3090, 3089, 3088, 3085, 3091, 3091, 3085, 3092, 3091, 3093, 3088, 3094, 2208, 3087, 3094, 493, 2208, 3095, 3090, 2659, 3095, 3096, 3090, 3095, 2659, 2663, 3095, 2663, 3096, 3088, 3093, 3097, 3088, 3097, 3087, 3094, 3098, 493, 493, 3098, 3099, 493, 3099, 480, 3094, 3087, 479, 479, 3087, 3100, 3087, 3097, 3101, 3087, 3101, 3100, 3094, 3102, 3098, 479, 3102, 3094, 3093, 3103, 3097, 3097, 3104, 3101, 3097, 3103, 3104, 3101, 3104, 3105, 3104, 3103, 3105, 3093, 3106, 3103, 3105, 3103, 3106, 3101, 3105, 3107, 3107, 3105, 3106, 3107, 3106, 3093, 3100, 3101, 3107, 3091, 3107, 3093, 3100, 3107, 3091, 3102, 3108, 3098, 3098, 3108, 3109, 3098, 3109, 3099, 3109, 3108, 3110, 3099, 3109, 3110, 3102, 3111, 3108, 3110, 3108, 3111, 3099, 3110, 3112, 3112, 3110, 3111, 3112, 3111, 3102, 480, 3099, 3112, 479, 3112, 3102, 480, 3112, 479, 3100, 3113, 479, 479, 3113, 481, 3091, 400, 3100, 3114, 400, 3091, 3100, 3115, 3113, 400, 3115, 3100, 3113, 3116, 481, 3113, 3117, 3116, 3115, 3117, 3113, 481, 3116, 3118, 3117, 3118, 3116, 3115, 3119, 3117, 3119, 3118, 3117, 481, 3118, 3120, 3120, 3118, 3119, 3120, 3119, 3115, 400, 3120, 3115, 401, 481, 3120, 401, 3120, 400, 3114, 3121, 400, 400, 3121, 402, 3091, 3122, 3114, 3091, 3123, 3122, 3092, 3123, 3091, 3121, 3124, 402, 402, 3124, 3125, 402, 3125, 403, 3121, 3126, 3124, 3124, 3126, 3125, 403, 3125, 3127, 3125, 3126, 3127, 3128, 3126, 3121, 3128, 3127, 3126, 403, 3127, 3128, 3114, 3128, 3121, 385, 403, 3128, 385, 3128, 3114, 3114, 3129, 385, 385, 3129, 3130, 3131, 3129, 3092, 3132, 3129, 3131, 3092, 3133, 3131, 3114, 3134, 3129, 3114, 3122, 3134, 3130, 3135, 385, 385, 3135, 387, 3122, 3136, 3134, 3122, 3137, 3136, 3123, 3137, 3122, 3138, 3136, 3137, 3123, 3138, 3137, 3134, 3136, 3139, 3139, 3136, 3138, 3140, 3138, 3123, 3140, 3139, 3138, 3134, 3139, 3140, 3092, 3140, 3123, 3129, 3134, 3140, 3129, 3140, 3092, 3129, 3141, 3130, 3129, 3142, 3141, 3132, 3142, 3129, 3130, 3141, 3143, 3130, 3143, 3144, 3132, 3145, 3144, 3144, 3145, 3146, 3132, 3147, 3145, 3142, 3148, 3141, 3141, 3148, 3149, 3141, 3149, 3143, 3142, 3150, 3148, 3148, 3150, 3149, 3143, 3149, 3151, 3149, 3150, 3151, 3152, 3150, 3142, 3152, 3151, 3150, 3143, 3151, 3152, 3144, 3143, 3152, 3132, 3152, 3142, 3144, 3152, 3132, 3132, 3153, 3147, 3131, 3153, 3132, 3144, 382, 3130, 3154, 382, 3144, 382, 3155, 3130, 3130, 3155, 3135, 3144, 3156, 3154, 3144, 3157, 3156, 3146, 3157, 3144, 3155, 3158, 3135, 3135, 3158, 3159, 3135, 3159, 387, 387, 3159, 3160, 3158, 3160, 3159, 387, 3160, 384, 382, 384, 3155, 3161, 3160, 3158, 384, 3160, 3161, 384, 3161, 3155, 3155, 3161, 3158, 3154, 3162, 382, 382, 3162, 3163, 382, 3163, 383, 3146, 3164, 3157, 3165, 3164, 3146, 3154, 3165, 3166, 3166, 3165, 3167, 3166, 330, 383, 3168, 330, 3166, 3169, 3165, 3146, 3170, 3165, 3169, 3146, 3171, 3169, 3146, 3172, 3171, 3145, 3172, 3146, 3164, 3173, 3157, 3157, 3173, 3174, 3157, 3174, 3156, 3173, 3175, 3174, 3156, 3174, 3175, 3164, 3176, 3173, 3176, 3175, 3173, 3156, 3175, 3177, 3177, 3175, 3176, 3177, 3176, 3164, 3165, 3177, 3164, 3154, 3156, 3177, 3154, 3177, 3165, 3170, 3178, 3165, 3165, 3178, 3179, 3165, 3179, 3167, 3170, 3180, 3178, 3181, 3180, 3170, 3181, 3182, 3167, 1490, 3182, 3181, 3182, 3183, 3167, 3170, 3184, 3181, 3170, 3185, 3184, 3181, 3184, 1500, 3170, 3186, 3185, 3169, 3186, 3170, 3178, 3187, 3179, 3178, 3188, 3187, 3180, 3188, 3178, 3179, 3187, 3189, 3187, 3188, 3189, 3180, 3190, 3188, 3189, 3188, 3190, 3179, 3189, 3191, 3191, 3189, 3190, 3191, 3190, 3180, 3167, 3179, 3191, 3181, 3191, 3180, 3167, 3191, 3181, 1500, 3192, 3181, 3181, 3192, 3193, 3181, 3193, 1490, 1490, 3193, 1508, 3193, 3194, 1508, 3192, 3195, 3193, 3193, 3195, 3194, 1508, 3194, 3196, 1508, 3196, 1507, 1500, 1507, 3192, 3197, 3194, 3195, 3196, 3194, 3197, 1507, 3196, 3197, 1507, 3197, 3192, 3192, 3197, 3195, 3167, 3198, 3166, 3167, 3183, 3198, 3166, 3198, 3199, 3183, 3200, 3198, 3198, 3201, 3199, 3198, 3200, 3201, 3200, 3202, 3201, 3199, 3201, 3202, 3183, 3203, 3200, 3203, 3202, 3200, 3204, 3203, 3183, 3204, 3202, 3203, 3199, 3202, 3204, 3182, 3204, 3183, 3168, 3199, 3204, 3166, 3199, 3168, 3168, 3204, 3182, 3168, 3182, 322, 322, 3205, 3168, 3168, 3205, 3206, 3168, 3206, 330, 322, 3182, 312, 3182, 3207, 312, 3182, 3208, 3207, 1490, 3208, 3182, 1490, 1492, 3208, 1492, 3209, 3208, 3208, 3210, 3207, 3208, 3209, 3210, 1492, 3211, 3209, 1493, 3211, 1492, 312, 3207, 1493, 3210, 3209, 3212, 3212, 3209, 3211, 3207, 3210, 3212, 3207, 3212, 1493, 1493, 3212, 3211, 312, 3213, 322, 312, 3214, 3213, 303, 3214, 312, 303, 327, 3214, 327, 3215, 3214, 327, 3216, 3215, 324, 3216, 327, 322, 3213, 324, 3214, 3215, 3217, 3215, 3216, 3217, 3214, 3217, 3213, 3213, 3218, 324, 324, 3218, 3216, 3217, 3216, 3218, 3213, 3217, 3218, 323, 3219, 322, 322, 3219, 3205, 3219, 3220, 3205, 3205, 3220, 3221, 3205, 3221, 3206, 3219, 3222, 3220, 3222, 3221, 3220, 3206, 3221, 3223, 3223, 3221, 3222, 332, 3222, 3219, 332, 3223, 3222, 3206, 3223, 332, 323, 332, 3219, 330, 3206, 332, 310, 3224, 323, 310, 3225, 3224, 325, 3225, 310, 323, 3224, 3226, 323, 3226, 328, 325, 3227, 3225, 328, 3227, 325, 328, 3226, 3227, 3225, 3228, 3224, 3224, 3229, 3226, 3224, 3228, 3229, 3225, 3230, 3228, 3227, 3230, 3225, 3228, 3230, 3229, 3226, 3231, 3227, 3227, 3231, 3230, 3229, 3230, 3231, 3226, 3229, 3231, 329, 3232, 328, 328, 3232, 3233, 328, 3233, 331, 329, 3234, 3232, 335, 3234, 329, 331, 3235, 335, 335, 3235, 3234, 331, 3233, 3235, 3232, 3236, 3233, 3234, 3237, 3232, 3232, 3237, 3236, 3233, 3236, 3238, 3233, 3238, 3235, 3237, 3238, 3236, 3235, 3239, 3234, 3235, 3238, 3239, 3239, 3238, 3237, 3234, 3239, 3237, 331, 3240, 330, 331, 339, 3240, 330, 3240, 3241, 330, 3241, 383, 339, 3242, 3240, 3240, 3243, 3241, 3240, 3242, 3243, 3241, 3243, 3244, 3243, 3242, 3244, 339, 3245, 3242, 3244, 3242, 3245, 3241, 3244, 3246, 3246, 3244, 3245, 3246, 3245, 339, 383, 3241, 3246, 337, 3246, 339, 383, 3246, 337, 383, 3247, 3166, 383, 3163, 3247, 3166, 3247, 3248, 3166, 3248, 3154, 3154, 3248, 3162, 3162, 3249, 3163, 3163, 3250, 3247, 3163, 3249, 3250, 3162, 3251, 3249, 3248, 3251, 3162, 3249, 3251, 3250, 3247, 3252, 3248, 3248, 3252, 3251, 3250, 3251, 3252, 3247, 3250, 3252, 3254, 3253, 3255, 3255, 3253, 3256, 3253, 3257, 3256, 3258, 3255, 3256, 3257, 3258, 3256, 3259, 3257, 3253, 3260, 3255, 3258, 3259, 1482, 3257, 3260, 3258, 3261, 3257, 1482, 3262, 3263, 3257, 3262, 1482, 1480, 3262, 1480, 3263, 3262, 3264, 3258, 3257, 3264, 3257, 3263, 3264, 3265, 3258, 3264, 3263, 3265, 3261, 3258, 3266, 3258, 3265, 3266, 3267, 3261, 3266, 3265, 3267, 3266, 3268, 3261, 3267, 3268, 3267, 3269, 3270, 3263, 1480, 3270, 3271, 3263, 3270, 1480, 1474, 3270, 1474, 3271, 3265, 3263, 3272, 3263, 3271, 3272, 3273, 3265, 3272, 3271, 3273, 3272, 3274, 3267, 3265, 3274, 3265, 3273, 3274, 3275, 3267, 3274, 3273, 3275, 3269, 3267, 3276, 3267, 3275, 3276, 3277, 3269, 3276, 3275, 3277, 3276, 3278, 3269, 3277, 3278, 3277, 3279, 3271, 1474, 3280, 3281, 3271, 3280, 1474, 1468, 3280, 1468, 3281, 3280, 3282, 3273, 3271, 3282, 3271, 3281, 3282, 3283, 3273, 3282, 3281, 3283, 3275, 3273, 3284, 3273, 3283, 3284, 3285, 3275, 3284, 3283, 3285, 3284, 3286, 3277, 3275, 3286, 3275, 3285, 3286, 3287, 3277, 3286, 3285, 3287, 3279, 3277, 3288, 3277, 3287, 3288, 3289, 3279, 3288, 3287, 3289, 3288, 3290, 3279, 3289, 3291, 3289, 3287, 3291, 3287, 3292, 3292, 3287, 3293, 3287, 3285, 3293, 3294, 3292, 3293, 3285, 3294, 3293, 3295, 3292, 3294, 3295, 3294, 3296, 3297, 3294, 3285, 3297, 3298, 3294, 3297, 3285, 3283, 3297, 3283, 3298, 3296, 3294, 3299, 3294, 3298, 3299, 3300, 3296, 3299, 3298, 3300, 3299, 3301, 3296, 3300, 3301, 3300, 3302, 3298, 3283, 3303, 3304, 3298, 3303, 3283, 3281, 3303, 3281, 3304, 3303, 3305, 3300, 3298, 3305, 3298, 3304, 3305, 3306, 3300, 3305, 3304, 3306, 3302, 3300, 3307, 3300, 3306, 3307, 1347, 3302, 3307, 3306, 1347, 3307, 893, 3302, 1347, 3308, 3304, 3281, 3308, 3281, 1468, 3308, 1468, 1443, 3308, 1443, 3304, 3304, 1443, 3309, 3306, 3304, 3309, 1443, 1444, 3309, 1444, 3306, 3309, 3310, 3306, 1444, 3310, 1347, 3306, 3310, 1444, 1348, 1348, 1444, 1423, 3310, 3311, 1347, 1348, 3312, 3310, 3310, 3312, 3311, 1347, 3311, 3313, 1347, 3313, 1346, 1346, 3313, 1350, 1348, 1350, 3312, 1423, 3314, 1348, 1348, 3314, 1358, 1423, 3315, 3314, 1361, 3315, 1423, 1361, 1363, 3315, 3312, 3316, 3311, 3311, 3317, 3313, 3311, 3316, 3317, 3313, 3317, 3318, 3313, 3318, 1350, 3317, 3316, 3318, 1350, 3319, 3312, 3312, 3319, 3316, 3318, 3316, 3319, 1350, 3318, 3319, 1358, 3320, 1363, 3314, 3321, 1358, 1358, 3321, 3320, 3314, 3322, 3321, 3315, 3322, 3314, 3322, 3320, 3321, 1363, 3320, 3323, 1363, 3323, 3315, 3323, 3320, 3322, 3315, 3323, 3322, 3325, 3324, 3326, 3326, 3324, 3327, 547, 1055, 549, 1055, 3328, 549, 549, 3328, 3329, 549, 3329, 540, 1055, 3330, 3328, 1086, 3330, 1055, 535, 540, 1086, 3328, 3331, 3329, 3330, 3331, 3328, 540, 3329, 3331, 540, 3331, 1086, 1086, 3331, 3330, 1062, 1066, 1182, 1066, 3332, 1182, 1066, 3333, 3332, 1067, 3333, 1066, 3334, 3332, 3333, 1067, 3334, 3333, 1182, 3332, 3335, 3335, 3332, 3334, 3336, 3334, 1067, 3336, 3335, 3334, 1182, 3335, 3336, 1034, 3336, 1067, 1180, 1182, 3336, 1180, 3336, 1034, 981, 1180, 1034, 1210, 1180, 981, 1034, 3337, 981, 1034, 3338, 3337, 1011, 3338, 1034, 1011, 3339, 3338, 982, 3339, 1011, 981, 3340, 982, 982, 3340, 3339, 981, 3337, 3340, 981, 3341, 1210, 981, 983, 3341, 1210, 3341, 3342, 1210, 3342, 969, 3339, 3343, 3338, 3338, 3344, 3337, 3338, 3343, 3344, 3339, 3345, 3343, 3340, 3345, 3339, 3343, 3345, 3344, 3337, 3346, 3340, 3340, 3346, 3345, 3344, 3345, 3346, 3337, 3344, 3346, 983, 3347, 3341, 3341, 3347, 3348, 3341, 3348, 3342, 983, 3349, 3347, 3349, 3348, 3347, 984, 3349, 983, 969, 3342, 984, 3350, 3348, 3349, 3342, 3348, 3350, 3342, 3350, 984, 984, 3350, 3349, 969, 3351, 1237, 969, 971, 3351, 1237, 3351, 3352, 1237, 3352, 966, 966, 1222, 1237, 971, 3353, 3351, 971, 3354, 3353, 968, 3354, 971, 966, 3352, 968, 3351, 3353, 3355, 3353, 3354, 3355, 3351, 3355, 3352, 3352, 3356, 968, 968, 3356, 3354, 3355, 3354, 3356, 3352, 3355, 3356, 1255, 1222, 966, 1255, 3357, 1222, 1222, 3357, 3358, 1222, 3358, 1223, 966, 3359, 1255, 1255, 1260, 3357, 1255, 3359, 1275, 966, 3360, 3359, 967, 3360, 966, 967, 1274, 3360, 1260, 3361, 3357, 3357, 3362, 3358, 3357, 3361, 3362, 1260, 3363, 3361, 1229, 3363, 1260, 1223, 3358, 1229, 3362, 3361, 3364, 3364, 3361, 3363, 3358, 3362, 3364, 3358, 3364, 1229, 1229, 3364, 3363, 3359, 3365, 1275, 1275, 3366, 1274, 1275, 3365, 3366, 1274, 3366, 3367, 1274, 3367, 3360, 3366, 3365, 3367, 3360, 3368, 3359, 3359, 3368, 3365, 3367, 3365, 3368, 3360, 3367, 3368, 1220, 3369, 1223, 1220, 1221, 3369, 1223, 3369, 3370, 1223, 3370, 1216, 1221, 3371, 3369, 3369, 3371, 3372, 3369, 3372, 3370, 1221, 3373, 3371, 3371, 3373, 3372, 1226, 3373, 1221, 1216, 3370, 1226, 3372, 3373, 3374, 3370, 3372, 3374, 3370, 3374, 1226, 1226, 3374, 3373, 1195, 3375, 1216, 1216, 3375, 1215, 3375, 3376, 1215, 1215, 3376, 3377, 1215, 3377, 1206, 3375, 3378, 3376, 3378, 3377, 3376, 1206, 3377, 3379, 3379, 3377, 3378, 1206, 3379, 1207, 1207, 3379, 3378, 1207, 3378, 3375, 1195, 1207, 3375, 1217, 3380, 1195, 1217, 3381, 3380, 2189, 3381, 1217, 1195, 3380, 3382, 1195, 3382, 1194, 2189, 3383, 3381, 1194, 3383, 2189, 1194, 3382, 3383, 2189, 1153, 1194, 3381, 3384, 3380, 3380, 3385, 3382, 3380, 3384, 3385, 3381, 3386, 3384, 3383, 3386, 3381, 3384, 3386, 3385, 3382, 3387, 3383, 3383, 3387, 3386, 3385, 3386, 3387, 3382, 3385, 3387, 1194, 1153, 1167, 1153, 3388, 1167, 1153, 1154, 3388, 1167, 3389, 1194, 1194, 3389, 1196, 1167, 3388, 1169, 1167, 1184, 3389, 1154, 3390, 3388, 3388, 3391, 1169, 3388, 3390, 3391, 1154, 3392, 3390, 3390, 3392, 3391, 1155, 3392, 1154, 1169, 3393, 1155, 1169, 3391, 3393, 3391, 3392, 3393, 1155, 3393, 3392, 3389, 3394, 1196, 1184, 3395, 3389, 3389, 3395, 3394, 1196, 3394, 3396, 3395, 3396, 3394, 1196, 3396, 1183, 1183, 3397, 1184, 1184, 3397, 3395, 3397, 3396, 3395, 1183, 3396, 3397, 1540, 1542, 1564, 1542, 3398, 1564, 1542, 3399, 3398, 1543, 3399, 1542, 3399, 3400, 3398, 1543, 3400, 3399, 1564, 3398, 3401, 3398, 3400, 3401, 3402, 3400, 1543, 3402, 3401, 3400, 1564, 3401, 3402, 1530, 3402, 1543, 1562, 1564, 3402, 1562, 3402, 1530, 1530, 3403, 1562, 1562, 3403, 3404, 1530, 3405, 3403, 1530, 1532, 3405, 3404, 3406, 1562, 1562, 3406, 1570, 1532, 3407, 3405, 1532, 3408, 3407, 1533, 3408, 1532, 3409, 3407, 3408, 1533, 3409, 3408, 3405, 3407, 3410, 3410, 3407, 3409, 3411, 3409, 1533, 3411, 3410, 3409, 3405, 3410, 3411, 3403, 3405, 3411, 1520, 3411, 1533, 3403, 3411, 1520, 3412, 3403, 1520, 3413, 3403, 3412, 1520, 3414, 3412, 1520, 1522, 3414, 3413, 3415, 3403, 3403, 3415, 3416, 3403, 3416, 3404, 1522, 3417, 3414, 1522, 3418, 3417, 1523, 3418, 1522, 3418, 3419, 3417, 1523, 3419, 3418, 3414, 3417, 3420, 3417, 3419, 3420, 3421, 3419, 1523, 3421, 3420, 3419, 3414, 3420, 3421, 3412, 3414, 3421, 1505, 3421, 1523, 3412, 3421, 1505, 3413, 3422, 3415, 3423, 3422, 3413, 3413, 3424, 3423, 3423, 3424, 3425, 3413, 3426, 3424, 3412, 3427, 3413, 3413, 3427, 3426, 3422, 3428, 3415, 3415, 3428, 3429, 3415, 3429, 3416, 3429, 3428, 3430, 3416, 3429, 3430, 3422, 3431, 3428, 3430, 3428, 3431, 3416, 3430, 3432, 3432, 3430, 3431, 3432, 3431, 3422, 3423, 3432, 3422, 3404, 3416, 3432, 3404, 3432, 3423, 3423, 1566, 3404, 1566, 3433, 3404, 3404, 3433, 3406, 3434, 1566, 3423, 1566, 1567, 3433, 3434, 2663, 1566, 3434, 3435, 2663, 2663, 3435, 3436, 3435, 3437, 3436, 3096, 2663, 3436, 3437, 3096, 3436, 3433, 3438, 3406, 1567, 3439, 3433, 3433, 3439, 3438, 1567, 3440, 3439, 3439, 3440, 3438, 1570, 3440, 1567, 3406, 3441, 1570, 3406, 3438, 3441, 3438, 3440, 3441, 1570, 3441, 3440, 3423, 3442, 3434, 3434, 3443, 3435, 3434, 3442, 3443, 3423, 3444, 3442, 3425, 3444, 3423, 3445, 3435, 3425, 3446, 3435, 3445, 3425, 3447, 3445, 3435, 3443, 3448, 3435, 3448, 3425, 3425, 3448, 3444, 3446, 3437, 3435, 3446, 3449, 3437, 3446, 3450, 3449, 3425, 3451, 3447, 3424, 3451, 3425, 3445, 3452, 3446, 3446, 3452, 3450, 3442, 3453, 3443, 3443, 3454, 3448, 3443, 3453, 3454, 3448, 3454, 3455, 3454, 3453, 3455, 3448, 3455, 3444, 3444, 3456, 3442, 3442, 3456, 3453, 3455, 3453, 3456, 3444, 3455, 3456, 3445, 3447, 3457, 3445, 3457, 3458, 3447, 3459, 3457, 3447, 3460, 3459, 3451, 3460, 3447, 3457, 3459, 3461, 3460, 3461, 3459, 3451, 3462, 3460, 3462, 3461, 3460, 3457, 3461, 3463, 3463, 3461, 3462, 3463, 3462, 3451, 3458, 3457, 3463, 3424, 3463, 3451, 3458, 3463, 3424, 3458, 3145, 3445, 3445, 3145, 3464, 3464, 3465, 3445, 3445, 3465, 3452, 3465, 3466, 3452, 3452, 3466, 3467, 3452, 3467, 3450, 3465, 3468, 3466, 3468, 3467, 3466, 3450, 3467, 3469, 3469, 3467, 3468, 3470, 3468, 3465, 3470, 3469, 3468, 3450, 3469, 3470, 3464, 3470, 3465, 3449, 3450, 3470, 3449, 3470, 3464, 3458, 3424, 3169, 3169, 3424, 3471, 3424, 3472, 3471, 3424, 3426, 3472, 3169, 3473, 3458, 3458, 3473, 3474, 3458, 3474, 3145, 3145, 3475, 3464, 3145, 3474, 3172, 3145, 3147, 3475, 3474, 3476, 3172, 3172, 3476, 3477, 3172, 3477, 3171, 3169, 3171, 3473, 3474, 3478, 3476, 3476, 3478, 3477, 3473, 3478, 3474, 3171, 3479, 3473, 3171, 3477, 3479, 3477, 3478, 3479, 3473, 3479, 3478, 3464, 3475, 3480, 3464, 3480, 3131, 3131, 3449, 3464, 3147, 3481, 3475, 3147, 3482, 3481, 3153, 3482, 3147, 3131, 3480, 3153, 3475, 3481, 3483, 3481, 3482, 3483, 3475, 3483, 3480, 3480, 3484, 3153, 3153, 3484, 3482, 3483, 3482, 3484, 3480, 3483, 3484, 3485, 3449, 3131, 3131, 3486, 3485, 3131, 3133, 3486, 3485, 3079, 3449, 3449, 3079, 3487, 3437, 3449, 3487, 3079, 3073, 3487, 3073, 3437, 3487, 3485, 3085, 3079, 3488, 3437, 3073, 3488, 3096, 3437, 3488, 3073, 3067, 3488, 3067, 3096, 3096, 3067, 3489, 3067, 3061, 3489, 3090, 3096, 3489, 3061, 3090, 3489, 3490, 3090, 3061, 3490, 3083, 3090, 3490, 3061, 3055, 3490, 3055, 3083, 3083, 3055, 3491, 3055, 3049, 3491, 3077, 3083, 3491, 3049, 3077, 3491, 3492, 3077, 3049, 3492, 3071, 3077, 3492, 3049, 3043, 3492, 3043, 3071, 3071, 3043, 3493, 3043, 3037, 3493, 3065, 3071, 3493, 3037, 3065, 3493, 3494, 3065, 3037, 3494, 3059, 3065, 3494, 3037, 3031, 3494, 3031, 3059, 3059, 3031, 3495, 3031, 3025, 3495, 3053, 3059, 3495, 3025, 3053, 3495, 3496, 3053, 3025, 3496, 3047, 3053, 3496, 3025, 3019, 3496, 3019, 3047, 3047, 3019, 3497, 3019, 3013, 3497, 3041, 3047, 3497, 3013, 3041, 3497, 3498, 3041, 3013, 3498, 3035, 3041, 3498, 3013, 3007, 3498, 3007, 3035, 3035, 3007, 3499, 3007, 3001, 3499, 3029, 3035, 3499, 3001, 3029, 3499, 3500, 3029, 3001, 3500, 3023, 3029, 3500, 3001, 2995, 3500, 2995, 3023, 3023, 2995, 3501, 2995, 2989, 3501, 3017, 3023, 3501, 2989, 3017, 3501, 3502, 3017, 2989, 3502, 3011, 3017, 3502, 2989, 2983, 3502, 2983, 3011, 3011, 2983, 3503, 2983, 2977, 3503, 3005, 3011, 3503, 2977, 3005, 3503, 3504, 3005, 2977, 3504, 2999, 3005, 3504, 2977, 2971, 3504, 2971, 2999, 2999, 2971, 3505, 2971, 2965, 3505, 2993, 2999, 3505, 2965, 2993, 3505, 3506, 2993, 2965, 3506, 2987, 2993, 3506, 2965, 2959, 3506, 2959, 2987, 2987, 2959, 3507, 2959, 2953, 3507, 2981, 2987, 3507, 2953, 2981, 3507, 3508, 2981, 2953, 3508, 2975, 2981, 3508, 2953, 2947, 3508, 2947, 2975, 2975, 2947, 3509, 2947, 2941, 3509, 2969, 2975, 3509, 2941, 2969, 3509, 3510, 2969, 2941, 3510, 2963, 2969, 3510, 2941, 2935, 3510, 2935, 2963, 2963, 2935, 3511, 2935, 2929, 3511, 2957, 2963, 3511, 2929, 2957, 3511, 3512, 2957, 2929, 3512, 2951, 2957, 3512, 2929, 2923, 3512, 2923, 2951, 2951, 2923, 3513, 2923, 2917, 3513, 2945, 2951, 3513, 2917, 2945, 3513, 3514, 2945, 2917, 3514, 2939, 2945, 3514, 2917, 2911, 3514, 2911, 2939, 2939, 2911, 3515, 2911, 2905, 3515, 2933, 2939, 3515, 2905, 2933, 3515, 3516, 2933, 2905, 3516, 2927, 2933, 3516, 2905, 2899, 3516, 2899, 2927, 2927, 2899, 3517, 2899, 2893, 3517, 2921, 2927, 3517, 2893, 2921, 3517, 3518, 2921, 2893, 3518, 2915, 2921, 3518, 2893, 2887, 3518, 2887, 2915, 2915, 2887, 3519, 2887, 2881, 3519, 2909, 2915, 3519, 2881, 2909, 3519, 3520, 2909, 2881, 3520, 2903, 2909, 3520, 2881, 2875, 3520, 2875, 2903, 2903, 2875, 3521, 2875, 2869, 3521, 2897, 2903, 3521, 2869, 2897, 3521, 3522, 2897, 2869, 3522, 2891, 2897, 3522, 2869, 2867, 3522, 2867, 2891, 2891, 2867, 3523, 2867, 2861, 3523, 2885, 2891, 3523, 2861, 2885, 3523, 3524, 2885, 2861, 3524, 2879, 2885, 3524, 2861, 2855, 3524, 2855, 2879, 2879, 2855, 3525, 2855, 2849, 3525, 2873, 2879, 3525, 2849, 2873, 3525, 3526, 2873, 2849, 3526, 2865, 2873, 3526, 2849, 2843, 3526, 2843, 2865, 2865, 2843, 3527, 2843, 2837, 3527, 2859, 2865, 3527, 2837, 2859, 3527, 3528, 2859, 2837, 3528, 2853, 2859, 3528, 2837, 2831, 3528, 2831, 2853, 2853, 2831, 3529, 2831, 2825, 3529, 2847, 2853, 3529, 2825, 2847, 3529, 3530, 2847, 2825, 3530, 2841, 2847, 3530, 2825, 2823, 3530, 2823, 2841, 2841, 2823, 3531, 2823, 2817, 3531, 2835, 2841, 3531, 2817, 2835, 3531, 3532, 2835, 2817, 3532, 2829, 2835, 3532, 2817, 2810, 3532, 2810, 2829, 2829, 2810, 3533, 2810, 2808, 3533, 2821, 2829, 3533, 2808, 2821, 3533, 3534, 2821, 2808, 3534, 2814, 2821, 3534, 2808, 2806, 3534, 2806, 2814, 934, 3535, 893, 893, 3535, 924, 934, 936, 3535, 3535, 3536, 924, 936, 3537, 3535, 3535, 3537, 3536, 936, 3538, 3537, 3538, 3536, 3537, 923, 3538, 936, 924, 3536, 3539, 3539, 3536, 3538, 924, 3539, 923, 923, 3539, 3538, 354, 3540, 321, 321, 3540, 344, 354, 356, 3540, 3540, 3541, 344, 356, 3542, 3540, 3540, 3542, 3541, 356, 3543, 3542, 3543, 3541, 3542, 343, 3543, 356, 344, 3541, 3544, 3544, 3541, 3543, 344, 3544, 343, 343, 3544, 3543, 3485, 3545, 3085, 3485, 3486, 3545, 3085, 3545, 3546, 3085, 3546, 3092, 3092, 3546, 3133, 3486, 3547, 3545, 3545, 3548, 3546, 3545, 3547, 3548, 3546, 3548, 3549, 3546, 3549, 3133, 3548, 3547, 3549, 3133, 3550, 3486, 3486, 3550, 3547, 3549, 3547, 3550, 3133, 3549, 3550, 3471, 3551, 3169, 3169, 3551, 3186, 3551, 3552, 3186, 3186, 3552, 3553, 3186, 3553, 3185, 3551, 3554, 3552, 3554, 3553, 3552, 3185, 3553, 3555, 3555, 3553, 3554, 3556, 3554, 3551, 3556, 3555, 3554, 3185, 3555, 3556, 3471, 3556, 3551, 3184, 3185, 3556, 3184, 3556, 3471, 3412, 3184, 3471, 3471, 3557, 3412, 3471, 3472, 3557, 1505, 3184, 3412, 3412, 3557, 3427, 3472, 3558, 3557, 3557, 3559, 3427, 3557, 3558, 3559, 3427, 3559, 3560, 3558, 3560, 3559, 3427, 3560, 3426, 3426, 3561, 3472, 3472, 3561, 3558, 3561, 3560, 3558, 3426, 3560, 3561, 1505, 3562, 3184, 1505, 3563, 3562, 1499, 3563, 1505, 3184, 3562, 3564, 3184, 3564, 1500, 1500, 3565, 1499, 1499, 3565, 3563, 1500, 3564, 3565, 3563, 3566, 3562, 3562, 3567, 3564, 3562, 3566, 3567, 3564, 3567, 3568, 3564, 3568, 3565, 3567, 3566, 3568, 3565, 3569, 3563, 3563, 3569, 3566, 3568, 3566, 3569, 3565, 3568, 3569, 496, 497, 3570, 496, 3570, 499, 499, 3570, 3571, 499, 3571, 492, 497, 3572, 3570, 3570, 3572, 3573, 3570, 3573, 3571, 497, 3574, 3572, 3572, 3574, 3573, 501, 3574, 497, 492, 3571, 501, 3573, 3574, 3575, 3571, 3573, 3575, 3571, 3575, 501, 501, 3575, 3574, 480, 3576, 492, 492, 3576, 491, 480, 490, 3576, 3576, 3577, 491, 490, 3578, 3576, 3576, 3578, 3577, 491, 3577, 3579, 3578, 3579, 3577, 491, 3579, 489, 489, 3580, 490, 490, 3580, 3578, 3580, 3579, 3578, 489, 3579, 3580]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, -1, 0), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (-1, 0, 0), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, 0, 1), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010647004, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.010644005, 0, -0.9999434), (-1, 0, 0), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010647004, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010647004, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010647004, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.056477994, 0, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010647004, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010647004, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (-0.010644005, 0, -0.9999434), (-0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.010644005, -0.9999434), (0, 0.010647004, -0.9999434), (0, 0.010647004, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (0, 0, 1), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, 0, 1), (0, -1, 0), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 0.010644005, -0.9999434), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.010644005, 0, -0.9999434), (1, 0, 0), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (1, 0, 0), (0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, 0.010644005, -0.9999434), (0, 0.010644005, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.010647004, 0, -0.9999434), (0.010647004, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (1, 0, 0), (1, 0, 0), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, -0.010644005, -0.9999434), (0.010644005, 0, -0.9999434), (0.010647004, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.010647004, 0, -0.9999434), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056464978, 0, -0.99840456), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -0.056464978, -0.99840456), (0, -1, 0), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056477994, 0, -0.99840385), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0, 0.056477994, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056478992, -0.0000029999997, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056464978, 0, -0.99840456), (0.056464978, 0, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0.056477994, 0, -0.99840385), (0.05646298, 0.0000029999994, -0.9984047), (0.056477994, 0, -0.99840385), (0.05646298, 0.0000029999994, -0.9984047), (0.056477994, 0, -0.99840385), (0.056475997, 0.000003, -0.99840397), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (1, 0, 0), (0.056477994, 0, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (-0.0000029999994, 0.05646298, -0.9984047), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.00091999973, -0.99999964), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.00093899964, -0.99999964), (-0.00093899964, 0, -0.99999964), (0, 0.00091999973, -0.99999964), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.00092299964, -0.000002999999, -0.99999964), (-0.00092299964, -0.000002999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-0.00091999973, 0.000002999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0.000002999999, -0.99999964), (-0.00091999973, -0.000002999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-1, 0, 0), (-1, 0, 0), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0.000003999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (0, -0.00093899964, -0.99999964), (-0.00091999973, 0.000003999999, -0.99999964), (-0.00091999973, -0.000003999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00091899966, -0.000003999999, -0.99999964), (-0.00091999973, 0, -0.99999964), (-0.00091999973, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (0, -0.00093899964, -0.99999964), (0.000002999999, -0.00092299964, -0.99999964), (0.000002999999, -0.00092299964, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00092399964, 0.000003999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-1, 0, 0), (-0.00093899964, 0, -0.99999964), (0, -0.00093899964, -0.99999964), (0.000003999999, -0.00092399964, -0.99999964), (0, -0.00093899964, -0.99999964), (0.000003999999, -0.00092299964, -0.99999964), (0, -0.00091999973, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (-0.000003999999, -0.00091999973, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (-0.000003999999, -0.00091999973, -0.99999964), (0.000003999999, -0.00091999973, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.016506994, -0.99986374), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016506994, -0.99986374), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.0000049999994, -0.016501999, -0.99986386), (0.016501999, -0.0000049999994, -0.99986386), (0, -0.016421001, -0.9998652), (0.016421001, 0, -0.9998652), (0.016506994, 0, -0.99986374), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016506994, 0, -0.99986374), (0.016506994, 0.0000049999985, -0.99986374), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016506994, 0.0000049999985, -0.99986374), (0.016506994, -0.0000049999985, -0.99986374), (0.016421001, 0, -0.9998652), (0.016506994, 0, -0.99986374), (1, 0, 0), (1, 0, 0), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (0.016421001, 0, -0.9998652), (0, 0.016421001, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016506994, 0, -0.99986374), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0, 0.016421001, -0.9998652), (0.0000049999994, 0.016501999, -0.99986386), (0.0000049999994, 0.016501999, -0.99986386), (0.016506994, 0, -0.99986374), (0.016421001, 0, -0.9998652), (0.016506994, 0, -0.99986374), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (-1, 0, 0), (0.016506994, 0, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (-0.0000049999985, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.00093899964, 0, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (-0.000003999999, -0.00092399964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00091999973, -0.99999964), (0.000003999999, -0.00091899966, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (-0.000002999999, -0.00091999973, -0.99999964), (0, -0.00091999973, -0.99999964), (0, -0.00091999973, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (-0.0000029999994, 0.05646298, -0.9984047), (0, 0.056477994, -0.99840385), (0.0000029999997, 0.056478992, -0.99840385), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 1, 0), (0, 0.056464978, -0.99840456), (0, 0.056464978, -0.99840456), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056477994, -0.99840385), (0, 0.056464978, -0.99840456), (0, 0.056477994, -0.99840385), (0, 0.056464978, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.000003, 0.056475997, -0.99840397), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-1, 0, 0), (-1, 0, 0), (-0.056464978, 0, -0.99840456), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-1, 0, 0), (-1, 0, 0), (-0.056478992, 0.0000029999997, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.05646298, -0.0000029999994, -0.9984047), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.05646298, -0.0000029999994, -0.9984047), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.056477994, 0, -0.99840385), (0, -0.056477994, -0.99840385), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.000002999999, -0.00091999973, -0.99999964), (0.000002999999, -0.00091999973, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.00093899964, -0.99999964), (0, -0.00091999973, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.00091999973, -0.99999964), (0, -0.00091999973, -0.99999964), (0, -0.00091999973, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (0, -1, 0), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -0.00093899964, -0.99999964), (0, -1, 0), (1, 0, 0), (-0.000002999999, -0.00092299964, -0.99999964), (0.00092299964, 0.000002999999, -0.99999964), (0, -0.00093899964, -0.99999964), (0.00093899964, 0, -0.99999964), (-0.000003999999, -0.00092399964, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00092299964, 0.000003999999, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00091999973, -0.000002999999, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00091999973, -0.000003999999, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (1, 0, 0), (1, 0, 0), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00091999973, -0.000003999999, -0.99999964), (0.00091999973, 0.000003999999, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (1, 0, 0), (1, 0, 0), (0.00091899966, 0.000003999999, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.00093899964, 0, -0.99999964), (0.00092399964, -0.000003999999, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.00093899964, 0, -0.99999964), (0, 0.00093899964, -0.99999964), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.0000049999985, 0.016506994, -0.99986374), (0.0000049999985, 0.016506994, -0.99986374), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.016421001, -0.9998652), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.016506994, -0.99986374), (0, 0.016506994, -0.99986374), (0, 0.016421001, -0.9998652), (0, 0.016421001, -0.9998652), (0, 1, 0), (-1, 0, 0), (0, 0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (0, 0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (0, 0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (-1, 0, 0), (-1, 0, 0), (-0.016501999, 0.0000049999994, -0.99986386), (-0.016501999, 0.0000049999994, -0.99986386), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (-0.016506994, -0.0000049999985, -0.99986374), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (1, 0, 0), (1, 0, 0), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (1, 0, 0), (1, 0, 0), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016421001, 0, -0.9998652), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.016506994, 0, -0.99986374), (0, -0.016506994, -0.99986374), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0.016421001, 0, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016506994, -0.99986374), (-0.0000049999985, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00092299964, -0.000003999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00091999973, -0.99999964), (-0.000002999999, 0.00091999973, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (0.056477994, 0, -0.99840385), (1, 0, 0), (1, 0, 0), (0.056477994, 0, -0.99840385), (0, -0.056477994, -0.99840385), (1, 0, 0), (1, 0, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0.000003, -0.056475997, -0.99840397), (0, -0.056477994, -0.99840385), (0, 1, 0), (0, 1, 0), (0, -0.056477994, -0.99840385), (0, -0.056464978, -0.99840456), (0, 1, 0), (0, 0.00091999973, -0.99999964), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, 0.00093899964, -0.99999964), (0.000002999999, 0.00091999973, -0.99999964), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0.000002999999, 0.00091999973, -0.99999964), (0, 0.00093899964, -0.99999964), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00091999973, -0.99999964), (0, 0.00091999973, -0.99999964), (0, 0.00093899964, -0.99999964), (0.000003999999, 0.00092399964, -0.99999964), (-0.00092399964, -0.000003999999, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-0.00093899964, 0, -0.99999964), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (0.0000049999985, -0.016506994, -0.99986374), (0.0000049999985, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016506994, -0.99986374), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (0.016506994, 0, -0.99986374), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 1, 0), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -0.016506994, -0.99986374), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (-1, 0, 0), (-1, 0, 0), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (-1, 0, 0), (0, 1, 0), (0, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (0, -0.016506994, -0.99986374), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016421001, 0, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016421001, 0, -0.9998652), (-0.016506994, 0.0000049999985, -0.99986374), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-0.016506994, 0, -0.99986374), (-0.016506994, 0, -0.99986374), (-0.016506994, -0.0000049999985, -0.99986374), (-0.016421001, 0, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-0.016421001, 0, -0.9998652), (-1, 0, 0), (-0.016421001, 0, -0.9998652), (-1, 0, 0), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.016506994, -0.99986374), (-0.0000049999994, -0.016501999, -0.99986386), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 0.00093899964, -0.99999964), (0, 1, 0), (0, 0.00093899964, -0.99999964), (-1, 0, 0), (-1, 0, 0), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (-1, 0, 0), (-1, 0, 0), (0, 0.00093899964, -0.99999964), (0.000003999999, 0.00091999973, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (-1, 0, 0), (-1, 0, 0), (0, 0.00093899964, -0.99999964), (0, 0.00091999973, -0.99999964), (-0.000003999999, 0.00092399964, -0.99999964), (0, 0.00093899964, -0.99999964), (-0.00093899964, 0, -0.99999964), (0, 0.00093899964, -0.99999964), (-0.000003999999, 0.00092299964, -0.99999964), (0, 0.00093899964, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0, 0.00093899964, -0.99999964), (-0.000003999999, 0.00091999973, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00093899964, 0, -0.99999964), (0.00091999973, 0.000002999999, -0.99999964), (-0.000003999999, 0.00091899966, -0.99999964), (0, 0.00093899964, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00091999973, 0, -0.99999964), (0.00091999973, -0.000002999999, -0.99999964), (0.00093899964, 0, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0.00093899964, 0, -0.99999964), (1, 0, 0), (0.00093899964, 0, -0.99999964), (1, 0, 0), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.00091999973, -0.99999964), (-0.000002999999, 0.00092299964, -0.99999964), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -0.056477994, -0.99840385), (1, 0, 0), (1, 0, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (1, 0, 0), (1, 0, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (1, 0, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -0.056464978, -0.99840456), (0, -0.056477994, -0.99840385), (0, -0.056464978, -0.99840456), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (-0.056475997, -0.000003, -0.99840397), (-0.056464978, 0, -0.99840456), (0, -0.056477994, -0.99840385), (0.0000029999994, -0.05646298, -0.9984047), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056464978, 0, -0.99840456), (0.0000029999994, -0.05646298, -0.9984047), (0, -0.056477994, -0.99840385), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056464978, 0, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.0000029999997, -0.056478992, -0.99840385), (0, -0.056464978, -0.99840456), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (-0.056477994, 0, -0.99840385), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (-0.056477994, 0, -0.99840385), (-1, 0, 0), (-0.056477994, 0, -0.99840385), (-1, 0, 0), (-1, 0, 0), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010647004, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010647004, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -1, 0), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010647004, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010644005, -0.9999434), (0, -0.010647004, -0.9999434), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.010647004, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0.010644005, 0, -0.9999434), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.056477994, 0, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, -0.056464978, -0.99840456), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -0.056477994, -0.99840385), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.00093899964, 0, -0.99999964), (-0.000002999999, 0.00092299964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0.000003999999, 0.00091999973, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 0.00093899964, -0.99999964), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.016421001, 0, -0.9998652), (-0.0000049999994, -0.016501999, -0.99986386), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016421001, -0.9998652), (0, -0.016506994, -0.99986374), (0, -0.016506994, -0.99986374), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.074999996, 0.099999994, 0.2857211), (0.099999994, 0.099999994, 0.2857211), (0.099999994, 0.074999996, 0.2857211), (0.074999996, 0.074999996, 0.2857211), (0.049999997, 0.074999996, 0.2857211), (0.074999996, 0.049999997, 0.2857211), (0.049999997, 0.099999994, 0.2857211), (0.099999994, 0.049999997, 0.2857211), (0.024999999, 0.099999994, 0.2857211), (0.099999994, 0.024999999, 0.2857211), (0.024999999, 0.074999996, 0.2857211), (0, 0.074999996, 0.2857211), (0.024999999, 0.049999997, 0.2857211), (0, 0.099999994, 0.2857211), (-0.024999999, 0.099999994, 0.2857211), (0.049999997, 0.049999997, 0.2857211), (0.049999997, 0.024999999, 0.2857211), (0.074999996, 0.024999999, 0.2857211), (0.074999996, 0, 0.2857211), (0.099999994, 0, 0.2857211), (0.099999994, -0.024999999, 0.2857211), (-0.024999999, 0.074999996, 0.2857211), (-0.049999997, 0.074999996, 0.2857211), (-0.024999999, 0.049999997, 0.2857211), (-0.049999997, 0.099999994, 0.2857211), (-0.074999996, 0.099999994, 0.2857211), (0, 0.049999997, 0.2857211), (0, 0.024999999, 0.2857211), (0.024999999, 0.024999999, 0.2857211), (0.024999999, 0, 0.2857211), (0.049999997, 0, 0.2857211), (0.049999997, -0.024999999, 0.2857211), (0.074999996, -0.024999999, 0.2857211), (0.074999996, -0.049999997, 0.2857211), (0.099999994, -0.049999997, 0.2857211), (0.099999994, -0.074999996, 0.2857211), (0.074999996, -0.074999996, 0.2857211), (0.049999997, -0.074999996, 0.2857211), (0.074999996, -0.099999994, 0.2857211), (0.099999994, -0.099999994, 0.2857211), (0.049999997, -0.099999994, 0.2857211), (0.024999999, -0.099999994, 0.2857211), (0.049999997, -0.049999997, 0.2857211), (0.024999999, -0.049999997, 0.2857211), (0.024999999, -0.074999996, 0.2857211), (0, -0.074999996, 0.2857211), (0, -0.099999994, 0.2857211), (-0.024999999, -0.099999994, 0.2857211), (0.024999999, -0.024999999, 0.2857211), (0, -0.024999999, 0.2857211), (0, -0.049999997, 0.2857211), (-0.024999999, -0.049999997, 0.2857211), (-0.024999999, -0.074999996, 0.2857211), (-0.049999997, -0.074999996, 0.2857211), (-0.049999997, -0.099999994, 0.2857211), (-0.074999996, -0.099999994, 0.2857211), (0, 0, 0.2857211), (-0.024999999, 0, 0.2857211), (-0.024999999, -0.024999999, 0.2857211), (-0.049999997, -0.024999999, 0.2857211), (-0.049999997, -0.049999997, 0.2857211), (-0.074999996, -0.049999997, 0.2857211), (-0.074999996, -0.074999996, 0.2857211), (-0.099999994, -0.074999996, 0.2857211), (-0.099999994, -0.099999994, 0.2857211), (-0.099999994, -0.049999997, 0.2857211), (-0.099999994, -0.024999999, 0.2857211), (-0.074999996, -0.024999999, 0.2857211), (-0.074999996, 0, 0.2857211), (-0.099999994, 0, 0.2857211), (-0.099999994, 0.024999999, 0.2857211), (-0.049999997, 0, 0.2857211), (-0.049999997, 0.024999999, 0.2857211), (-0.074999996, 0.024999999, 0.2857211), (-0.074999996, 0.049999997, 0.2857211), (-0.099999994, 0.049999997, 0.2857211), (-0.099999994, 0.074999996, 0.2857211), (-0.024999999, 0.024999999, 0.2857211), (-0.049999997, 0.049999997, 0.2857211), (-0.074999996, 0.074999996, 0.2857211), (-0.099999994, 0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.2732211), (-0.099999994, -0.099999994, 0.2857211), (-0.074999996, -0.099999994, 0.2857211), (-0.074999996, -0.099999994, 0.2732211), (-0.074999996, -0.099999994, 0.26072112), (-0.049999997, -0.099999994, 0.2732211), (-0.099999994, -0.099999994, 0.26072112), (-0.049999997, -0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.2482211), (-0.024999999, -0.099999994, 0.2857211), (-0.074999996, -0.099999994, 0.2482211), (-0.074999996, -0.099999994, 0.23572111), (-0.049999997, -0.099999994, 0.2482211), (-0.099999994, -0.099999994, 0.23572111), (-0.099999994, -0.099999994, 0.22322111), (-0.049999997, -0.099999994, 0.26072112), (-0.024999999, -0.099999994, 0.26072112), (-0.024999999, -0.099999994, 0.2732211), (0, -0.099999994, 0.2732211), (0, -0.099999994, 0.2857211), (0.024999999, -0.099999994, 0.2857211), (-0.074999996, -0.099999994, 0.22322111), (-0.074999996, -0.099999994, 0.2107211), (-0.049999997, -0.099999994, 0.22322111), (-0.099999994, -0.099999994, 0.2107211), (-0.099999994, -0.099999994, 0.1982211), (-0.049999997, -0.099999994, 0.23572111), (-0.024999999, -0.099999994, 0.23572111), (-0.024999999, -0.099999994, 0.2482211), (0, -0.099999994, 0.2482211), (0, -0.099999994, 0.26072112), (0.024999999, -0.099999994, 0.26072112), (0.024999999, -0.099999994, 0.2732211), (0.049999997, -0.099999994, 0.2732211), (0.049999997, -0.099999994, 0.2857211), (0.074999996, -0.099999994, 0.2857211), (0.074999996, -0.099999994, 0.2732211), (0.074999996, -0.099999994, 0.26072112), (0.099999994, -0.099999994, 0.2732211), (0.099999994, -0.099999994, 0.2857211), (0.099999994, -0.099999994, 0.26072112), (0.099999994, -0.099999994, 0.2482211), (0.049999997, -0.099999994, 0.26072112), (0.049999997, -0.099999994, 0.2482211), (0.074999996, -0.099999994, 0.2482211), (0.074999996, -0.099999994, 0.23572111), (0.099999994, -0.099999994, 0.23572111), (0.099999994, -0.099999994, 0.22322111), (0.024999999, -0.099999994, 0.2482211), (0.024999999, -0.099999994, 0.23572111), (0.049999997, -0.099999994, 0.23572111), (0.049999997, -0.099999994, 0.22322111), (0.074999996, -0.099999994, 0.22322111), (0.074999996, -0.099999994, 0.2107211), (0.099999994, -0.099999994, 0.2107211), (0.099999994, -0.099999994, 0.1982211), (0, -0.099999994, 0.23572111), (0, -0.099999994, 0.22322111), (0.024999999, -0.099999994, 0.22322111), (0.024999999, -0.099999994, 0.2107211), (0.049999997, -0.099999994, 0.2107211), (0.049999997, -0.099999994, 0.1982211), (0.074999996, -0.099999994, 0.1982211), (0.074999996, -0.099999994, 0.18572111), (0.099999994, -0.099999994, 0.18572111), (0.049999997, -0.099999994, 0.18572111), (0.024999999, -0.099999994, 0.18572111), (0.024999999, -0.099999994, 0.1982211), (0, -0.099999994, 0.1982211), (0, -0.099999994, 0.18572111), (-0.024999999, -0.099999994, 0.18572111), (0, -0.099999994, 0.2107211), (-0.024999999, -0.099999994, 0.2107211), (-0.024999999, -0.099999994, 0.1982211), (-0.049999997, -0.099999994, 0.1982211), (-0.049999997, -0.099999994, 0.18572111), (-0.074999996, -0.099999994, 0.18572111), (-0.024999999, -0.099999994, 0.22322111), (-0.049999997, -0.099999994, 0.2107211), (-0.074999996, -0.099999994, 0.1982211), (-0.099999994, -0.099999994, 0.18572111), (-0.099999994, 0.099999994, 0.2732211), (-0.099999994, 0.099999994, 0.2857211), (-0.099999994, 0.074999996, 0.2857211), (-0.099999994, 0.074999996, 0.2732211), (-0.099999994, 0.074999996, 0.26072112), (-0.099999994, 0.049999997, 0.2732211), (-0.099999994, 0.099999994, 0.26072112), (-0.099999994, 0.049999997, 0.2857211), (-0.099999994, 0.099999994, 0.2482211), (-0.099999994, 0.024999999, 0.2857211), (-0.099999994, 0.074999996, 0.2482211), (-0.099999994, 0.074999996, 0.23572111), (-0.099999994, 0.049999997, 0.2482211), (-0.099999994, 0.099999994, 0.23572111), (-0.099999994, 0.099999994, 0.22322111), (-0.099999994, 0.049999997, 0.26072112), (-0.099999994, 0.024999999, 0.26072112), (-0.099999994, 0.024999999, 0.2732211), (-0.099999994, 0, 0.2732211), (-0.099999994, 0, 0.2857211), (-0.099999994, -0.024999999, 0.2857211), (-0.099999994, 0.074999996, 0.22322111), (-0.099999994, 0.074999996, 0.2107211), (-0.099999994, 0.049999997, 0.22322111), (-0.099999994, 0.099999994, 0.2107211), (-0.099999994, 0.099999994, 0.1982211), (-0.099999994, 0.049999997, 0.23572111), (-0.099999994, 0.024999999, 0.23572111), (-0.099999994, 0.024999999, 0.2482211), (-0.099999994, 0, 0.2482211), (-0.099999994, 0, 0.26072112), (-0.099999994, -0.024999999, 0.26072112), (-0.099999994, -0.024999999, 0.2732211), (-0.099999994, -0.049999997, 0.2732211), (-0.099999994, -0.049999997, 0.2857211), (-0.099999994, -0.074999996, 0.2857211), (-0.099999994, -0.074999996, 0.2732211), (-0.099999994, -0.074999996, 0.26072112), (-0.099999994, -0.099999994, 0.2732211), (-0.099999994, -0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.26072112), (-0.099999994, -0.099999994, 0.2482211), (-0.099999994, -0.049999997, 0.26072112), (-0.099999994, -0.049999997, 0.2482211), (-0.099999994, -0.074999996, 0.2482211), (-0.099999994, -0.074999996, 0.23572111), (-0.099999994, -0.099999994, 0.23572111), (-0.099999994, -0.099999994, 0.22322111), (-0.099999994, -0.024999999, 0.2482211), (-0.099999994, -0.024999999, 0.23572111), (-0.099999994, -0.049999997, 0.23572111), (-0.099999994, -0.049999997, 0.22322111), (-0.099999994, -0.074999996, 0.22322111), (-0.099999994, -0.074999996, 0.2107211), (-0.099999994, -0.099999994, 0.2107211), (-0.099999994, -0.099999994, 0.1982211), (-0.099999994, 0, 0.23572111), (-0.099999994, 0, 0.22322111), (-0.099999994, -0.024999999, 0.22322111), (-0.099999994, -0.024999999, 0.2107211), (-0.099999994, -0.049999997, 0.2107211), (-0.099999994, -0.049999997, 0.1982211), (-0.099999994, -0.074999996, 0.1982211), (-0.099999994, -0.074999996, 0.18572111), (-0.099999994, -0.099999994, 0.18572111), (-0.099999994, -0.049999997, 0.18572111), (-0.099999994, -0.024999999, 0.18572111), (-0.099999994, 0.024999999, 0.22322111), (-0.099999994, 0.024999999, 0.2107211), (-0.099999994, 0, 0.2107211), (-0.099999994, 0, 0.1982211), (-0.099999994, -0.024999999, 0.1982211), (-0.099999994, 0.049999997, 0.2107211), (-0.099999994, 0.049999997, 0.1982211), (-0.099999994, 0.024999999, 0.1982211), (-0.099999994, 0.024999999, 0.18572111), (-0.099999994, 0, 0.18572111), (-0.09651226, 0, 0.18568397), (-0.09651226, -0.024128074, 0.18568397), (-0.09651226, 0.024128074, 0.18568397), (-0.09651226, 0.04825611, 0.18568397), (-0.09302452, 0.02325611, 0.18564685), (-0.09651226, 0, 0.18568397), (-0.099999994, 0.074999996, 0.1982211), (-0.099999994, 0.074999996, 0.18572111), (-0.099999994, 0.099999994, 0.18572111), (-0.09651226, 0.09651226, 0.18568397), (-0.099999994, 0.049999997, 0.18572111), (-0.09651226, 0.072384186, 0.18568397), (-0.09302452, 0.06976837, 0.18564685), (-0.09302452, 0.09302452, 0.18564685), (-0.08953678, 0.08953678, 0.18560971), (-0.09302452, 0.04651226, 0.18564685), (-0.08953678, 0.04476837, 0.18560971), (-0.08953678, 0.0671526, 0.18560971), (-0.086049005, 0.06453678, 0.18557258), (-0.086049005, 0.086049005, 0.18557258), (-0.0825613, 0.0825613, 0.18553546), (-0.0825613, 0.061920967, 0.18553546), (-0.079073526, 0.05930515, 0.18549833), (-0.0825613, 0.04128063, 0.18553546), (-0.079073526, 0.079073526, 0.18549833), (-0.07558578, 0.07558578, 0.18546121), (-0.086049005, 0.04302452, 0.18557258), (-0.086049005, 0.02151226, 0.18557258), (-0.08953678, 0.022384185, 0.18560971), (-0.08953678, 0, 0.18560971), (-0.09302452, 0, 0.18564685), (-0.09302452, -0.02325611, 0.18564685), (-0.09651226, -0.024128074, 0.18568397), (-0.09651226, -0.04825611, 0.18568397), (-0.099999994, -0.024999999, 0.18572111), (-0.099999994, -0.049999997, 0.18572111), (-0.099999994, -0.074999996, 0.18572111), (-0.09651226, -0.072384186, 0.18568397), (-0.09302452, -0.06976837, 0.18564685), (-0.09651226, -0.09651226, 0.18568397), (-0.099999994, -0.099999994, 0.18572111), (-0.09302452, -0.09302452, 0.18564685), (-0.08953678, -0.089536764, 0.18560971), (-0.09302452, -0.04651226, 0.18564685), (-0.08953678, -0.04476837, 0.18560971), (-0.08953678, -0.067152575, 0.18560971), (-0.086049005, -0.06453676, 0.18557258), (-0.086049005, -0.08604902, 0.18557258), (-0.0825613, -0.082561284, 0.18553546), (-0.08953678, -0.022384185, 0.18560971), (-0.086049005, -0.02151226, 0.18557258), (-0.086049005, -0.04302452, 0.18557258), (-0.0825613, -0.04128063, 0.18553546), (-0.0825613, -0.061920967, 0.18553546), (-0.079073526, -0.05930515, 0.18549833), (-0.079073526, -0.07907354, 0.18549833), (-0.07558578, -0.07558578, 0.18546121), (-0.086049005, 0, 0.18557258), (-0.0825613, 0, 0.18553546), (-0.0825613, -0.020640334, 0.18553546), (-0.079073526, -0.01976837, 0.18549833), (-0.079073526, -0.03953678, 0.18549834), (-0.07558578, -0.03779289, 0.18546121), (-0.07558578, -0.056689337, 0.18546121), (-0.07209805, -0.054073542, 0.18542407), (-0.07209805, -0.07209805, 0.18542407), (-0.0825613, 0.020640334, 0.18553546), (-0.079073526, 0.01976837, 0.18549833), (-0.079073526, 0, 0.18549833), (-0.07558578, 0, 0.18546121), (-0.07558578, -0.018896446, 0.18546121), (-0.07209805, -0.018024521, 0.18542407), (-0.07209805, -0.07209805, 0.15744121), (-0.07209805, -0.054073542, 0.1574412), (-0.07009807, -0.07209805, 0.1594412), (-0.079073526, 0.03953678, 0.18549833), (-0.07558578, 0.03779289, 0.18546121), (-0.07209805, -0.036049042, 0.18542407), (-0.07558578, 0.018896446, 0.18546121), (-0.07209805, 0.018024521, 0.18542407), (-0.07558578, 0.056689337, 0.18546121), (-0.07209805, 0.054073524, 0.18542407), (-0.07209805, 0.07209805, 0.18542407), (-0.07209805, -0.036049042, 0.15744121), (-0.07209805, -0.018024521, 0.1574412), (-0.07209805, -0.03804901, 0.1594412), (-0.07209805, 0, 0.18542407), (-0.07209805, 0.036049042, 0.18542407), (-0.07209805, -0.03804901, 0.18342407), (-0.07209805, 0, 0.15744121), (-0.07209805, 0.018024521, 0.1574412), (-0.07209805, -0.018024521, 0.12945834), (-0.07209805, 0, 0.12945834), (-0.07209805, -0.020024529, 0.13145834), (-0.07209805, 0.036049042, 0.15744121), (-0.07209805, 0.054073524, 0.1574412), (-0.07209805, 0.018024521, 0.12945834), (-0.07209805, 0.036049042, 0.12945834), (-0.07209805, 0, 0.10147546), (-0.07209805, 0.018024521, 0.10147546), (-0.07209805, -0.0020000075, 0.103475474), (-0.07209805, 0.034049034, 0.18342407), (-0.07209805, 0.020024529, 0.18342407), (-0.07209805, 0.034049034, 0.1594412), (-0.07209805, 0.05607353, 0.18342407), (-0.07209805, 0.07009807, 0.18342407), (-0.07075756, 0.034049034, 0.18342407), (-0.07075756, 0.034049034, 0.1594412), (-0.07075756, 0.020024529, 0.18342407), (-0.07075756, 0.020024529, 0.1594412), (-0.07209805, 0.020024529, 0.1594412), (-0.07209805, 0.052073553, 0.15544121), (-0.07209805, 0.03804901, 0.15544121), (-0.07209805, 0.052073553, 0.13145834), (-0.07209805, 0.054073524, 0.12945834), (-0.07209805, 0.07209805, 0.15744121), (-0.07209805, 0.07209805, 0.12945834), (-0.07209805, 0.05607353, 0.1594412), (-0.07209805, 0.036049042, 0.10147546), (-0.07209805, 0.054073524, 0.10147546), (-0.07209805, 0.034049034, 0.103475474), (-0.07075756, 0.052073553, 0.15544121), (-0.07075756, 0.052073553, 0.13145834), (-0.07075756, 0.03804901, 0.15544121), (-0.07075756, 0.03804901, 0.13145834), (-0.07209805, 0.03804901, 0.13145834), (-0.07209805, 0.034049034, 0.12745833), (-0.07209805, 0.05607353, 0.12745833), (-0.07209805, 0.07009807, 0.12745833), (-0.07075756, 0.034049034, 0.103475474), (-0.07209805, 0.020024529, 0.12745833), (-0.07075756, 0.034049034, 0.12745833), (-0.07075756, 0.020024529, 0.12745833), (-0.07075756, 0.020024529, 0.103475474), (-0.07209805, 0.020024529, 0.103475474), (-0.07209805, 0.018024521, 0.0734926), (-0.07209805, 0.036049042, 0.0734926), (-0.07209805, 0.016024513, 0.075492606), (-0.07209805, 0.016024513, 0.09947546), (-0.07209805, 0.03804901, 0.09947546), (-0.07209805, 0.052073553, 0.09947546), (-0.07209805, 0.0020000075, 0.075492606), (-0.07209805, 0, 0.0734926), (-0.07209805, -0.018024521, 0.0734926), (-0.07209805, -0.018024521, 0.10147546), (-0.07209805, -0.0020000075, 0.0714926), (-0.07209805, 0, 0.045509737), (-0.07209805, 0.018024521, 0.045509737), (-0.07209805, -0.0020000075, 0.047509726), (-0.07209805, 0.0020000075, 0.09947546), (-0.07075756, 0.0020000075, 0.075492606), (-0.07075756, 0.0020000075, 0.09947546), (-0.07075756, 0.016024513, 0.075492606), (-0.07075756, 0.016024513, 0.09947546), (-0.07209805, 0.020024529, 0.0714926), (-0.07209805, 0.034049034, 0.0714926), (-0.07209805, 0.020024529, 0.047509726), (-0.07209805, 0.036049042, 0.04550972), (-0.07209805, 0.054073524, 0.0734926), (-0.07209805, 0.054073524, 0.04550972), (-0.07209805, 0.03804901, 0.075492606), (-0.07209805, 0.018024521, 0.017526835), (-0.07209805, 0.036049042, 0.017526835), (-0.07209805, 0.016024513, 0.019526843), (-0.07209805, 0.016024513, 0.04350973), (-0.07209805, 0.034049034, 0.047509726), (-0.07075756, 0.034049034, 0.0714926), (-0.07075756, 0.020024529, 0.0714926), (-0.07075756, 0.034049034, 0.047509726), (-0.07075756, 0.020024529, 0.047509726), (-0.07075756, 0.03804901, 0.09947546), (-0.07075756, 0.052073553, 0.09947546), (-0.07075756, 0.052073553, 0.075492606), (-0.07075756, 0.03804901, 0.075492606), (-0.07209805, 0.052073553, 0.075492606), (-0.07209805, 0.07209805, 0.10147546), (-0.07209805, 0.07209805, 0.0734926), (-0.07209805, 0.05607353, 0.103475474), (-0.07209805, 0.07009807, 0.0714926), (-0.07209805, 0.05607353, 0.0714926), (-0.07075756, 0.05607353, 0.12745833), (-0.07075756, 0.07009807, 0.12745833), (-0.07075756, 0.07009807, 0.103475474), (-0.07075756, 0.05607353, 0.103475474), (-0.07209805, 0.07009807, 0.103475474), (-0.054073524, 0.07209805, 0.12945834), (-0.054073524, 0.07209805, 0.10147546), (-0.07009807, 0.07209805, 0.13145834), (-0.07009807, 0.07209805, 0.15544121), (-0.05607353, 0.07209805, 0.09947546), (-0.07009807, 0.07209805, 0.09947546), (-0.05607353, 0.07209805, 0.13145834), (-0.054073524, 0.07209805, 0.1574412), (-0.054073524, 0.07209805, 0.18542407), (-0.036049042, 0.07209805, 0.15744121), (-0.036049042, 0.07209805, 0.12945834), (-0.052073553, 0.07209805, 0.1594412), (-0.052073553, 0.07209805, 0.12745833), (-0.03804901, 0.07209805, 0.12745833), (-0.07009807, 0.07075756, 0.13145834), (-0.07009807, 0.07075756, 0.15544121), (-0.05607353, 0.07075756, 0.13145834), (-0.05607353, 0.07075756, 0.15544121), (-0.05607353, 0.07209805, 0.15544121), (-0.034049034, 0.07209805, 0.15544121), (-0.03804901, 0.07209805, 0.103475474), (-0.036049042, 0.07209805, 0.10147546), (-0.018024521, 0.07209805, 0.12945834), (-0.018024521, 0.07209805, 0.10147546), (-0.034049034, 0.07209805, 0.13145834), (-0.03804901, 0.07075756, 0.103475474), (-0.03804901, 0.07075756, 0.12745833), (-0.052073553, 0.07075756, 0.12745833), (-0.052073553, 0.07075756, 0.103475474), (-0.052073553, 0.07209805, 0.103475474), (-0.054073524, 0.07209805, 0.0734926), (-0.036049042, 0.07209805, 0.0734926), (-0.05607353, 0.07209805, 0.075492606), (-0.034049034, 0.07209805, 0.09947546), (-0.020024529, 0.07209805, 0.09947546), (-0.05607353, 0.07075756, 0.075492606), (-0.05607353, 0.07075756, 0.09947546), (-0.07009807, 0.07075756, 0.09947546), (-0.07009807, 0.07075756, 0.075492606), (-0.07009807, 0.07209805, 0.075492606), (-0.07209805, 0.07209805, 0.045509737), (-0.054073524, 0.07209805, 0.045509737), (-0.07209805, 0.07009807, 0.047509726), (-0.052073553, 0.07209805, 0.0714926), (-0.03804901, 0.07209805, 0.0714926), (-0.07075756, 0.07009807, 0.047509726), (-0.07075756, 0.07009807, 0.0714926), (-0.07075756, 0.05607353, 0.0714926), (-0.07075756, 0.05607353, 0.047509726), (-0.07209805, 0.05607353, 0.047509726), (-0.07209805, 0.054073524, 0.017526835), (-0.07209805, 0.07209805, 0.017526856), (-0.07209805, 0.052073553, 0.019526843), (-0.07209805, 0.052073553, 0.04350971), (-0.07209805, 0.03804901, 0.04350971), (-0.07209805, 0.036049042, -0.010456027), (-0.07209805, 0.054073524, -0.010456027), (-0.07209805, 0.034049034, -0.008456021), (-0.07009807, 0.07209805, 0.04350973), (-0.05607353, 0.07209805, 0.04350973), (-0.07075756, 0.052073553, 0.019526843), (-0.07075756, 0.052073553, 0.04350971), (-0.07075756, 0.03804901, 0.04350971), (-0.07075756, 0.03804901, 0.019526843), (-0.07209805, 0.03804901, 0.019526843), (-0.07209805, 0.07009807, 0.015526848), (-0.07209805, 0.05607353, 0.015526848), (-0.07209805, 0.07009807, -0.008456021), (-0.07209805, 0.07209805, -0.010456027), (-0.07209805, 0.054073524, -0.03843889), (-0.07209805, 0.07209805, -0.03843889), (-0.06932243, 0.06932243, -0.038595904), (-0.054073524, 0.07209805, -0.03843889), (-0.07009807, 0.07209805, -0.036438882), (-0.054073524, 0.07209805, 0.017526835), (-0.054073524, 0.07209805, -0.010456027), (-0.07009807, 0.07209805, 0.019526843), (-0.07009807, 0.07209805, -0.012456035), (-0.036049042, 0.07209805, -0.010456027), (-0.036049042, 0.07209805, -0.03843889), (-0.052073553, 0.07209805, -0.008456021), (-0.034661215, 0.06932243, -0.038595904), (-0.018024521, 0.07209805, -0.03843889), (-0.034049034, 0.07209805, -0.036438882), (-0.034049034, 0.07209805, -0.012456035), (-0.07009807, 0.07075756, 0.04350973), (-0.05607353, 0.07075756, 0.04350973), (-0.05607353, 0.07075756, 0.019526843), (-0.07009807, 0.07075756, 0.019526843), (-0.05607353, 0.07209805, 0.019526843), (-0.036049042, 0.07209805, 0.04550972), (-0.036049042, 0.07209805, 0.017526835), (-0.052073553, 0.07209805, 0.047509726), (-0.03804901, 0.07209805, 0.015526828), (-0.052073553, 0.07209805, 0.015526828), (-0.052073553, 0.07075756, 0.0714926), (-0.03804901, 0.07075756, 0.0714926), (-0.03804901, 0.07075756, 0.047509726), (-0.052073553, 0.07075756, 0.047509726), (-0.03804901, 0.07209805, 0.047509726), (-0.018024521, 0.07209805, 0.0734926), (-0.018024521, 0.07209805, 0.04550972), (-0.034049034, 0.07209805, 0.075492606), (-0.020024529, 0.07209805, 0.04350971), (-0.034049034, 0.07209805, 0.04350971), (-0.034049034, 0.07075756, 0.09947546), (-0.020024529, 0.07075756, 0.09947546), (-0.020024529, 0.07075756, 0.075492606), (-0.034049034, 0.07075756, 0.075492606), (-0.020024529, 0.07209805, 0.075492606), (0, 0.07209805, 0.10147546), (0, 0.07209805, 0.0734926), (-0.016024513, 0.07209805, 0.103475474), (-0.016024513, 0.07209805, 0.12745833), (-0.0020000075, 0.07209805, 0.0714926), (-0.016024513, 0.07209805, 0.0714926), (0.0020000075, 0.07209805, 0.09947546), (-0.0020000075, 0.07209805, 0.103475474), (0, 0.07209805, 0.12945834), (0, 0.07209805, 0.15744121), (-0.018024521, 0.07209805, 0.1574412), (0.0020000075, 0.07209805, 0.15544121), (0.018024521, 0.07209805, 0.12945834), (0.018024521, 0.07209805, 0.10147546), (0.0020000075, 0.07209805, 0.13145834), (0.016024513, 0.07209805, 0.09947546), (-0.0020000075, 0.07209805, 0.12745833), (-0.016024513, 0.07075756, 0.103475474), (-0.0020000075, 0.07075756, 0.103475474), (-0.016024513, 0.07075756, 0.12745833), (-0.0020000075, 0.07075756, 0.12745833), (0.0020000075, 0.07075756, 0.15544121), (0.0020000075, 0.07075756, 0.13145834), (0.016024513, 0.07209805, 0.13145834), (0.018024521, 0.07209805, 0.1574412), (0.016024513, 0.07075756, 0.13145834), (0.016024513, 0.07075756, 0.15544121), (0.016024513, 0.07209805, 0.15544121), (0.018024521, 0.07209805, 0.18542407), (0, 0.07209805, 0.18542407), (0, 0.07558578, 0.18546121), (-0.018024521, 0.07209805, 0.18542407), (-0.0020000075, 0.07209805, 0.18342407), (-0.0020000075, 0.07209805, 0.1594412), (0.036049042, 0.07209805, 0.15744121), (0.036049042, 0.07209805, 0.12945834), (0.020024529, 0.07209805, 0.1594412), (0.020024529, 0.07209805, 0.18342407), (-0.016024513, 0.07209805, 0.1594412), (-0.0020000075, 0.07075756, 0.1594412), (-0.016024513, 0.07075756, 0.1594412), (-0.016024513, 0.07075756, 0.18342407), (-0.0020000075, 0.07075756, 0.18342407), (-0.016024513, 0.07209805, 0.18342407), (0.034049034, 0.07209805, 0.1594412), (0.020024529, 0.07075756, 0.18342407), (0.020024529, 0.07075756, 0.1594412), (0.034049034, 0.07075756, 0.1594412), (0.034049034, 0.07075756, 0.18342407), (0.034049034, 0.07209805, 0.18342407), (0.036049042, 0.07209805, 0.18542407), (0.03779289, 0.07558578, 0.18546121), (0.054073524, 0.07209805, 0.18542407), (0.054073524, 0.07209805, 0.1574412), (0.018896446, 0.07558578, 0.18546121), (0.01976837, 0.079073526, 0.18549833), (0.052073553, 0.07209805, 0.15544121), (0.03804901, 0.07209805, 0.15544121), (0.056689337, 0.07558578, 0.18546121), (0.05930515, 0.079073526, 0.18549833), (0.03953678, 0.079073526, 0.18549833), (0.04128063, 0.0825613, 0.18553546), (0.07558578, 0.07558578, 0.18546121), (0.079073526, 0.079073526, 0.18549833), (0.0825613, 0.0825613, 0.18553546), (0.07209805, 0.07209805, 0.18542407), (0.061920967, 0.0825613, 0.18553546), (0.06453678, 0.086049005, 0.18557258), (0.086049005, 0.086049005, 0.18557258), (0.08953678, 0.08953678, 0.18560971), (0.07009807, 0.07209805, 0.18342407), (0.05607353, 0.07209805, 0.18342407), (0.0671526, 0.08953678, 0.18560971), (0.06976837, 0.09302452, 0.18564685), (0.04476837, 0.08953678, 0.18560971), (0.09302452, 0.09302452, 0.18564685), (0.09651226, 0.09651226, 0.18568397), (0.04302452, 0.086049005, 0.18557258), (0.02151226, 0.086049005, 0.18557258), (0.020640334, 0.0825613, 0.18553546), (0, 0.0825613, 0.18553546), (0, 0.079073526, 0.18549833), (-0.01976837, 0.079073526, 0.18549833), (-0.018896446, 0.07558578, 0.18546121), (-0.03779289, 0.07558578, 0.18546121), (-0.036049042, 0.07209805, 0.18542407), (-0.020024529, 0.07209805, 0.15544121), (-0.020024529, 0.07209805, 0.13145834), (-0.034049034, 0.07075756, 0.13145834), (-0.034049034, 0.07075756, 0.15544121), (-0.020024529, 0.07075756, 0.13145834), (-0.020024529, 0.07075756, 0.15544121), (-0.03804901, 0.07209805, 0.1594412), (-0.03804901, 0.07209805, 0.18342407), (-0.052073553, 0.07075756, 0.1594412), (-0.03804901, 0.07075756, 0.1594412), (-0.052073553, 0.07075756, 0.18342407), (-0.03804901, 0.07075756, 0.18342407), (-0.052073553, 0.07209805, 0.18342407), (-0.056689337, 0.07558578, 0.18546121), (-0.05930515, 0.079073526, 0.18549833), (-0.07558578, 0.07558578, 0.18546121), (-0.079073526, 0.079073526, 0.18549833), (-0.0825613, 0.0825613, 0.18553546), (-0.03953678, 0.079073526, 0.18549834), (-0.04128063, 0.0825613, 0.18553546), (-0.061920967, 0.0825613, 0.18553546), (-0.06453678, 0.086049005, 0.18557258), (-0.086049005, 0.086049005, 0.18557258), (-0.08953678, 0.08953678, 0.18560971), (-0.020640334, 0.0825613, 0.18553546), (-0.02151226, 0.086049005, 0.18557258), (-0.04302452, 0.086049005, 0.18557258), (-0.04476837, 0.08953678, 0.18560971), (-0.0671526, 0.08953678, 0.18560971), (-0.06976837, 0.09302452, 0.18564685), (-0.09302452, 0.09302452, 0.18564685), (-0.09651226, 0.09651226, 0.18568397), (0, 0.086049005, 0.18557258), (0, 0.08953678, 0.18560971), (-0.022384185, 0.08953678, 0.18560971), (-0.02325611, 0.09302452, 0.18564685), (-0.04651226, 0.09302452, 0.18564685), (-0.04825611, 0.09651226, 0.18568397), (-0.072384186, 0.09651226, 0.18568397), (-0.074999996, 0.099999994, 0.18572111), (-0.099999994, 0.099999994, 0.18572111), (-0.099999994, 0.099999994, 0.1982211), (0.022384185, 0.08953678, 0.18560971), (0.02325611, 0.09302452, 0.18564685), (0, 0.09302452, 0.18564685), (0, 0.09651226, 0.18568397), (-0.024128074, 0.09651226, 0.18568397), (-0.024999999, 0.099999994, 0.18572111), (-0.049999997, 0.099999994, 0.18572111), (-0.049999997, 0.099999994, 0.1982211), (-0.074999996, 0.099999994, 0.1982211), (-0.074999996, 0.099999994, 0.2107211), (-0.099999994, 0.099999994, 0.2107211), (-0.099999994, 0.099999994, 0.22322111), (-0.074999996, 0.099999994, 0.22322111), (-0.074999996, 0.099999994, 0.23572111), (-0.049999997, 0.099999994, 0.22322111), (-0.099999994, 0.099999994, 0.23572111), (-0.099999994, 0.099999994, 0.2482211), (-0.049999997, 0.099999994, 0.2107211), (-0.024999999, 0.099999994, 0.2107211), (-0.024999999, 0.099999994, 0.1982211), (0, 0.099999994, 0.1982211), (0, 0.099999994, 0.18572111), (0.024999999, 0.099999994, 0.18572111), (0.024128074, 0.09651226, 0.18568397), (0.04825611, 0.09651226, 0.18568397), (0.04651226, 0.09302452, 0.18564685), (0.072384186, 0.09651226, 0.18568397), (0.074999996, 0.099999994, 0.18572111), (0.099999994, 0.099999994, 0.18572111), (0.099999994, 0.099999994, 0.1982211), (0.049999997, 0.099999994, 0.18572111), (0.049999997, 0.099999994, 0.1982211), (0.074999996, 0.099999994, 0.1982211), (0.074999996, 0.099999994, 0.2107211), (0.099999994, 0.099999994, 0.2107211), (0.099999994, 0.099999994, 0.22322111), (0.024999999, 0.099999994, 0.1982211), (0.024999999, 0.099999994, 0.2107211), (0.049999997, 0.099999994, 0.2107211), (0.049999997, 0.099999994, 0.22322111), (0.074999996, 0.099999994, 0.22322111), (0.074999996, 0.099999994, 0.23572111), (0.099999994, 0.099999994, 0.23572111), (0.099999994, 0.099999994, 0.2482211), (0, 0.099999994, 0.2107211), (0, 0.099999994, 0.22322111), (0.024999999, 0.099999994, 0.22322111), (0.024999999, 0.099999994, 0.23572111), (0.049999997, 0.099999994, 0.23572111), (0.049999997, 0.099999994, 0.2482211), (0.074999996, 0.099999994, 0.2482211), (0.074999996, 0.099999994, 0.26072112), (0.099999994, 0.099999994, 0.26072112), (0.099999994, 0.099999994, 0.2732211), (-0.024999999, 0.099999994, 0.22322111), (-0.024999999, 0.099999994, 0.23572111), (0, 0.099999994, 0.23572111), (0, 0.099999994, 0.2482211), (0.024999999, 0.099999994, 0.2482211), (0.024999999, 0.099999994, 0.26072112), (0.049999997, 0.099999994, 0.26072112), (0.049999997, 0.099999994, 0.2732211), (0.074999996, 0.099999994, 0.2732211), (0.074999996, 0.099999994, 0.2857211), (0.099999994, 0.099999994, 0.2857211), (0.049999997, 0.099999994, 0.2857211), (0.024999999, 0.099999994, 0.2857211), (0.024999999, 0.099999994, 0.2732211), (0, 0.099999994, 0.2732211), (0, 0.099999994, 0.2857211), (-0.024999999, 0.099999994, 0.2857211), (0, 0.099999994, 0.26072112), (-0.024999999, 0.099999994, 0.26072112), (-0.024999999, 0.099999994, 0.2732211), (-0.049999997, 0.099999994, 0.2732211), (-0.049999997, 0.099999994, 0.2857211), (-0.074999996, 0.099999994, 0.2857211), (-0.024999999, 0.099999994, 0.2482211), (-0.049999997, 0.099999994, 0.2482211), (-0.049999997, 0.099999994, 0.26072112), (-0.074999996, 0.099999994, 0.26072112), (-0.074999996, 0.099999994, 0.2732211), (-0.099999994, 0.099999994, 0.2732211), (-0.099999994, 0.099999994, 0.2857211), (-0.099999994, 0.099999994, 0.26072112), (-0.074999996, 0.099999994, 0.2482211), (-0.049999997, 0.099999994, 0.23572111), (0.099999994, -0.099999994, 0.2732211), (0.099999994, -0.099999994, 0.2857211), (0.099999994, -0.074999996, 0.2857211), (0.099999994, -0.074999996, 0.2732211), (0.099999994, -0.074999996, 0.26072112), (0.099999994, -0.049999997, 0.2732211), (0.099999994, -0.099999994, 0.26072112), (0.099999994, -0.049999997, 0.2857211), (0.099999994, -0.099999994, 0.2482211), (0.099999994, -0.024999999, 0.2857211), (0.099999994, -0.074999996, 0.2482211), (0.099999994, -0.074999996, 0.23572111), (0.099999994, -0.049999997, 0.2482211), (0.099999994, -0.099999994, 0.23572111), (0.099999994, -0.099999994, 0.22322111), (0.099999994, -0.049999997, 0.26072112), (0.099999994, -0.024999999, 0.26072112), (0.099999994, -0.024999999, 0.2732211), (0.099999994, 0, 0.2732211), (0.099999994, 0, 0.2857211), (0.099999994, 0.024999999, 0.2857211), (0.099999994, -0.074999996, 0.22322111), (0.099999994, -0.074999996, 0.2107211), (0.099999994, -0.049999997, 0.22322111), (0.099999994, -0.099999994, 0.2107211), (0.099999994, -0.099999994, 0.1982211), (0.099999994, -0.049999997, 0.23572111), (0.099999994, -0.024999999, 0.23572111), (0.099999994, -0.024999999, 0.2482211), (0.099999994, 0, 0.2482211), (0.099999994, 0, 0.26072112), (0.099999994, 0.024999999, 0.26072112), (0.099999994, 0.024999999, 0.2732211), (0.099999994, 0.049999997, 0.2732211), (0.099999994, 0.049999997, 0.2857211), (0.099999994, 0.074999996, 0.2857211), (0.099999994, 0.074999996, 0.2732211), (0.099999994, 0.074999996, 0.26072112), (0.099999994, 0.099999994, 0.2732211), (0.099999994, 0.099999994, 0.2857211), (0.099999994, 0.099999994, 0.26072112), (0.099999994, 0.099999994, 0.2482211), (0.099999994, 0.049999997, 0.26072112), (0.099999994, 0.049999997, 0.2482211), (0.099999994, 0.074999996, 0.2482211), (0.099999994, 0.074999996, 0.23572111), (0.099999994, 0.099999994, 0.23572111), (0.099999994, 0.099999994, 0.22322111), (0.099999994, 0.024999999, 0.2482211), (0.099999994, 0.024999999, 0.23572111), (0.099999994, 0.049999997, 0.23572111), (0.099999994, 0.049999997, 0.22322111), (0.099999994, 0.074999996, 0.22322111), (0.099999994, 0.074999996, 0.2107211), (0.099999994, 0.099999994, 0.2107211), (0.099999994, 0.099999994, 0.1982211), (0.099999994, 0, 0.23572111), (0.099999994, 0, 0.22322111), (0.099999994, 0.024999999, 0.22322111), (0.099999994, 0.024999999, 0.2107211), (0.099999994, 0.049999997, 0.2107211), (0.099999994, 0.049999997, 0.1982211), (0.099999994, 0.074999996, 0.1982211), (0.099999994, 0.074999996, 0.18572111), (0.099999994, 0.099999994, 0.18572111), (0.09651226, 0.09651226, 0.18568397), (0.099999994, -0.024999999, 0.22322111), (0.099999994, -0.024999999, 0.2107211), (0.099999994, 0, 0.2107211), (0.099999994, 0, 0.1982211), (0.099999994, 0.024999999, 0.1982211), (0.099999994, 0.024999999, 0.18572111), (0.099999994, 0.049999997, 0.18572111), (0.09651226, 0.04825611, 0.18568397), (0.099999994, 0, 0.18572111), (0.09651226, 0.072384186, 0.18568397), (0.09302452, 0.06976837, 0.18564685), (0.09302452, 0.09302452, 0.18564685), (0.099999994, -0.024999999, 0.18572111), (0.09651226, 0.04825611, 0.18568397), (0.08953678, 0.08953678, 0.18560971), (0.099999994, -0.024999999, 0.1982211), (0.099999994, -0.049999997, 0.1982211), (0.099999994, -0.049999997, 0.18572111), (0.099999994, -0.074999996, 0.18572111), (0.099999994, -0.049999997, 0.2107211), (0.099999994, -0.074999996, 0.1982211), (0.099999994, -0.099999994, 0.18572111), (0.08953678, 0.0671526, 0.18560971), (0.086049005, 0.06453678, 0.18557258), (0.08953678, 0.04476837, 0.18560971), (0.086049005, 0.086049005, 0.18557258), (0.0825613, 0.0825613, 0.18553546), (0.09302452, 0.04651226, 0.18564685), (0.09302452, 0.02325611, 0.18564685), (0.0825613, 0.061920967, 0.18553546), (0.079073526, 0.05930515, 0.18549833), (0.0825613, 0.04128063, 0.18553546), (0.079073526, 0.079073526, 0.18549833), (0.07558578, 0.07558578, 0.18546121), (0.086049005, 0.04302452, 0.18557258), (0.086049005, 0.02151226, 0.18557258), (0.08953678, 0.022384185, 0.18560971), (0.08953678, 0, 0.18560971), (0.09651226, 0.024128074, 0.18568397), (0.09651226, 0, 0.18568397), (0.099999994, 0.024999999, 0.18572111), (0.099999994, 0.049999997, 0.18572111), (0.099999994, 0, 0.18572111), (0.099999994, -0.024999999, 0.18572111), (0.09302452, 0, 0.18564685), (0.09302452, -0.02325611, 0.18564685), (0.09651226, -0.024128074, 0.18568397), (0.09651226, -0.04825611, 0.18568397), (0.099999994, -0.049999997, 0.18572111), (0.099999994, -0.074999996, 0.18572111), (0.09651226, -0.072384186, 0.18568397), (0.09302452, -0.06976837, 0.18564685), (0.09651226, -0.09651226, 0.18568397), (0.099999994, -0.099999994, 0.18572111), (0.09302452, -0.09302452, 0.18564685), (0.08953678, -0.089536764, 0.18560971), (0.09302452, -0.04651226, 0.18564685), (0.08953678, -0.04476837, 0.18560971), (0.08953678, -0.067152575, 0.18560971), (0.086049005, -0.06453676, 0.18557258), (0.086049005, -0.08604902, 0.18557258), (0.0825613, -0.082561284, 0.18553546), (0.08953678, -0.022384185, 0.18560971), (0.086049005, -0.02151226, 0.18557258), (0.086049005, -0.04302452, 0.18557258), (0.0825613, -0.04128063, 0.18553546), (0.0825613, -0.061920967, 0.18553546), (0.079073526, -0.05930515, 0.18549833), (0.079073526, -0.07907354, 0.18549833), (0.07558578, -0.07558578, 0.18546121), (0.086049005, 0, 0.18557258), (0.0825613, 0, 0.18553546), (0.0825613, -0.020640334, 0.18553546), (0.079073526, -0.01976837, 0.18549833), (0.079073526, -0.03953678, 0.18549833), (0.07558578, -0.03779289, 0.18546121), (0.07558578, -0.056689337, 0.18546121), (0.07209805, -0.054073542, 0.18542407), (0.07209805, -0.07209805, 0.18542407), (0.0825613, 0.020640334, 0.18553546), (0.079073526, 0.01976837, 0.18549833), (0.079073526, 0.03953678, 0.18549834), (0.07558578, 0.03779289, 0.18546121), (0.079073526, 0, 0.18549833), (0.07558578, 0, 0.18546121), (0.07558578, 0.018896446, 0.18546121), (0.07209805, 0.018024521, 0.18542407), (0.07558578, 0.056689337, 0.18546121), (0.07209805, 0.054073524, 0.18542407), (0.07209805, 0.07209805, 0.15744121), (0.07209805, 0.054073524, 0.1574412), (0.07009807, 0.07209805, 0.1594412), (0.07558578, -0.018896446, 0.18546121), (0.07209805, -0.018024521, 0.18542407), (0.07209805, 0, 0.18542407), (0.07209805, -0.036049042, 0.18542407), (0.07209805, 0, 0.15744121), (0.07209805, -0.018024521, 0.1574412), (0.07209805, 0.0020000075, 0.1594412), (0.07209805, 0.0020000075, 0.18342407), (0.07209805, -0.036049042, 0.15744121), (0.07209805, -0.054073542, 0.1574412), (0.07209805, -0.018024521, 0.12945834), (0.07209805, -0.036049042, 0.12945834), (0.07209805, -0.016024513, 0.13145834), (0.07209805, -0.034049034, 0.18342407), (0.07209805, -0.034049034, 0.1594412), (0.07209805, -0.020024529, 0.18342407), (0.07209805, -0.05607353, 0.18342407), (0.07209805, -0.07009806, 0.18342407), (0.07075756, -0.034049034, 0.1594412), (0.07075756, -0.034049034, 0.18342407), (0.07075756, -0.020024529, 0.18342407), (0.07075756, -0.020024529, 0.1594412), (0.07209805, -0.020024529, 0.1594412), (0.07209805, -0.052073553, 0.15544121), (0.07209805, -0.03804901, 0.15544121), (0.07209805, -0.052073553, 0.13145834), (0.07209805, -0.054073542, 0.12945834), (0.07209805, -0.07209805, 0.15744121), (0.07209805, -0.07209805, 0.12945834), (0.07209805, -0.05607353, 0.1594412), (0.07209805, -0.036049042, 0.10147546), (0.07209805, -0.054073542, 0.10147546), (0.07209805, -0.034049034, 0.103475474), (0.07075756, -0.052073553, 0.15544121), (0.07075756, -0.052073553, 0.13145834), (0.07075756, -0.03804901, 0.15544121), (0.07075756, -0.03804901, 0.13145834), (0.07209805, -0.03804901, 0.13145834), (0.07209805, -0.034049034, 0.12745833), (0.07209805, -0.05607353, 0.12745833), (0.07209805, -0.07009806, 0.12745833), (0.07075756, -0.034049034, 0.103475474), (0.07209805, -0.020024529, 0.12745833), (0.07209805, -0.018024521, 0.10147546), (0.07075756, -0.034049034, 0.12745833), (0.07075756, -0.020024529, 0.12745833), (0.07075756, -0.020024529, 0.103475474), (0.07209805, -0.020024529, 0.103475474), (0.07209805, 0, 0.10147546), (0.07209805, 0, 0.12945834), (0.07209805, -0.016024513, 0.09947546), (0.07209805, -0.018024521, 0.0734926), (0.07209805, -0.036049042, 0.0734926), (0.07209805, -0.016024513, 0.075492606), (0.07209805, -0.0020000075, 0.13145834), (0.07209805, -0.03804901, 0.09947546), (0.07209805, -0.052073553, 0.09947546), (0.07209805, -0.0020000075, 0.09947546), (0.07209805, 0, 0.0734926), (0.07209805, 0, 0.045509737), (0.07209805, -0.018024521, 0.045509737), (0.07209805, 0.0020000075, 0.047509726), (0.07209805, 0.018024521, 0.0734926), (0.07209805, 0.018024521, 0.10147546), (0.07209805, 0.0020000075, 0.0714926), (0.07209805, -0.0020000075, 0.075492606), (0.07075756, -0.016024513, 0.09947546), (0.07075756, -0.0020000075, 0.09947546), (0.07075756, -0.016024513, 0.075492606), (0.07075756, -0.0020000075, 0.075492606), (0.07209805, 0.016024513, 0.103475474), (0.07209805, 0.0020000075, 0.103475474), (0.07209805, 0.016024513, 0.12745833), (0.07209805, 0.018024521, 0.12945834), (0.07209805, 0.036049042, 0.10147546), (0.07209805, 0.036049042, 0.12945834), (0.07209805, 0.020024529, 0.09947546), (0.07209805, 0.020024529, 0.075492606), (0.07075756, 0.016024513, 0.103475474), (0.07075756, 0.016024513, 0.12745833), (0.07075756, 0.0020000075, 0.103475474), (0.07075756, 0.0020000075, 0.12745833), (0.07209805, 0.0020000075, 0.12745833), (0.07209805, 0.018024521, 0.1574412), (0.07209805, -0.0020000075, 0.15544121), (0.07209805, 0.020024529, 0.13145834), (0.07209805, 0.034049034, 0.13145834), (0.07075756, -0.0020000075, 0.15544121), (0.07075756, -0.0020000075, 0.13145834), (0.07075756, -0.016024513, 0.13145834), (0.07075756, -0.016024513, 0.15544121), (0.07209805, -0.016024513, 0.15544121), (0.07209805, 0.016024513, 0.1594412), (0.07075756, 0.016024513, 0.1594412), (0.07075756, 0.0020000075, 0.1594412), (0.07075756, 0.016024513, 0.18342407), (0.07075756, 0.0020000075, 0.18342407), (0.07209805, 0.016024513, 0.18342407), (0.07209805, 0.036049042, 0.15744121), (0.07209805, 0.036049042, 0.18542407), (0.07209805, 0.020024529, 0.15544121), (0.07209805, 0.03804901, 0.18342407), (0.07209805, 0.03804901, 0.1594412), (0.07209805, 0.052073553, 0.18342407), (0.07209805, 0.054073524, 0.12945834), (0.07209805, 0.05607353, 0.13145834), (0.07075756, 0.020024529, 0.13145834), (0.07075756, 0.034049034, 0.13145834), (0.07075756, 0.034049034, 0.15544121), (0.07075756, 0.020024529, 0.15544121), (0.07209805, 0.034049034, 0.15544121), (0.07209805, 0.052073553, 0.1594412), (0.07209805, 0.05607353, 0.15544121), (0.07075756, 0.052073553, 0.18342407), (0.07075756, 0.052073553, 0.1594412), (0.07075756, 0.03804901, 0.1594412), (0.07075756, 0.03804901, 0.18342407), (0.07075756, 0.05607353, 0.13145834), (0.07209805, 0.07009807, 0.15544121), (0.07209805, 0.07209805, 0.12945834), (0.07075756, 0.05607353, 0.15544121), (0.07075756, 0.07009807, 0.15544121), (0.07075756, 0.07009807, 0.13145834), (0.07209805, 0.07009807, 0.13145834), (0.054073524, 0.07209805, 0.12945834), (0.07009807, 0.07209805, 0.12745833), (0.07209805, 0.07209805, 0.10147546), (0.07209805, 0.054073524, 0.10147546), (0.07009807, 0.07209805, 0.103475474), (0.05607353, 0.07209805, 0.1594412), (0.052073553, 0.07209805, 0.13145834), (0.05607353, 0.07075756, 0.1594412), (0.05607353, 0.07075756, 0.18342407), (0.07009807, 0.07075756, 0.1594412), (0.07009807, 0.07075756, 0.18342407), (0.052073553, 0.07075756, 0.13145834), (0.052073553, 0.07075756, 0.15544121), (0.03804901, 0.07075756, 0.15544121), (0.03804901, 0.07075756, 0.13145834), (0.03804901, 0.07209805, 0.13145834), (0.036049042, 0.07209805, 0.10147546), (0.054073524, 0.07209805, 0.10147546), (0.034049034, 0.07209805, 0.103475474), (0.05607353, 0.07209805, 0.12745833), (0.034049034, 0.07209805, 0.12745833), (0.020024529, 0.07209805, 0.12745833), (0.018024521, 0.07209805, 0.0734926), (0.036049042, 0.07209805, 0.0734926), (0.016024513, 0.07209805, 0.075492606), (0.07009807, 0.07075756, 0.12745833), (0.07009807, 0.07075756, 0.103475474), (0.05607353, 0.07075756, 0.12745833), (0.05607353, 0.07075756, 0.103475474), (0.05607353, 0.07209805, 0.103475474), (0.054073524, 0.07209805, 0.0734926), (0.07209805, 0.07209805, 0.0734926), (0.052073553, 0.07209805, 0.075492606), (0.052073553, 0.07209805, 0.09947546), (0.020024529, 0.07209805, 0.103475474), (0.07209805, 0.07009807, 0.09947546), (0.07209805, 0.05607353, 0.09947546), (0.03804901, 0.07209805, 0.09947546), (0.036049042, 0.07209805, 0.04550972), (0.054073524, 0.07209805, 0.04550972), (0.034049034, 0.07209805, 0.047509726), (0.020024529, 0.07075756, 0.103475474), (0.034049034, 0.07075756, 0.103475474), (0.020024529, 0.07075756, 0.12745833), (0.034049034, 0.07075756, 0.12745833), (0.052073553, 0.07075756, 0.09947546), (0.052073553, 0.07075756, 0.075492606), (0.03804901, 0.07075756, 0.09947546), (0.03804901, 0.07075756, 0.075492606), (0.03804901, 0.07209805, 0.075492606), (0.034049034, 0.07209805, 0.0714926), (0.020024529, 0.07209805, 0.0714926), (0.018024521, 0.07209805, 0.045509737), (0, 0.07209805, 0.045509737), (0.016024513, 0.07209805, 0.04350973), (0.0020000075, 0.07209805, 0.075492606), (0.034049034, 0.07075756, 0.047509726), (0.034049034, 0.07075756, 0.0714926), (0.020024529, 0.07075756, 0.0714926), (0.020024529, 0.07075756, 0.047509726), (0.020024529, 0.07209805, 0.047509726), (0.018024521, 0.07209805, 0.017526835), (0.036049042, 0.07209805, 0.017526835), (0.016024513, 0.07209805, 0.019526843), (0.03804901, 0.07209805, 0.04350971), (0.052073553, 0.07209805, 0.04350971), (0.034049034, 0.07209805, 0.015526828), (0.0020000075, 0.07209805, 0.019526843), (0, 0.07209805, 0.017526856), (0, 0.07209805, -0.010456027), (0.018024521, 0.07209805, -0.010456027), (-0.0020000075, 0.07209805, -0.008456021), (0.020024529, 0.07209805, 0.015526828), (0.016024513, 0.07075756, 0.019526843), (0.0020000075, 0.07075756, 0.019526843), (0.0020000075, 0.07075756, 0.04350973), (0.016024513, 0.07075756, 0.04350973), (0.0020000075, 0.07209805, 0.04350973), (-0.018024521, 0.07209805, 0.017526835), (-0.0020000075, 0.07209805, 0.015526848), (-0.016024513, 0.07209805, 0.047509726), (-0.0020000075, 0.07209805, 0.047509726), (-0.0020000075, 0.07075756, 0.047509726), (-0.016024513, 0.07075756, 0.047509726), (-0.0020000075, 0.07075756, 0.0714926), (-0.016024513, 0.07075756, 0.0714926), (-0.020024529, 0.07209805, 0.019526843), (-0.020024529, 0.07075756, 0.019526843), (-0.020024529, 0.07075756, 0.04350971), (-0.034049034, 0.07075756, 0.04350971), (-0.034049034, 0.07075756, 0.019526843), (-0.034049034, 0.07209805, 0.019526843), (-0.018024521, 0.07209805, -0.010456027), (-0.03804901, 0.07209805, -0.008456021), (-0.016024513, 0.07209805, 0.015526848), (-0.020024529, 0.07209805, -0.012456035), (-0.03804901, 0.07075756, -0.008456021), (-0.052073553, 0.07075756, -0.008456021), (-0.03804901, 0.07075756, 0.015526828), (-0.052073553, 0.07075756, 0.015526828), (-0.0020000075, 0.07075756, 0.015526848), (-0.0020000075, 0.07075756, -0.008456021), (-0.016024513, 0.07075756, 0.015526848), (-0.016024513, 0.07075756, -0.008456021), (-0.016024513, 0.07209805, -0.008456021), (-0.020024529, 0.07209805, -0.036438882), (-0.020024529, 0.07075756, -0.036438882), (-0.020024529, 0.07075756, -0.012456035), (-0.034049034, 0.07075756, -0.012456035), (-0.034049034, 0.07075756, -0.036438882), (0, 0.07209805, -0.03843889), (0, 0.06932243, -0.038595904), (0.018024521, 0.07209805, -0.03843889), (0.0020000075, 0.07209805, -0.036438882), (0.0020000075, 0.07209805, -0.012456035), (-0.017330628, 0.06932243, -0.038595904), (-0.016636696, 0.06654682, -0.038752917), (0.016024513, 0.07209805, -0.012456035), (0.036049042, 0.07209805, -0.010456027), (0.036049042, 0.07209805, -0.03843889), (0.020024529, 0.07209805, -0.008456021), (0.034661215, 0.06932243, -0.038595904), (0.054073524, 0.07209805, -0.03843889), (0.03804901, 0.07209805, -0.036438882), (0.03804901, 0.07209805, -0.012456035), (0.016024513, 0.07075756, -0.012456035), (0.0020000075, 0.07075756, -0.012456035), (0.016024513, 0.07075756, -0.036438882), (0.016024513, 0.07209805, -0.036438882), (0.0020000075, 0.07075756, -0.036438882), (0.020024529, 0.07075756, 0.015526828), (0.034049034, 0.07075756, 0.015526828), (0.034049034, 0.07075756, -0.008456021), (0.020024529, 0.07075756, -0.008456021), (0.034049034, 0.07209805, -0.008456021), (0.054073524, 0.07209805, 0.017526835), (0.054073524, 0.07209805, -0.010456027), (0.03804901, 0.07209805, 0.019526843), (0.052073553, 0.07209805, -0.012456035), (0.03804901, 0.07075756, 0.04350971), (0.052073553, 0.07075756, 0.04350971), (0.052073553, 0.07075756, 0.019526843), (0.03804901, 0.07075756, 0.019526843), (0.052073553, 0.07209805, 0.019526843), (0.07209805, 0.07209805, 0.045509737), (0.07209805, 0.07209805, 0.017526856), (0.05607353, 0.07209805, 0.047509726), (0.05607353, 0.07209805, 0.0714926), (0.07009807, 0.07209805, 0.0714926), (0.07209805, 0.054073524, 0.0734926), (0.07209805, 0.054073524, 0.045509737), (0.07209805, 0.07009807, 0.075492606), (0.07009807, 0.07209805, 0.015526848), (0.05607353, 0.07209805, 0.015526848), (0.05607353, 0.07075756, 0.0714926), (0.07009807, 0.07075756, 0.0714926), (0.07009807, 0.07075756, 0.047509726), (0.07009807, 0.07209805, 0.047509726), (0.05607353, 0.07075756, 0.047509726), (0.07209805, 0.07009807, 0.04350973), (0.07209805, 0.05607353, 0.04350973), (0.07209805, 0.07009807, 0.019526843), (0.07209805, 0.054073524, 0.017526835), (0.07209805, 0.07209805, -0.010456027), (0.07209805, 0.054073524, -0.010456027), (0.07009807, 0.07209805, -0.008456021), (0.07209805, 0.036049042, 0.04550972), (0.07209805, 0.036049042, 0.017526835), (0.07209805, 0.052073553, 0.047509726), (0.07075756, 0.05607353, 0.04350973), (0.07075756, 0.07009807, 0.04350973), (0.07075756, 0.05607353, 0.019526843), (0.07075756, 0.07009807, 0.019526843), (0.07209805, 0.05607353, 0.019526843), (0.07209805, 0.052073553, 0.0714926), (0.07209805, 0.03804901, 0.015526828), (0.07209805, 0.052073553, 0.015526828), (0.07075756, 0.052073553, 0.0714926), (0.07209805, 0.03804901, 0.0714926), (0.07209805, 0.036049042, 0.0734926), (0.07075756, 0.03804901, 0.0714926), (0.07075756, 0.03804901, 0.047509726), (0.07075756, 0.052073553, 0.047509726), (0.07209805, 0.03804901, 0.047509726), (0.07209805, 0.03804901, -0.008456021), (0.07209805, 0.036049042, -0.010456027), (0.07209805, 0.054073524, -0.03843889), (0.07209805, 0.036049042, -0.03843889), (0.06932243, 0.034661215, -0.038595904), (0.07209805, 0.018024521, -0.03843889), (0.07209805, 0.034049034, -0.036438882), (0.07209805, 0.018024521, 0.017526835), (0.07209805, 0.018024521, -0.010456027), (0.07209805, 0.034049034, 0.019526843), (0.07209805, 0.034049034, 0.04350971), (0.07209805, 0.034049034, -0.012456035), (0.07209805, 0, -0.010456027), (0.07209805, 0, -0.03843889), (0.07209805, 0.016024513, -0.008456021), (0.06932243, 0, -0.038595904), (0.07209805, -0.018024521, -0.03843889), (0.07209805, -0.0020000075, -0.036438882), (0.07209805, -0.0020000075, -0.012456035), (0.07075756, 0.034049034, 0.04350971), (0.07075756, 0.034049034, 0.019526843), (0.07209805, 0.020024529, 0.019526843), (0.07209805, 0.018024521, 0.04550972), (0.07075756, 0.020024529, 0.019526843), (0.07075756, 0.020024529, 0.04350971), (0.07209805, 0.020024529, 0.04350971), (0.07075756, -0.0020000075, -0.012456035), (0.07075756, -0.0020000075, -0.036438882), (0.07209805, -0.016024513, -0.036438882), (0.07209805, -0.018024521, -0.010456027), (0.07075756, -0.016024513, -0.036438882), (0.07075756, -0.016024513, -0.012456035), (0.07209805, -0.016024513, -0.012456035), (0.07209805, -0.036049042, -0.010456027), (0.07209805, -0.036049042, -0.03843889), (0.06932243, -0.034661215, -0.038595904), (0.07209805, -0.020024529, -0.008456021), (0.07209805, -0.054073542, -0.03843889), (0.07209805, -0.03804901, -0.036438882), (0.07209805, -0.018024521, 0.017526835), (0.07209805, 0, 0.017526856), (0.07209805, -0.020024529, 0.015526828), (0.06932243, -0.017330628, -0.038595904), (0.06654682, -0.016636696, -0.038752917), (0.07209805, -0.03804901, -0.012456035), (0.07209805, 0.0020000075, -0.008456021), (0.07075756, -0.020024529, 0.015526828), (0.07209805, -0.034049034, -0.008456021), (0.07209805, -0.036049042, 0.017526835), (0.07075756, -0.020024529, -0.008456021), (0.07075756, -0.034049034, -0.008456021), (0.07075756, -0.034049034, 0.015526828), (0.07209805, -0.034049034, 0.015526828), (0.07209805, -0.054073542, 0.017526835), (0.07209805, -0.054073542, -0.010456027), (0.07209805, -0.03804901, 0.019526843), (0.07209805, -0.036049042, 0.04550972), (0.07209805, -0.03804901, 0.04350971), (0.07209805, -0.052073553, -0.012456035), (0.07209805, -0.016024513, 0.019526843), (0.07209805, -0.0020000075, 0.019526843), (0.07075756, -0.052073553, -0.012456035), (0.07075756, -0.03804901, -0.012456035), (0.07075756, -0.052073553, -0.036438882), (0.07075756, -0.03804901, -0.036438882), (0.07209805, -0.052073553, -0.036438882), (0.07209805, -0.07209805, -0.010456027), (0.07209805, -0.05607353, -0.008456021), (0.07209805, -0.07209805, -0.03843889), (0.06932243, -0.06932243, -0.038595904), (0.054073524, -0.07209805, -0.03843889), (0.07009807, -0.07209805, -0.036438882), (0.07209805, -0.05607353, 0.015526848), (0.07009807, -0.07209805, -0.012456035), (0.06932243, -0.051991843, -0.038595904), (0.06654682, -0.049910124, -0.038752917), (0.06654682, -0.03327343, -0.038752917), (0.06377121, -0.031885605, -0.03890993), (0.07209805, -0.07009806, -0.008456021), (0.07209805, -0.07209805, 0.017526856), (0.054073524, -0.07209805, 0.017526835), (0.054073524, -0.07209805, -0.010456027), (0.07009807, -0.07209805, 0.019526843), (0.05607353, -0.07209805, -0.012456035), (0.07075756, -0.05607353, -0.008456021), (0.07075756, -0.05607353, 0.015526848), (0.07075756, -0.07009806, -0.008456021), (0.07075756, -0.07009806, 0.015526848), (0.07209805, -0.07009806, 0.015526848), (0.07209805, -0.07209805, 0.045509737), (0.07209805, -0.054073542, 0.04550972), (0.07009807, -0.07209805, 0.04350973), (0.07209805, -0.052073553, 0.019526843), (0.07075756, -0.03804901, 0.019526843), (0.07075756, -0.03804901, 0.04350971), (0.07075756, -0.052073553, 0.019526843), (0.07075756, -0.052073553, 0.04350971), (0.07209805, -0.052073553, 0.04350971), (0.07209805, -0.054073542, 0.0734926), (0.07209805, -0.05607353, 0.0714926), (0.07209805, -0.05607353, 0.047509726), (0.07209805, -0.034049034, 0.047509726), (0.07209805, -0.020024529, 0.047509726), (0.07209805, -0.03804901, 0.075492606), (0.07209805, -0.034049034, 0.0714926), (0.07209805, -0.020024529, 0.0714926), (0.07075756, -0.034049034, 0.047509726), (0.07075756, -0.034049034, 0.0714926), (0.07075756, -0.020024529, 0.0714926), (0.07075756, -0.020024529, 0.047509726), (0.07075756, -0.03804901, 0.09947546), (0.07075756, -0.052073553, 0.09947546), (0.07075756, -0.052073553, 0.075492606), (0.07075756, -0.03804901, 0.075492606), (0.07209805, -0.052073553, 0.075492606), (0.07209805, -0.07209805, 0.10147546), (0.07209805, -0.07209805, 0.0734926), (0.07209805, -0.05607353, 0.103475474), (0.07209805, -0.07009806, 0.0714926), (0.07075756, -0.05607353, 0.12745833), (0.07075756, -0.07009806, 0.12745833), (0.07075756, -0.07009806, 0.103475474), (0.07075756, -0.05607353, 0.103475474), (0.07209805, -0.07009806, 0.103475474), (0.054073524, -0.07209805, 0.12945834), (0.054073524, -0.07209805, 0.10147546), (0.07009807, -0.07209805, 0.13145834), (0.07009807, -0.07209805, 0.15544121), (0.05607353, -0.07209805, 0.09947546), (0.07009807, -0.07209805, 0.09947546), (0.05607353, -0.07209805, 0.13145834), (0.054073524, -0.07209805, 0.1574412), (0.054073524, -0.07209805, 0.18542407), (0.036049042, -0.07209805, 0.15744121), (0.036049042, -0.07209805, 0.12945834), (0.052073553, -0.07209805, 0.1594412), (0.052073553, -0.07209805, 0.12745833), (0.03804901, -0.07209805, 0.12745833), (0.07009807, -0.07075756, 0.13145834), (0.07009807, -0.07075756, 0.15544121), (0.05607353, -0.07075756, 0.13145834), (0.05607353, -0.07075756, 0.15544121), (0.05607353, -0.07209805, 0.15544121), (0.034049034, -0.07209805, 0.15544121), (0.03804901, -0.07209805, 0.103475474), (0.036049042, -0.07209805, 0.10147546), (0.018024521, -0.07209805, 0.12945834), (0.018024521, -0.07209805, 0.10147546), (0.034049034, -0.07209805, 0.13145834), (0.03804901, -0.07075756, 0.103475474), (0.03804901, -0.07075756, 0.12745833), (0.052073553, -0.07075756, 0.12745833), (0.052073553, -0.07075756, 0.103475474), (0.052073553, -0.07209805, 0.103475474), (0.054073524, -0.07209805, 0.0734926), (0.036049042, -0.07209805, 0.0734926), (0.05607353, -0.07209805, 0.075492606), (0.034049034, -0.07209805, 0.09947546), (0.020024529, -0.07209805, 0.09947546), (0.05607353, -0.07075756, 0.075492606), (0.05607353, -0.07075756, 0.09947546), (0.07009807, -0.07075756, 0.09947546), (0.07009807, -0.07075756, 0.075492606), (0.07009807, -0.07209805, 0.075492606), (0.054073524, -0.07209805, 0.045509737), (0.07209805, -0.07009806, 0.047509726), (0.052073553, -0.07209805, 0.0714926), (0.03804901, -0.07209805, 0.0714926), (0.05607353, -0.07209805, 0.04350973), (0.07075756, -0.07009806, 0.047509726), (0.07075756, -0.05607353, 0.047509726), (0.07075756, -0.05607353, 0.0714926), (0.07075756, -0.07009806, 0.0714926), (0.05607353, -0.07075756, 0.04350973), (0.07009807, -0.07075756, 0.04350973), (0.05607353, -0.07075756, 0.019526843), (0.07009807, -0.07075756, 0.019526843), (0.05607353, -0.07209805, 0.019526843), (0.036049042, -0.07209805, 0.04550972), (0.036049042, -0.07209805, 0.017526835), (0.052073553, -0.07209805, 0.047509726), (0.03804901, -0.07209805, 0.015526828), (0.052073553, -0.07209805, 0.015526828), (0.052073553, -0.07075756, 0.0714926), (0.03804901, -0.07075756, 0.0714926), (0.03804901, -0.07075756, 0.047509726), (0.052073553, -0.07075756, 0.047509726), (0.03804901, -0.07209805, 0.047509726), (0.018024521, -0.07209805, 0.0734926), (0.018024521, -0.07209805, 0.04550972), (0.034049034, -0.07209805, 0.075492606), (0.020024529, -0.07209805, 0.04350971), (0.034049034, -0.07209805, 0.04350971), (0.034049034, -0.07075756, 0.09947546), (0.020024529, -0.07075756, 0.09947546), (0.020024529, -0.07075756, 0.075492606), (0.034049034, -0.07075756, 0.075492606), (0.020024529, -0.07209805, 0.075492606), (0, -0.07209805, 0.10147546), (0, -0.07209805, 0.0734926), (0.016024513, -0.07209805, 0.103475474), (0.016024513, -0.07209805, 0.12745833), (0.0020000075, -0.07209805, 0.0714926), (0.016024513, -0.07209805, 0.0714926), (-0.0020000075, -0.07209805, 0.09947546), (0.0020000075, -0.07209805, 0.103475474), (0, -0.07209805, 0.12945834), (0, -0.07209805, 0.15744121), (0.018024521, -0.07209805, 0.1574412), (-0.0020000075, -0.07209805, 0.15544121), (-0.018024521, -0.07209805, 0.12945834), (-0.018024521, -0.07209805, 0.10147546), (-0.0020000075, -0.07209805, 0.13145834), (-0.016024513, -0.07209805, 0.09947546), (0.0020000075, -0.07209805, 0.12745833), (0.016024513, -0.07075756, 0.103475474), (0.0020000075, -0.07075756, 0.103475474), (0.016024513, -0.07075756, 0.12745833), (0.0020000075, -0.07075756, 0.12745833), (-0.0020000075, -0.07075756, 0.15544121), (-0.0020000075, -0.07075756, 0.13145834), (-0.016024513, -0.07209805, 0.13145834), (-0.018024521, -0.07209805, 0.1574412), (-0.016024513, -0.07075756, 0.13145834), (-0.016024513, -0.07075756, 0.15544121), (-0.016024513, -0.07209805, 0.15544121), (-0.018024521, -0.07209805, 0.18542407), (0, -0.07209805, 0.18542407), (0, -0.07558578, 0.18546121), (0.018024521, -0.07209805, 0.18542407), (0.0020000075, -0.07209805, 0.18342407), (0.0020000075, -0.07209805, 0.1594412), (-0.036049042, -0.07209805, 0.15744121), (-0.036049042, -0.07209805, 0.12945834), (-0.020024529, -0.07209805, 0.1594412), (-0.020024529, -0.07209805, 0.18342407), (0.016024513, -0.07209805, 0.1594412), (0.0020000075, -0.07075756, 0.1594412), (0.016024513, -0.07075756, 0.1594412), (0.016024513, -0.07075756, 0.18342407), (0.0020000075, -0.07075756, 0.18342407), (0.016024513, -0.07209805, 0.18342407), (-0.034049034, -0.07209805, 0.1594412), (-0.020024529, -0.07075756, 0.18342407), (-0.020024529, -0.07075756, 0.1594412), (-0.034049034, -0.07075756, 0.1594412), (-0.034049034, -0.07075756, 0.18342407), (-0.034049034, -0.07209805, 0.18342407), (-0.036049042, -0.07209805, 0.18542407), (-0.03779289, -0.07558578, 0.18546121), (-0.054073524, -0.07209805, 0.18542407), (-0.054073524, -0.07209805, 0.1574412), (-0.018896446, -0.075585805, 0.18546121), (-0.01976837, -0.07907354, 0.18549833), (-0.052073553, -0.07209805, 0.15544121), (-0.03804901, -0.07209805, 0.15544121), (-0.056689337, -0.075585805, 0.18546121), (-0.05930515, -0.07907354, 0.18549833), (-0.03953678, -0.07907354, 0.18549833), (-0.04128063, -0.082561284, 0.18553546), (-0.07558578, -0.07558578, 0.18546121), (-0.079073526, -0.07907354, 0.18549833), (-0.0825613, -0.082561284, 0.18553546), (-0.07009807, -0.07209805, 0.18342407), (-0.061920967, -0.082561284, 0.18553546), (-0.06453678, -0.08604902, 0.18557258), (-0.086049005, -0.08604902, 0.18557258), (-0.08953678, -0.089536764, 0.18560971), (-0.05607353, -0.07209805, 0.18342407), (-0.07009807, -0.07075756, 0.1594412), (-0.07009807, -0.07075756, 0.18342407), (-0.05607353, -0.07075756, 0.18342407), (-0.05607353, -0.07075756, 0.1594412), (-0.05607353, -0.07209805, 0.1594412), (-0.054073524, -0.07209805, 0.12945834), (-0.07209805, -0.07209805, 0.12945834), (-0.052073553, -0.07209805, 0.13145834), (-0.07209805, -0.07009806, 0.15544121), (-0.07209805, -0.05607353, 0.15544121), (-0.052073553, -0.07075756, 0.13145834), (-0.052073553, -0.07075756, 0.15544121), (-0.03804901, -0.07075756, 0.15544121), (-0.03804901, -0.07075756, 0.13145834), (-0.03804901, -0.07209805, 0.13145834), (-0.036049042, -0.07209805, 0.10147546), (-0.054073524, -0.07209805, 0.10147546), (-0.034049034, -0.07209805, 0.103475474), (-0.034049034, -0.07209805, 0.12745833), (-0.020024529, -0.07209805, 0.12745833), (-0.018024521, -0.07209805, 0.0734926), (-0.036049042, -0.07209805, 0.0734926), (-0.016024513, -0.07209805, 0.075492606), (-0.05607353, -0.07209805, 0.12745833), (-0.07009807, -0.07209805, 0.12745833), (-0.034049034, -0.07075756, 0.103475474), (-0.034049034, -0.07075756, 0.12745833), (-0.020024529, -0.07075756, 0.12745833), (-0.020024529, -0.07209805, 0.103475474), (-0.020024529, -0.07075756, 0.103475474), (-0.016024513, -0.07075756, 0.075492606), (-0.016024513, -0.07075756, 0.09947546), (-0.0020000075, -0.07075756, 0.09947546), (-0.0020000075, -0.07075756, 0.075492606), (-0.0020000075, -0.07209805, 0.075492606), (0, -0.07209805, 0.045509737), (-0.018024521, -0.07209805, 0.045509737), (0.0020000075, -0.07209805, 0.047509726), (-0.020024529, -0.07209805, 0.0714926), (-0.034049034, -0.07209805, 0.0714926), (0.0020000075, -0.07075756, 0.047509726), (0.0020000075, -0.07075756, 0.0714926), (0.016024513, -0.07075756, 0.0714926), (0.016024513, -0.07075756, 0.047509726), (0.016024513, -0.07209805, 0.047509726), (0.018024521, -0.07209805, 0.017526835), (0, -0.07209805, 0.017526856), (0.020024529, -0.07209805, 0.019526843), (-0.0020000075, -0.07209805, 0.04350973), (-0.016024513, -0.07209805, 0.04350973), (0.020024529, -0.07075756, 0.019526843), (0.020024529, -0.07075756, 0.04350971), (0.034049034, -0.07075756, 0.04350971), (0.034049034, -0.07075756, 0.019526843), (0.034049034, -0.07209805, 0.019526843), (0.036049042, -0.07209805, -0.010456027), (0.018024521, -0.07209805, -0.010456027), (0.03804901, -0.07209805, -0.008456021), (0.016024513, -0.07209805, 0.015526848), (0.0020000075, -0.07209805, 0.015526848), (0.03804901, -0.07075756, -0.008456021), (0.03804901, -0.07075756, 0.015526828), (0.052073553, -0.07075756, 0.015526828), (0.052073553, -0.07075756, -0.008456021), (0.052073553, -0.07209805, -0.008456021), (0.05607353, -0.07209805, -0.036438882), (0.05607353, -0.07075756, -0.036438882), (0.05607353, -0.07075756, -0.012456035), (0.07009807, -0.07075756, -0.012456035), (0.07009807, -0.07075756, -0.036438882), (0.036049042, -0.07209805, -0.03843889), (0.034661215, -0.06932243, -0.038595904), (0.018024521, -0.07209805, -0.03843889), (0.034049034, -0.07209805, -0.036438882), (0.034049034, -0.07209805, -0.012456035), (0.051991843, -0.06932243, -0.038595904), (0.049910124, -0.06654682, -0.038752917), (0.020024529, -0.07209805, -0.012456035), (0, -0.07209805, -0.010456027), (0, -0.07209805, -0.03843889), (0.016024513, -0.07209805, -0.008456021), (0, -0.06932243, -0.038595904), (-0.018024521, -0.07209805, -0.03843889), (-0.0020000075, -0.07209805, -0.036438882), (0.06654682, -0.06654682, -0.038752917), (0.06377121, -0.06377121, -0.03890993), (-0.0020000075, -0.07209805, -0.012456035), (0.06377121, -0.047828406, -0.03890993), (0.060995597, -0.045746688, -0.039066903), (0.020024529, -0.07209805, -0.036438882), (0.020024529, -0.07075756, -0.036438882), (0.034049034, -0.07075756, -0.036438882), (0.034049034, -0.07075756, -0.012456035), (0.020024529, -0.07075756, -0.012456035), (0.060995597, -0.060995597, -0.039066903), (0.045746688, -0.060995597, -0.039066903), (0.058219984, -0.058219966, -0.03922388), (0.047828406, -0.06377121, -0.03890993), (0.031885605, -0.06377121, -0.03890993), (0.03327343, -0.06654682, -0.038752917), (0.016636696, -0.06654682, -0.038752917), (0.017330628, -0.06932243, -0.038595904), (0.058219984, -0.04366497, -0.03922388), (0.058219984, -0.029109992, -0.03922388), (0.055444375, -0.04158325, -0.039380893), (0.060995597, -0.03049778, -0.039066903), (0.060995597, -0.015248909, -0.039066903), (0.06377121, -0.015942803, -0.03890993), (0.06377121, 0, -0.03890993), (0.06654682, 0, -0.038752917), (0.06654682, 0.016636696, -0.038752917), (0.06932243, 0.017330628, -0.038595904), (0.055444375, -0.027722167, -0.039380893), (0.055444375, -0.013861083, -0.039380893), (0.052668724, -0.02633438, -0.039537907), (0.058219984, -0.014554977, -0.03922388), (0.058219984, 0, -0.03922388), (0.060995597, 0, -0.039066903), (0.060995597, 0.015248909, -0.039066903), (0.06377121, 0.015942803, -0.03890993), (0.06377121, 0.031885605, -0.03890993), (0.06654682, 0.03327343, -0.038752917), (0.06654682, 0.049910124, -0.038752917), (0.06932243, 0.051991843, -0.038595904), (0.06932243, 0.06932243, -0.038595904), (0.055444375, 0, -0.039380893), (0.055444375, 0.013861083, -0.039380893), (0.052668724, 0, -0.039537907), (0.058219984, 0.014554977, -0.039223917), (0.058219984, 0.029109992, -0.039223917), (0.060995597, 0.03049778, -0.039066903), (0.060995597, 0.045746688, -0.039066903), (0.06377121, 0.047828406, -0.03890993), (0.06377121, 0.06377121, -0.03890993), (0.06654682, 0.06654682, -0.038752917), (0.049910124, 0.06654682, -0.038752917), (0.052668724, 0.01316719, -0.039537907), (0.052668724, 0.02633438, -0.039537907), (0.04989311, 0.012473297, -0.03969492), (0.055444375, 0.027722167, -0.03938093), (0.055444375, 0.04158325, -0.039380893), (0.058219984, 0.04366497, -0.039223917), (0.058219984, 0.058219984, -0.03922388), (0.060995597, 0.060995597, -0.039066903), (0.045746688, 0.060995597, -0.039066903), (0.047828406, 0.06377121, -0.03890993), (0.031885605, 0.06377121, -0.03890993), (0.04989311, 0.024946555, -0.03969492), (0.04989311, 0.037419852, -0.03969492), (0.04989311, 0.024946555, -0.055693567), (0.052668724, 0.03950157, -0.039537907), (0.052668724, 0.052668724, -0.039537907), (0.055444375, 0.055444375, -0.039380893), (0.04158325, 0.055444375, -0.039380893), (0.04366497, 0.058219984, -0.03922388), (0.029109992, 0.058219984, -0.03922388), (0.03049778, 0.060995597, -0.039066903), (0.015248909, 0.060995597, -0.039066903), (0.04989311, 0.037419852, -0.055693567), (0.04989311, 0.04989311, -0.055693567), (0.04989311, 0.037419852, -0.07169222), (0.04989311, 0.04989311, -0.03969492), (0.037419852, 0.04989311, -0.03969492), (0.03950157, 0.052668724, -0.039537907), (0.02633438, 0.052668724, -0.039537907), (0.027722167, 0.055444375, -0.039380893), (0.013861083, 0.055444375, -0.039380893), (0.014554977, 0.058219984, -0.03922388), (0, 0.058219984, -0.03922388), (0.04989311, 0.04989311, -0.07169222), (0.037419852, 0.04989311, -0.07169222), (0.04989311, 0.04989311, -0.087690905), (0.037419852, 0.04989311, -0.055693567), (0.024946555, 0.04989311, -0.055693608), (0.024946555, 0.04989311, -0.03969492), (0.012473297, 0.04989311, -0.03969492), (0.01316719, 0.052668724, -0.039537907), (0, 0.052668724, -0.039537907), (0, 0.055444375, -0.039380893), (-0.013861083, 0.055444375, -0.039380893), (0.037419852, 0.04989311, -0.087690905), (0.024946555, 0.04989311, -0.087690905), (0.037419852, 0.04989311, -0.10368955), (0.024946555, 0.04989311, -0.07169226), (0.012473297, 0.04989311, -0.07169222), (0.012473297, 0.04989311, -0.055693567), (0, 0.04989311, -0.055693567), (0, 0.04989311, -0.03969492), (-0.012473297, 0.04989311, -0.03969492), (-0.01316719, 0.052668724, -0.039537907), (-0.02633438, 0.052668724, -0.039537907), (0.024946555, 0.04989311, -0.10368955), (0.012473297, 0.04989311, -0.10368955), (0.024946555, 0.04989311, -0.119688205), (0.012473297, 0.04989311, -0.087690905), (0, 0.04989311, -0.087690905), (0, 0.04989311, -0.07169222), (-0.012473297, 0.04989311, -0.07169222), (-0.012473297, 0.04989311, -0.055693567), (-0.024946555, 0.04989311, -0.055693567), (-0.024946555, 0.04989311, -0.03969492), (-0.037419852, 0.04989311, -0.03969492), (0.012473297, 0.04989311, -0.119688205), (0, 0.04989311, -0.119688205), (0.012473297, 0.04989311, -0.13568689), (0, 0.04989311, -0.10368955), (-0.012473297, 0.04989311, -0.10368955), (-0.012473297, 0.04989311, -0.087690905), (-0.024946555, 0.04989311, -0.087690905), (-0.024946555, 0.04989311, -0.07169222), (-0.037419852, 0.04989311, -0.07169222), (-0.037419852, 0.04989311, -0.055693567), (-0.04989311, 0.04989311, -0.055693567), (0, 0.04989311, -0.13568689), (-0.012473297, 0.04989311, -0.13568689), (0, 0.04989311, -0.15168554), (-0.012473297, 0.04989311, -0.119688205), (-0.024946555, 0.04989311, -0.119688205), (-0.024946555, 0.04989311, -0.10368955), (-0.037419852, 0.04989311, -0.10368955), (-0.037419852, 0.04989311, -0.087690905), (-0.04989311, 0.04989311, -0.087690905), (-0.04989311, 0.04989311, -0.07169222), (-0.04989311, 0.037419852, -0.07169222), (-0.012473297, 0.04989311, -0.15168558), (-0.024946555, 0.04989311, -0.15168554), (-0.012473297, 0.04989311, -0.16768418), (-0.024946555, 0.04989311, -0.13568689), (-0.037419852, 0.04989311, -0.13568689), (-0.037419852, 0.04989311, -0.119688205), (-0.04989311, 0.04989311, -0.119688205), (-0.04989311, 0.04989311, -0.10368955), (-0.04989311, 0.037419852, -0.10368955), (-0.04989311, 0.037419852, -0.087690905), (-0.04989311, 0.024946555, -0.087690905), (-0.024946555, 0.04989311, -0.16768418), (-0.037419852, 0.04989311, -0.16768418), (-0.023971824, 0.047943648, -0.16768599), (-0.037419852, 0.04989311, -0.15168558), (-0.04989311, 0.04989311, -0.15168554), (-0.04989311, 0.04989311, -0.13568689), (-0.04989311, 0.037419852, -0.13568689), (-0.04989311, 0.037419852, -0.119688205), (-0.04989311, 0.024946555, -0.119688205), (-0.04989311, 0.024946555, -0.10368955), (-0.04989311, 0.012473297, -0.10368955), (-0.035957716, 0.047943648, -0.16768602), (-0.047943648, 0.047943648, -0.16768602), (-0.03449562, 0.045994148, -0.16768777), (-0.04989311, 0.04989311, -0.16768418), (-0.04989311, 0.037419852, -0.16768418), (-0.04989311, 0.037419852, -0.15168558), (-0.04989311, 0.024946555, -0.15168554), (-0.04989311, 0.024946555, -0.13568689), (-0.04989311, 0.012473297, -0.13568689), (-0.04989311, 0.012473297, -0.119688205), (-0.04989311, 0, -0.119688205), (-0.045994148, 0.045994148, -0.16768782), (-0.045994148, 0.03449562, -0.16768777), (-0.044044685, 0.044044685, -0.1676896), (-0.047943648, 0.035957716, -0.16768602), (-0.047943648, 0.023971824, -0.16768599), (-0.04989311, 0.024946555, -0.16768418), (-0.04989311, 0.012473297, -0.16768418), (-0.04989311, 0.012473297, -0.15168558), (-0.04989311, 0, -0.15168554), (-0.04989311, 0, -0.13568689), (-0.04989311, -0.012473297, -0.13568689), (-0.044044685, 0.033033524, -0.1676896), (-0.044044685, 0.022022361, -0.1676896), (-0.04209522, 0.03157139, -0.16769144), (-0.045994148, 0.022997092, -0.16768777), (-0.045994148, 0.011498528, -0.16768777), (-0.047943648, 0.011985893, -0.16768602), (-0.047943648, 0, -0.16768602), (-0.04989311, 0, -0.16768418), (-0.04989311, -0.012473297, -0.16768418), (-0.04989311, -0.012473297, -0.15168558), (-0.04989311, -0.024946555, -0.15168554), (-0.04209522, 0.021047592, -0.16769144), (-0.04209522, 0.010523796, -0.16769144), (-0.04014572, 0.02007286, -0.16769323), (-0.044044685, 0.011011162, -0.1676896), (-0.044044685, 0, -0.1676896), (-0.045994148, 0, -0.16768782), (-0.045994148, -0.011498528, -0.16768777), (-0.047943648, -0.011985893, -0.16768602), (-0.047943648, -0.023971824, -0.16768599), (-0.04989311, -0.024946555, -0.16768418), (-0.04989311, -0.037419852, -0.16768418), (-0.04014572, 0.01003643, -0.16769327), (-0.04014572, 0, -0.16769327), (-0.03819626, 0.009549065, -0.16769502), (-0.04209522, 0, -0.16769144), (-0.04209522, -0.010523796, -0.16769144), (-0.044044685, -0.011011162, -0.1676896), (-0.044044685, -0.022022361, -0.1676896), (-0.045994148, -0.022997092, -0.16768777), (-0.045994148, -0.03449562, -0.16768777), (-0.047943648, -0.035957716, -0.16768602), (-0.047943648, -0.047943648, -0.16768602), (-0.03819626, 0, -0.16769506), (-0.03819626, -0.009549065, -0.16769502), (-0.036246758, 0, -0.16769685), (-0.04014572, -0.01003643, -0.16769323), (-0.04014572, -0.02007286, -0.16769323), (-0.04209522, -0.021047592, -0.16769144), (-0.04209522, -0.03157139, -0.16769144), (-0.044044685, -0.033033524, -0.1676896), (-0.044044685, -0.044044685, -0.1676896), (-0.045994148, -0.045994148, -0.16768782), (-0.03449562, -0.045994148, -0.16768777), (-0.036246758, -0.009061699, -0.16769685), (-0.036246758, -0.018123398, -0.16769685), (-0.034297295, -0.008574333, -0.16769868), (-0.03819626, -0.01909813, -0.16769502), (-0.03819626, -0.028647194, -0.16769502), (-0.04014572, -0.03010929, -0.16769327), (-0.04014572, -0.04014572, -0.16769327), (-0.04209522, -0.04209522, -0.16769144), (-0.03157139, -0.04209522, -0.16769144), (-0.033033524, -0.044044685, -0.1676896), (-0.022022361, -0.044044685, -0.1676896), (-0.034297295, -0.017148627, -0.16769868), (-0.034297295, -0.02572296, -0.16769868), (-0.034297295, -0.017148627, -0.18244417), (-0.036246758, -0.027185058, -0.16769685), (-0.036246758, -0.036246758, -0.16769685), (-0.03819626, -0.03819626, -0.16769506), (-0.028647194, -0.03819626, -0.16769502), (-0.03010929, -0.04014572, -0.16769323), (-0.02007286, -0.04014572, -0.16769323), (-0.021047592, -0.04209522, -0.16769144), (-0.010523796, -0.04209522, -0.16769144), (-0.034297295, -0.02572296, -0.18244417), (-0.034297295, -0.034297295, -0.18244417), (-0.034297295, -0.02572296, -0.19718964), (-0.034297295, -0.034297295, -0.16769868), (-0.02572296, -0.034297295, -0.16769868), (-0.027185058, -0.036246758, -0.16769685), (-0.018123398, -0.036246758, -0.16769685), (-0.01909813, -0.03819626, -0.16769502), (-0.009549065, -0.03819626, -0.16769502), (-0.01003643, -0.04014572, -0.16769327), (0, -0.04014572, -0.16769327), (-0.034297295, -0.034297295, -0.19718961), (-0.02572296, -0.034297295, -0.19718964), (-0.034297295, -0.034297295, -0.21193506), (-0.02572296, -0.034297295, -0.18244417), (-0.017148627, -0.034297295, -0.18244417), (-0.017148627, -0.034297295, -0.16769868), (-0.008574333, -0.034297295, -0.16769868), (-0.009061699, -0.036246758, -0.16769685), (0, -0.036246758, -0.16769685), (0, -0.03819626, -0.16769506), (0.009549065, -0.03819626, -0.16769502), (-0.02572296, -0.034297295, -0.21193506), (-0.017148627, -0.034297295, -0.2119351), (-0.02572296, -0.034297295, -0.22668055), (-0.017148627, -0.034297295, -0.19718964), (-0.008574333, -0.034297295, -0.19718964), (-0.008574333, -0.034297295, -0.18244417), (0, -0.034297295, -0.18244417), (0, -0.034297295, -0.16769868), (0.008574333, -0.034297295, -0.16769868), (0.009061699, -0.036246758, -0.16769685), (0.018123398, -0.036246758, -0.16769685), (-0.017148627, -0.034297295, -0.22668055), (-0.008574333, -0.034297295, -0.22668055), (-0.017148627, -0.034297295, -0.24142602), (-0.008574333, -0.034297295, -0.2119351), (0, -0.034297295, -0.21193506), (0, -0.034297295, -0.19718961), (0.008574333, -0.034297295, -0.19718964), (0.008574333, -0.034297295, -0.18244417), (0.017148627, -0.034297295, -0.18244417), (0.017148627, -0.034297295, -0.16769868), (0.02572296, -0.034297295, -0.16769868), (-0.008574333, -0.034297295, -0.24142602), (0, -0.034297295, -0.24142602), (-0.008574333, -0.034297295, -0.2561715), (0, -0.034297295, -0.22668055), (0.008574333, -0.034297295, -0.22668055), (0.008574333, -0.034297295, -0.21193506), (0.017148627, -0.034297295, -0.2119351), (0.017148627, -0.034297295, -0.19718964), (0.02572296, -0.034297295, -0.19718964), (0.02572296, -0.034297295, -0.18244417), (0.034297295, -0.034297295, -0.18244417), (0, -0.034297295, -0.25617146), (0.008574333, -0.034297295, -0.2561715), (0, -0.034297295, -0.2709169), (0.008574333, -0.034297295, -0.24142602), (0.017148627, -0.034297295, -0.24142602), (0.017148627, -0.034297295, -0.22668055), (0.02572296, -0.034297295, -0.22668055), (0.02572296, -0.034297295, -0.2119351), (0.034297295, -0.034297295, -0.21193506), (0.034297295, -0.034297295, -0.19718961), (0.034297295, -0.02572296, -0.19718964), (0.008574333, -0.034297295, -0.2709169), (0.017148627, -0.034297295, -0.27091694), (0.008574333, -0.034297295, -0.28566238), (0.017148627, -0.034297295, -0.2561715), (0.02572296, -0.034297295, -0.2561715), (0.02572296, -0.034297295, -0.24142602), (0.034297295, -0.034297295, -0.24142602), (0.034297295, -0.034297295, -0.22668055), (0.034297295, -0.02572296, -0.22668055), (0.034297295, -0.02572296, -0.21193506), (0.034297295, -0.017148627, -0.2119351), (0.017148627, -0.034297295, -0.28566238), (0.02572296, -0.034297295, -0.28566238), (0.016925659, -0.033851318, -0.28566977), (0.02572296, -0.034297295, -0.2709169), (0.034297295, -0.034297295, -0.2709169), (0.034297295, -0.034297295, -0.25617146), (0.034297295, -0.02572296, -0.2561715), (0.034297295, -0.02572296, -0.24142602), (0.034297295, -0.017148627, -0.24142602), (0.034297295, -0.017148627, -0.22668055), (0.034297295, -0.008574333, -0.22668055), (0.025388489, -0.033851318, -0.2856697), (0.033851318, -0.033851318, -0.2856697), (0.025054015, -0.03340534, -0.28567713), (0.034297295, -0.034297295, -0.28566238), (0.034297295, -0.02572296, -0.28566238), (0.034297295, -0.02572296, -0.2709169), (0.034297295, -0.017148627, -0.27091694), (0.034297295, -0.017148627, -0.2561715), (0.034297295, -0.008574333, -0.2561715), (0.034297295, -0.008574333, -0.24142602), (0.034297295, 0, -0.24142602), (0.03340534, -0.03340534, -0.28567708), (0.03340534, -0.025054015, -0.28567713), (0.0329594, -0.0329594, -0.28568444), (0.033851318, -0.025388489, -0.2856697), (0.033851318, -0.016925659, -0.28566977), (0.034297295, -0.017148627, -0.28566238), (0.034297295, -0.008574333, -0.28566238), (0.034297295, -0.008574333, -0.2709169), (0.034297295, 0, -0.2709169), (0.034297295, 0, -0.25617146), (0.034297295, 0.008574333, -0.2561715), (0.0329594, -0.024719544, -0.28568444), (0.0329594, -0.016479682, -0.28568444), (0.03251343, -0.02438507, -0.28569177), (0.03340534, -0.01670269, -0.28567713), (0.03340534, -0.008351326, -0.28567713), (0.033851318, -0.0084628295, -0.2856697), (0.033851318, 0, -0.2856697), (0.034297295, 0, -0.28566238), (0.034297295, 0.008574333, -0.28566238), (0.034297295, 0.008574333, -0.2709169), (0.034297295, 0.017148627, -0.27091694), (0.03251343, -0.016256714, -0.28569177), (0.03251343, -0.008128357, -0.28569177), (0.03206745, -0.016033744, -0.2856991), (0.0329594, -0.008239861, -0.28568444), (0.0329594, 0, -0.28568444), (0.03340534, 0, -0.28567708), (0.03340534, 0.008351326, -0.28567713), (0.033851318, 0.0084628295, -0.2856697), (0.033851318, 0.016925659, -0.28566977), (0.034297295, 0.017148627, -0.28566238), (0.034297295, 0.02572296, -0.28566238), (0.03206745, -0.008016854, -0.2856991), (0.03206745, 0, -0.2856991), (0.031621512, -0.007905387, -0.28570643), (0.03251343, 0, -0.28569177), (0.03251343, 0.008128357, -0.28569177), (0.0329594, 0.008239861, -0.28568444), (0.0329594, 0.016479682, -0.28568444), (0.03340534, 0.01670269, -0.28567713), (0.03340534, 0.025054015, -0.28567713), (0.033851318, 0.025388489, -0.2856697), (0.033851318, 0.033851318, -0.2856697), (0.031621512, 0, -0.28570643), (0.031621512, 0.007905387, -0.28570643), (0.031175537, 0, -0.28571373), (0.03206745, 0.008016854, -0.2856991), (0.03206745, 0.016033744, -0.2856991), (0.03251343, 0.016256714, -0.28569177), (0.03251343, 0.02438507, -0.28569177), (0.0329594, 0.024719544, -0.28568444), (0.0329594, 0.0329594, -0.28568444), (0.03340534, 0.03340534, -0.28567708), (0.025054015, 0.03340534, -0.28567713), (0.031175537, 0.0077938843, -0.28571373), (0.031175537, 0.0155877685, -0.28571373), (0.030729597, 0.0076823807, -0.2857211), (0.031621512, 0.015810737, -0.28570643), (0.031621512, 0.023716126, -0.28570643), (0.03206745, 0.024050597, -0.2856991), (0.03206745, 0.03206745, -0.2856991), (0.03251343, 0.03251343, -0.28569177), (0.02438507, 0.03251343, -0.28569177), (0.024719544, 0.0329594, -0.28568444), (0.016479682, 0.0329594, -0.28568444), (0.030729597, 0.015364799, -0.2857211), (0.030729597, 0.023047179, -0.2857211), (0.030729597, 0.015364799, -0.28471574), (0.031175537, 0.023381652, -0.28571373), (0.031175537, 0.031175537, -0.28571373), (0.031621512, 0.031621512, -0.28570643), (0.023716126, 0.031621512, -0.28570643), (0.024050597, 0.03206745, -0.2856991), (0.016033744, 0.03206745, -0.2856991), (0.016256714, 0.03251343, -0.28569177), (0.008128357, 0.03251343, -0.28569177), (0.030729597, 0.023047179, -0.28471574), (0.030729597, 0.030729597, -0.28471574), (0.030729597, 0.023047179, -0.28371033), (0.030729597, 0.030729597, -0.2857211), (0.023047179, 0.030729597, -0.2857211), (0.023381652, 0.031175537, -0.28571373), (0.0155877685, 0.031175537, -0.28571373), (0.015810737, 0.031621512, -0.28570643), (0.007905387, 0.031621512, -0.28570643), (0.008016854, 0.03206745, -0.2856991), (0, 0.03206745, -0.2856991), (0.030729597, 0.030729597, -0.28371033), (0.023047179, 0.030729597, -0.28371033), (0.030729597, 0.030729597, -0.28270498), (0.023047179, 0.030729597, -0.28471574), (0.015364799, 0.030729597, -0.28471574), (0.015364799, 0.030729597, -0.2857211), (0.0076823807, 0.030729597, -0.2857211), (0.0077938843, 0.031175537, -0.28571373), (0, 0.031175537, -0.28571373), (0, 0.031621512, -0.28570643), (-0.007905387, 0.031621512, -0.28570643), (0.023047179, 0.030729597, -0.28270498), (0.015364799, 0.030729597, -0.28270498), (0.023047179, 0.030729597, -0.28169963), (0.015364799, 0.030729597, -0.28371033), (0.0076823807, 0.030729597, -0.28371033), (0.0076823807, 0.030729597, -0.28471574), (0, 0.030729597, -0.28471574), (0, 0.030729597, -0.2857211), (-0.0076823807, 0.030729597, -0.2857211), (-0.0077938843, 0.031175537, -0.28571373), (-0.0155877685, 0.031175537, -0.28571373), (0.015364799, 0.030729597, -0.28169963), (0.0076823807, 0.030729597, -0.28169963), (0.015364799, 0.030729597, -0.28069425), (0.0076823807, 0.030729597, -0.28270498), (0, 0.030729597, -0.28270498), (0, 0.030729597, -0.28371033), (-0.0076823807, 0.030729597, -0.28371033), (-0.0076823807, 0.030729597, -0.28471574), (-0.015364799, 0.030729597, -0.28471574), (-0.015364799, 0.030729597, -0.2857211), (-0.023047179, 0.030729597, -0.2857211), (0.0076823807, 0.030729597, -0.28069425), (0, 0.030729597, -0.28069425), (0.0076823807, 0.030729597, -0.2796889), (0, 0.030729597, -0.28169963), (-0.0076823807, 0.030729597, -0.28169963), (-0.0076823807, 0.030729597, -0.28270498), (-0.015364799, 0.030729597, -0.28270498), (-0.015364799, 0.030729597, -0.28371033), (-0.023047179, 0.030729597, -0.28371033), (-0.023047179, 0.030729597, -0.28471574), (-0.030729597, 0.030729597, -0.28471574), (0, 0.030729597, -0.2796889), (-0.0076823807, 0.030729597, -0.2796889), (0, 0.030729597, -0.27868348), (-0.0076823807, 0.030729597, -0.28069425), (-0.015364799, 0.030729597, -0.28069425), (-0.015364799, 0.030729597, -0.28169963), (-0.023047179, 0.030729597, -0.28169963), (-0.023047179, 0.030729597, -0.28270498), (-0.030729597, 0.030729597, -0.28270498), (-0.030729597, 0.030729597, -0.28371033), (-0.030729597, 0.023047179, -0.28371033), (-0.0076823807, 0.030729597, -0.27868348), (-0.015364799, 0.030729597, -0.27868348), (-0.0076823807, 0.030729597, -0.27767813), (-0.015364799, 0.030729597, -0.2796889), (-0.023047179, 0.030729597, -0.2796889), (-0.023047179, 0.030729597, -0.28069425), (-0.030729597, 0.030729597, -0.28069425), (-0.030729597, 0.030729597, -0.28169963), (-0.030729597, 0.023047179, -0.28169963), (-0.030729597, 0.023047179, -0.28270498), (-0.030729597, 0.015364799, -0.28270498), (-0.015364799, 0.030729597, -0.27767813), (-0.023047179, 0.030729597, -0.27767813), (-0.015364799, 0.023047179, -0.27767813), (-0.023047179, 0.030729597, -0.2786835), (-0.030729597, 0.030729597, -0.27868348), (-0.030729597, 0.030729597, -0.2796889), (-0.030729597, 0.023047179, -0.2796889), (-0.030729597, 0.023047179, -0.28069425), (-0.030729597, 0.015364799, -0.28069425), (-0.030729597, 0.015364799, -0.28169963), (-0.030729597, 0.0076823807, -0.28169963), (-0.030729597, 0.030729597, -0.27767813), (-0.030729597, 0.023047179, -0.27767813), (-0.030729597, 0.023047179, -0.27868348), (-0.030729597, 0.015364799, -0.27868348), (-0.030729597, 0.015364799, -0.2796889), (-0.030729597, 0.0076823807, -0.2796889), (-0.030729597, 0.0076823807, -0.28069425), (-0.030729597, 0, -0.28069425), (-0.023047179, 0.023047179, -0.27767813), (-0.023047179, 0.015364799, -0.27767813), (-0.030729597, 0.015364799, -0.27767813), (-0.030729597, 0.0076823807, -0.27767813), (-0.030729597, 0.0076823807, -0.2786835), (-0.030729597, 0, -0.27868348), (-0.030729597, 0, -0.2796889), (-0.030729597, -0.0076823807, -0.2796889), (-0.030729597, 0, -0.28169963), (-0.030729597, 0, -0.28270498), (-0.030729597, -0.0076823807, -0.28169963), (-0.030729597, -0.0076823807, -0.28069425), (-0.030729597, -0.015364799, -0.28069425), (-0.030729597, 0.0076823807, -0.28270498), (-0.030729597, 0.0076823807, -0.28371033), (-0.030729597, 0.015364799, -0.28371033), (-0.030729597, 0.015364799, -0.28471574), (-0.030729597, 0.023047179, -0.28471574), (-0.030729597, 0.023047179, -0.2857211), (-0.030729597, 0.030729597, -0.2857211), (-0.031175537, 0.031175537, -0.28571373), (-0.023381652, 0.031175537, -0.28571373), (-0.023716126, 0.031621512, -0.28570643), (-0.015810737, 0.031621512, -0.28570643), (-0.016033744, 0.03206745, -0.2856991), (-0.008016854, 0.03206745, -0.2856991), (-0.008128357, 0.03251343, -0.28569177), (0, 0.03251343, -0.28569177), (0, 0.0329594, -0.28568444), (0.008239861, 0.0329594, -0.28568444), (0.008351326, 0.03340534, -0.28567713), (0.01670269, 0.03340534, -0.28567713), (0.016925659, 0.033851318, -0.28566977), (0.025388489, 0.033851318, -0.2856697), (0.02572296, 0.034297295, -0.28566238), (0.034297295, 0.034297295, -0.28566238), (0.034297295, 0.034297295, -0.2709169), (0.034297295, 0.02572296, -0.2709169), (0.034297295, 0.02572296, -0.2561715), (0.034297295, 0.017148627, -0.2561715), (0.034297295, 0.017148627, -0.24142602), (0.034297295, 0.008574333, -0.24142602), (0.034297295, 0.008574333, -0.22668055), (0.034297295, 0, -0.22668055), (0.034297295, 0, -0.21193506), (0.034297295, -0.008574333, -0.2119351), (0.034297295, -0.008574333, -0.19718964), (0.034297295, -0.017148627, -0.19718964), (0.034297295, -0.017148627, -0.18244417), (0.034297295, -0.02572296, -0.18244417), (0.034297295, -0.02572296, -0.16769868), (0.034297295, -0.034297295, -0.16769868), (0.036246758, -0.036246758, -0.16769685), (0.027185058, -0.036246758, -0.16769685), (0.028647194, -0.03819626, -0.16769502), (0.01909813, -0.03819626, -0.16769502), (0.02007286, -0.04014572, -0.16769323), (0.01003643, -0.04014572, -0.16769323), (0.010523796, -0.04209522, -0.16769144), (0, -0.04209522, -0.16769144), (0, -0.044044685, -0.1676896), (-0.011011162, -0.044044685, -0.1676896), (-0.011498528, -0.045994148, -0.16768777), (-0.022997092, -0.045994148, -0.16768777), (-0.023971824, -0.047943648, -0.16768599), (-0.035957716, -0.047943648, -0.16768602), (-0.037419852, -0.04989311, -0.16768418), (-0.04989311, -0.04989311, -0.16768418), (-0.04989311, -0.04989311, -0.15168554), (-0.04989311, -0.037419852, -0.15168558), (-0.04989311, -0.037419852, -0.13568689), (-0.04989311, -0.024946555, -0.13568689), (-0.04989311, -0.024946555, -0.119688205), (-0.04989311, -0.012473297, -0.119688205), (-0.04989311, -0.012473297, -0.10368955), (-0.04989311, 0, -0.10368955), (-0.04989311, 0, -0.087690905), (-0.04989311, 0.012473297, -0.087690905), (-0.04989311, 0.012473297, -0.07169222), (-0.04989311, 0.024946555, -0.07169226), (-0.04989311, 0.024946555, -0.055693608), (-0.04989311, 0.037419852, -0.055693567), (-0.04989311, 0.037419852, -0.03969492), (-0.04989311, 0.04989311, -0.03969492), (-0.052668724, 0.052668724, -0.039537907), (-0.03950157, 0.052668724, -0.039537907), (-0.04158325, 0.055444375, -0.039380893), (-0.027722167, 0.055444375, -0.03938093), (-0.029109992, 0.058219984, -0.039223917), (-0.014554977, 0.058219984, -0.039223917), (-0.015248909, 0.060995597, -0.039066903), (0, 0.060995597, -0.039066903), (0, 0.06377121, -0.03890993), (0.015942803, 0.06377121, -0.03890993), (0.016636696, 0.06654682, -0.038752917), (0.03327343, 0.06654682, -0.038752917), (0.051991843, 0.06932243, -0.038595904), (0.017330628, 0.06932243, -0.038595904), (0, 0.06654682, -0.038752917), (0.07209805, 0.07209805, -0.03843889), (-0.015942803, 0.06377121, -0.03890993), (-0.031885605, 0.06377121, -0.03890993), (-0.03327343, 0.06654682, -0.038752917), (-0.049910124, 0.06654682, -0.038752917), (-0.03049778, 0.060995597, -0.039066903), (-0.045746688, 0.060995597, -0.039066903), (-0.051991843, 0.06932243, -0.038595904), (-0.047828406, 0.06377121, -0.03890993), (-0.06377121, 0.06377121, -0.03890993), (-0.04366497, 0.058219984, -0.039223917), (-0.058219984, 0.058219984, -0.03922388), (-0.06654682, 0.06654682, -0.038752917), (-0.06654682, 0.049910124, -0.038752917), (-0.060995597, 0.060995597, -0.039066903), (-0.060995597, 0.045746688, -0.039066903), (-0.055444375, 0.055444375, -0.039380893), (-0.055444375, 0.04158325, -0.039380893), (-0.06932243, 0.051991843, -0.038595904), (-0.06932243, 0.034661215, -0.038595904), (-0.06377121, 0.047828406, -0.03890993), (-0.06377121, 0.031885605, -0.03890993), (-0.058219984, 0.04366497, -0.03922388), (-0.058219984, 0.029109992, -0.03922388), (-0.052668724, 0.03950157, -0.039537907), (-0.052668724, 0.02633438, -0.039537907), (-0.06654682, 0.03327343, -0.038752917), (-0.06654682, 0.016636696, -0.038752917), (-0.060995597, 0.03049778, -0.039066903), (-0.060995597, 0.015248909, -0.039066903), (-0.055444375, 0.027722167, -0.039380893), (-0.055444375, 0.013861083, -0.039380893), (-0.04989311, 0.024946555, -0.03969492), (-0.04989311, 0.012473297, -0.03969492), (-0.06377121, 0.015942803, -0.03890993), (-0.06377121, 0, -0.03890993), (-0.058219984, 0.014554977, -0.03922388), (-0.058219984, 0, -0.03922388), (-0.052668724, 0.01316719, -0.039537907), (-0.052668724, 0, -0.039537907), (-0.04989311, 0.012473297, -0.055693567), (-0.04989311, 0, -0.055693567), (-0.060995597, 0, -0.039066903), (-0.060995597, -0.015248909, -0.039066903), (-0.055444375, 0, -0.039380893), (-0.055444375, -0.013861083, -0.039380893), (-0.04989311, 0, -0.03969492), (-0.04989311, -0.012473297, -0.03969492), (-0.04989311, 0, -0.07169222), (-0.04989311, -0.012473297, -0.07169222), (-0.058219984, -0.014554977, -0.039223917), (-0.058219984, -0.029109992, -0.039223917), (-0.052668724, -0.01316719, -0.039537907), (-0.052668724, -0.02633438, -0.039537907), (-0.04989311, -0.012473297, -0.055693567), (-0.04989311, -0.024946555, -0.055693567), (-0.04989311, -0.012473297, -0.087690905), (-0.04989311, -0.024946555, -0.087690905), (-0.055444375, -0.027722167, -0.03938093), (-0.055444375, -0.04158325, -0.039380893), (-0.04989311, -0.024946555, -0.03969492), (-0.04989311, -0.037419852, -0.03969492), (-0.04989311, -0.024946555, -0.07169222), (-0.04989311, -0.037419852, -0.07169222), (-0.04989311, -0.024946555, -0.10368955), (-0.04989311, -0.037419852, -0.10368955), (-0.052668724, -0.03950157, -0.039537907), (-0.052668724, -0.052668724, -0.039537907), (-0.04989311, -0.037419852, -0.055693567), (-0.04989311, -0.04989311, -0.055693567), (-0.04989311, -0.037419852, -0.087690905), (-0.04989311, -0.04989311, -0.087690905), (-0.04989311, -0.037419852, -0.119688205), (-0.04989311, -0.04989311, -0.119688205), (-0.04989311, -0.04989311, -0.03969492), (-0.037419852, -0.04989311, -0.03969492), (-0.04989311, -0.04989311, -0.07169222), (-0.037419852, -0.04989311, -0.07169222), (-0.04989311, -0.04989311, -0.10368955), (-0.037419852, -0.04989311, -0.10368955), (-0.04989311, -0.04989311, -0.13568689), (-0.037419852, -0.04989311, -0.13568689), (-0.037419852, -0.04989311, -0.055693567), (-0.024946555, -0.04989311, -0.055693608), (-0.037419852, -0.04989311, -0.087690905), (-0.024946555, -0.04989311, -0.087690905), (-0.037419852, -0.04989311, -0.119688205), (-0.024946555, -0.04989311, -0.119688205), (-0.037419852, -0.04989311, -0.15168558), (-0.024946555, -0.04989311, -0.15168554), (-0.024946555, -0.04989311, -0.07169226), (-0.012473297, -0.04989311, -0.07169222), (-0.024946555, -0.04989311, -0.10368955), (-0.012473297, -0.04989311, -0.10368955), (-0.024946555, -0.04989311, -0.13568689), (-0.012473297, -0.04989311, -0.13568689), (-0.024946555, -0.04989311, -0.16768418), (-0.012473297, -0.04989311, -0.16768418), (-0.012473297, -0.04989311, -0.087690905), (0, -0.04989311, -0.087690905), (-0.012473297, -0.04989311, -0.119688205), (0, -0.04989311, -0.119688205), (-0.012473297, -0.04989311, -0.15168558), (0, -0.04989311, -0.15168554), (-0.011985893, -0.047943648, -0.16768602), (0, -0.047943648, -0.16768602), (0, -0.04989311, -0.10368955), (0.012473297, -0.04989311, -0.10368955), (0, -0.04989311, -0.13568689), (0.012473297, -0.04989311, -0.13568689), (0, -0.04989311, -0.16768418), (0.012473297, -0.04989311, -0.16768418), (0, -0.045994148, -0.16768782), (0.011498528, -0.045994148, -0.16768777), (0.012473297, -0.04989311, -0.119688205), (0.024946555, -0.04989311, -0.119688205), (0.012473297, -0.04989311, -0.15168558), (0.024946555, -0.04989311, -0.15168554), (0.011985893, -0.047943648, -0.16768602), (0.023971824, -0.047943648, -0.16768599), (0.011011162, -0.044044685, -0.1676896), (0.022022361, -0.044044685, -0.1676896), (0.024946555, -0.04989311, -0.13568689), (0.037419852, -0.04989311, -0.13568689), (0.024946555, -0.04989311, -0.16768418), (0.037419852, -0.04989311, -0.16768418), (0.022997092, -0.045994148, -0.16768777), (0.03449562, -0.045994148, -0.16768777), (0.021047592, -0.04209522, -0.16769144), (0.03157139, -0.04209522, -0.16769144), (0.037419852, -0.04989311, -0.15168558), (0.04989311, -0.04989311, -0.15168554), (0.035957716, -0.047943648, -0.16768602), (0.047943648, -0.047943648, -0.16768602), (0.033033524, -0.044044685, -0.1676896), (0.044044685, -0.044044685, -0.1676896), (0.03010929, -0.04014572, -0.16769327), (0.04014572, -0.04014572, -0.16769327), (0.04989311, -0.04989311, -0.16768418), (0.04989311, -0.037419852, -0.16768418), (0.045994148, -0.045994148, -0.16768782), (0.045994148, -0.03449562, -0.16768777), (0.04209522, -0.04209522, -0.16769144), (0.04209522, -0.03157139, -0.16769144), (0.03819626, -0.03819626, -0.16769506), (0.03819626, -0.028647194, -0.16769502), (0.047943648, -0.035957716, -0.16768602), (0.047943648, -0.023971824, -0.16768599), (0.044044685, -0.033033524, -0.1676896), (0.044044685, -0.022022361, -0.1676896), (0.04014572, -0.03010929, -0.16769323), (0.04014572, -0.02007286, -0.16769323), (0.036246758, -0.027185058, -0.16769685), (0.036246758, -0.018123398, -0.16769685), (0.045994148, -0.022997092, -0.16768777), (0.045994148, -0.011498528, -0.16768777), (0.04209522, -0.021047592, -0.16769144), (0.04209522, -0.010523796, -0.16769144), (0.03819626, -0.01909813, -0.16769502), (0.03819626, -0.009549065, -0.16769502), (0.034297295, -0.017148627, -0.16769868), (0.034297295, -0.008574333, -0.16769868), (0.044044685, -0.011011162, -0.1676896), (0.044044685, 0, -0.1676896), (0.04014572, -0.01003643, -0.16769327), (0.04014572, 0, -0.16769327), (0.036246758, -0.009061699, -0.16769685), (0.036246758, 0, -0.16769685), (0.034297295, -0.008574333, -0.18244417), (0.034297295, 0, -0.18244417), (0.04209522, 0, -0.16769144), (0.04209522, 0.010523796, -0.16769144), (0.03819626, 0, -0.16769506), (0.03819626, 0.009549065, -0.16769502), (0.034297295, 0, -0.16769868), (0.034297295, 0.008574333, -0.16769868), (0.034297295, 0, -0.19718961), (0.034297295, 0.008574333, -0.19718964), (0.04014572, 0.01003643, -0.16769323), (0.04014572, 0.02007286, -0.16769323), (0.036246758, 0.009061699, -0.16769685), (0.036246758, 0.018123398, -0.16769685), (0.034297295, 0.008574333, -0.18244417), (0.034297295, 0.017148627, -0.18244417), (0.034297295, 0.008574333, -0.21193506), (0.034297295, 0.017148627, -0.2119351), (0.03819626, 0.01909813, -0.16769502), (0.03819626, 0.028647194, -0.16769502), (0.034297295, 0.017148627, -0.16769868), (0.034297295, 0.02572296, -0.16769868), (0.034297295, 0.017148627, -0.19718964), (0.034297295, 0.02572296, -0.19718964), (0.034297295, 0.017148627, -0.22668055), (0.034297295, 0.02572296, -0.22668055), (0.036246758, 0.027185058, -0.16769685), (0.036246758, 0.036246758, -0.16769685), (0.034297295, 0.02572296, -0.18244417), (0.034297295, 0.034297295, -0.18244417), (0.034297295, 0.02572296, -0.2119351), (0.034297295, 0.034297295, -0.21193506), (0.034297295, 0.02572296, -0.24142602), (0.034297295, 0.034297295, -0.24142602), (0.034297295, 0.034297295, -0.16769868), (0.02572296, 0.034297295, -0.16769868), (0.034297295, 0.034297295, -0.19718961), (0.02572296, 0.034297295, -0.19718964), (0.034297295, 0.034297295, -0.22668055), (0.02572296, 0.034297295, -0.22668055), (0.034297295, 0.034297295, -0.25617146), (0.02572296, 0.034297295, -0.2561715), (0.02572296, 0.034297295, -0.18244417), (0.017148627, 0.034297295, -0.18244417), (0.02572296, 0.034297295, -0.21193506), (0.017148627, 0.034297295, -0.2119351), (0.02572296, 0.034297295, -0.24142602), (0.017148627, 0.034297295, -0.24142602), (0.02572296, 0.034297295, -0.2709169), (0.017148627, 0.034297295, -0.27091694), (0.017148627, 0.034297295, -0.19718964), (0.008574333, 0.034297295, -0.19718964), (0.017148627, 0.034297295, -0.22668055), (0.008574333, 0.034297295, -0.22668055), (0.017148627, 0.034297295, -0.2561715), (0.008574333, 0.034297295, -0.2561715), (0.017148627, 0.034297295, -0.28566238), (0.008574333, 0.034297295, -0.28566238), (0.008574333, 0.034297295, -0.2119351), (0, 0.034297295, -0.21193506), (0.008574333, 0.034297295, -0.24142602), (0, 0.034297295, -0.24142602), (0.008574333, 0.034297295, -0.2709169), (0, 0.034297295, -0.2709169), (0.0084628295, 0.033851318, -0.2856697), (0, 0.033851318, -0.2856697), (0, 0.034297295, -0.22668055), (-0.008574333, 0.034297295, -0.22668055), (0, 0.034297295, -0.25617146), (-0.008574333, 0.034297295, -0.2561715), (0, 0.034297295, -0.28566238), (-0.008574333, 0.034297295, -0.28566238), (0, 0.03340534, -0.28567708), (-0.008351326, 0.03340534, -0.28567713), (-0.008574333, 0.034297295, -0.24142602), (-0.017148627, 0.034297295, -0.24142602), (-0.008574333, 0.034297295, -0.2709169), (-0.017148627, 0.034297295, -0.27091694), (-0.0084628295, 0.033851318, -0.2856697), (-0.016925659, 0.033851318, -0.28566977), (-0.008239861, 0.0329594, -0.28568444), (-0.016479682, 0.0329594, -0.28568444), (-0.017148627, 0.034297295, -0.2561715), (-0.02572296, 0.034297295, -0.2561715), (-0.017148627, 0.034297295, -0.28566238), (-0.02572296, 0.034297295, -0.28566238), (-0.01670269, 0.03340534, -0.28567713), (-0.025054015, 0.03340534, -0.28567713), (-0.016256714, 0.03251343, -0.28569177), (-0.02438507, 0.03251343, -0.28569177), (-0.02572296, 0.034297295, -0.2709169), (-0.034297295, 0.034297295, -0.2709169), (-0.025388489, 0.033851318, -0.2856697), (-0.033851318, 0.033851318, -0.2856697), (-0.024719544, 0.0329594, -0.28568444), (-0.0329594, 0.0329594, -0.28568444), (-0.024050597, 0.03206745, -0.2856991), (-0.03206745, 0.03206745, -0.2856991), (-0.034297295, 0.034297295, -0.28566238), (-0.034297295, 0.02572296, -0.28566238), (-0.03340534, 0.03340534, -0.28567708), (-0.03340534, 0.025054015, -0.28567713), (-0.03251343, 0.03251343, -0.28569177), (-0.03251343, 0.02438507, -0.28569177), (-0.031621512, 0.031621512, -0.28570643), (-0.031621512, 0.023716126, -0.28570643), (-0.033851318, 0.025388489, -0.2856697), (-0.033851318, 0.016925659, -0.28566977), (-0.0329594, 0.024719544, -0.28568444), (-0.0329594, 0.016479682, -0.28568444), (-0.03206745, 0.024050597, -0.2856991), (-0.03206745, 0.016033744, -0.2856991), (-0.031175537, 0.023381652, -0.28571373), (-0.031175537, 0.0155877685, -0.28571373), (-0.03340534, 0.01670269, -0.28567713), (-0.03340534, 0.008351326, -0.28567713), (-0.03251343, 0.016256714, -0.28569177), (-0.03251343, 0.008128357, -0.28569177), (-0.031621512, 0.015810737, -0.28570643), (-0.031621512, 0.007905387, -0.28570643), (-0.030729597, 0.015364799, -0.2857211), (-0.030729597, 0.0076823807, -0.2857211), (-0.0329594, 0.008239861, -0.28568444), (-0.0329594, 0, -0.28568444), (-0.03206745, 0.008016854, -0.2856991), (-0.03206745, 0, -0.2856991), (-0.031175537, 0.0077938843, -0.28571373), (-0.031175537, 0, -0.28571373), (-0.030729597, 0.0076823807, -0.28471574), (-0.030729597, 0, -0.28471574), (-0.03251343, 0, -0.28569177), (-0.03251343, -0.008128357, -0.28569177), (-0.031621512, 0, -0.28570643), (-0.031621512, -0.007905387, -0.28570643), (-0.030729597, 0, -0.2857211), (-0.030729597, -0.0076823807, -0.2857211), (-0.030729597, 0, -0.28371033), (-0.030729597, -0.0076823807, -0.28371033), (-0.03206745, -0.008016854, -0.2856991), (-0.03206745, -0.016033744, -0.2856991), (-0.031175537, -0.0077938843, -0.28571373), (-0.031175537, -0.0155877685, -0.28571373), (-0.030729597, -0.0076823807, -0.28471574), (-0.030729597, -0.015364799, -0.28471574), (-0.030729597, -0.0076823807, -0.28270498), (-0.030729597, -0.015364799, -0.28270498), (-0.031621512, -0.015810737, -0.28570643), (-0.031621512, -0.023716126, -0.28570643), (-0.030729597, -0.015364799, -0.2857211), (-0.030729597, -0.023047179, -0.2857211), (-0.030729597, -0.015364799, -0.28371033), (-0.030729597, -0.023047179, -0.28371033), (-0.030729597, -0.015364799, -0.28169963), (-0.030729597, -0.023047179, -0.28169963), (-0.031175537, -0.023381652, -0.28571373), (-0.031175537, -0.031175537, -0.28571373), (-0.030729597, -0.023047179, -0.28471574), (-0.030729597, -0.030729597, -0.28471574), (-0.030729597, -0.023047179, -0.28270498), (-0.030729597, -0.030729597, -0.28270498), (-0.030729597, -0.030729597, -0.2857211), (-0.023047179, -0.030729597, -0.2857211), (-0.030729597, -0.030729597, -0.28371033), (-0.023047179, -0.030729597, -0.28371033), (-0.023047179, -0.030729597, -0.28471574), (-0.015364799, -0.030729597, -0.28471574), (-0.030729597, -0.030729597, -0.28169963), (-0.023047179, -0.030729597, -0.28169963), (-0.030729597, -0.030729597, -0.28069425), (-0.023047179, -0.030729597, -0.28270498), (-0.015364799, -0.030729597, -0.28270498), (-0.015364799, -0.030729597, -0.28371033), (-0.0076823807, -0.030729597, -0.28371033), (-0.030729597, -0.023047179, -0.28069425), (-0.030729597, -0.023047179, -0.2796889), (-0.030729597, -0.015364799, -0.2796889), (-0.030729597, -0.015364799, -0.27868348), (-0.030729597, -0.0076823807, -0.27868348), (-0.030729597, -0.0076823807, -0.27767813), (-0.030729597, 0, -0.27767813), (-0.023047179, 0, -0.27767813), (-0.023047179, 0.0076823807, -0.27767813), (-0.015364799, 0.0076823807, -0.27767813), (-0.015364799, 0.015364799, -0.27767813), (-0.0076823807, 0.015364799, -0.27767813), (-0.0076823807, 0.023047179, -0.27767813), (0, 0.023047179, -0.27767813), (0, 0.030729597, -0.27767813), (0.0076823807, 0.030729597, -0.27767813), (0.0076823807, 0.030729597, -0.2786835), (0.015364799, 0.030729597, -0.27868348), (0.015364799, 0.030729597, -0.2796889), (0.023047179, 0.030729597, -0.2796889), (0.023047179, 0.030729597, -0.28069425), (0.030729597, 0.030729597, -0.28069425), (0.030729597, 0.030729597, -0.28169963), (0.030729597, 0.023047179, -0.28169963), (0.030729597, 0.023047179, -0.28270498), (0.030729597, 0.015364799, -0.28270498), (0.030729597, 0.015364799, -0.28371033), (0.030729597, 0.0076823807, -0.28371033), (0.030729597, 0.0076823807, -0.28471574), (0.030729597, 0, -0.28471574), (0.030729597, 0, -0.2857211), (0.030729597, -0.0076823807, -0.2857211), (0.031175537, -0.0077938843, -0.28571373), (0.031175537, -0.0155877685, -0.28571373), (0.031621512, -0.015810737, -0.28570643), (0.031621512, -0.023716126, -0.28570643), (0.03206745, -0.024050597, -0.2856991), (0.03206745, -0.03206745, -0.2856991), (0.03251343, -0.03251343, -0.28569177), (0.02438507, -0.03251343, -0.28569177), (0.024719544, -0.0329594, -0.28568444), (0.016479682, -0.0329594, -0.28568444), (0.01670269, -0.03340534, -0.28567713), (0.008351326, -0.03340534, -0.28567713), (0.0084628295, -0.033851318, -0.2856697), (0, -0.033851318, -0.2856697), (0, -0.034297295, -0.28566238), (-0.008574333, -0.034297295, -0.28566238), (-0.008574333, -0.034297295, -0.2709169), (-0.017148627, -0.034297295, -0.27091694), (-0.017148627, -0.034297295, -0.2561715), (-0.02572296, -0.034297295, -0.2561715), (-0.02572296, -0.034297295, -0.24142602), (-0.034297295, -0.034297295, -0.24142602), (-0.034297295, -0.034297295, -0.22668055), (-0.034297295, -0.02572296, -0.22668055), (-0.034297295, -0.02572296, -0.2119351), (-0.034297295, -0.017148627, -0.2119351), (-0.034297295, -0.017148627, -0.19718964), (-0.034297295, -0.008574333, -0.19718964), (-0.034297295, -0.008574333, -0.18244417), (-0.034297295, 0, -0.18244417), (-0.034297295, 0, -0.16769868), (-0.034297295, 0.008574333, -0.16769868), (-0.036246758, 0.009061699, -0.16769685), (-0.036246758, 0.018123398, -0.16769685), (-0.03819626, 0.01909813, -0.16769502), (-0.03819626, 0.028647194, -0.16769502), (-0.04014572, 0.03010929, -0.16769323), (-0.04014572, 0.04014572, -0.16769327), (-0.04209522, 0.04209522, -0.16769144), (-0.03157139, 0.04209522, -0.16769144), (-0.033033524, 0.044044685, -0.1676896), (-0.022022361, 0.044044685, -0.1676896), (-0.022997092, 0.045994148, -0.16768777), (-0.011498528, 0.045994148, -0.16768777), (-0.011985893, 0.047943648, -0.16768602), (0, 0.047943648, -0.16768602), (0, 0.04989311, -0.16768418), (0.012473297, 0.04989311, -0.16768418), (0.012473297, 0.04989311, -0.15168558), (0.024946555, 0.04989311, -0.15168554), (0.024946555, 0.04989311, -0.13568689), (0.037419852, 0.04989311, -0.13568689), (0.037419852, 0.04989311, -0.119688205), (0.04989311, 0.04989311, -0.119688205), (0.04989311, 0.04989311, -0.10368955), (0.04989311, 0.037419852, -0.10368955), (0.04989311, 0.037419852, -0.087690905), (0.04989311, 0.024946555, -0.087690905), (0.04989311, 0.024946555, -0.07169222), (0.04989311, 0.012473297, -0.07169222), (0.04989311, 0.012473297, -0.055693567), (0.04989311, 0, -0.055693567), (0.04989311, 0, -0.03969492), (0.04989311, -0.012473297, -0.03969492), (0.052668724, -0.01316719, -0.039537907), (0.04989311, 0.012473297, -0.087690905), (0.04989311, 0, -0.087690905), (0.04989311, 0.012473297, -0.10368955), (0.04989311, 0, -0.07169222), (0.04989311, -0.012473297, -0.07169222), (0.04989311, -0.012473297, -0.055693567), (0.04989311, -0.024946555, -0.055693608), (0.04989311, -0.024946555, -0.03969492), (0.04989311, -0.037419852, -0.03969492), (0.04989311, 0.024946555, -0.10368955), (0.04989311, 0.024946555, -0.119688205), (0.052668724, -0.03950157, -0.039537907), (0.052668724, -0.052668724, -0.039537907), (0.04989311, 0.037419852, -0.119688205), (0.04989311, 0.037419852, -0.13568689), (0.055444375, -0.055444352, -0.039380893), (0.04158325, -0.055444352, -0.039380893), (0.04989311, 0.04989311, -0.13568689), (0.04989311, 0.04989311, -0.15168554), (0.04366497, -0.058219966, -0.039223917), (0.029109992, -0.058219966, -0.039223917), (0.037419852, 0.04989311, -0.15168558), (0.037419852, 0.04989311, -0.16768418), (0.03049778, -0.060995597, -0.039066903), (0.015248909, -0.060995597, -0.039066903), (0.024946555, 0.04989311, -0.16768418), (0.023971824, 0.047943648, -0.16768599), (0.015942803, -0.06377121, -0.03890993), (0, -0.06377121, -0.03890993), (0.011985893, 0.047943648, -0.16768602), (0.011498528, 0.045994148, -0.16768777), (0, -0.06654682, -0.038752917), (-0.016636696, -0.06654682, -0.038752917), (0, 0.045994148, -0.16768782), (0, 0.044044685, -0.1676896), (-0.017330628, -0.06932243, -0.038595904), (-0.034661215, -0.06932243, -0.038595904), (-0.011011162, 0.044044685, -0.1676896), (-0.010523796, 0.04209522, -0.16769144), (-0.021047592, 0.04209522, -0.16769144), (-0.02007286, 0.04014572, -0.16769323), (-0.03010929, 0.04014572, -0.16769327), (-0.028647194, 0.03819626, -0.16769502), (-0.03819626, 0.03819626, -0.16769506), (-0.036246758, 0.036246758, -0.16769685), (-0.036246758, 0.027185058, -0.16769685), (-0.034297295, 0.02572296, -0.16769868), (-0.034297295, 0.017148627, -0.16769868), (-0.034297295, 0.017148627, -0.18244417), (-0.034297295, 0.008574333, -0.18244417), (-0.034297295, 0.008574333, -0.19718964), (-0.034297295, 0, -0.19718961), (-0.034297295, 0, -0.21193506), (-0.034297295, -0.008574333, -0.21193506), (-0.034297295, -0.008574333, -0.22668055), (-0.034297295, -0.017148627, -0.22668055), (-0.034297295, -0.017148627, -0.24142602), (-0.034297295, -0.02572296, -0.24142602), (-0.034297295, -0.02572296, -0.2561715), (-0.034297295, -0.034297295, -0.25617146), (-0.034297295, -0.034297295, -0.2709169), (-0.02572296, -0.034297295, -0.2709169), (-0.02572296, -0.034297295, -0.28566238), (-0.017148627, -0.034297295, -0.28566238), (-0.016925659, -0.033851318, -0.28566977), (-0.0084628295, -0.033851318, -0.2856697), (-0.008351326, -0.03340534, -0.28567713), (0, -0.03340534, -0.28567708), (0, -0.0329594, -0.28568444), (0.008239861, -0.0329594, -0.28568444), (0.008128357, -0.03251343, -0.28569177), (0.016256714, -0.03251343, -0.28569177), (0.016033744, -0.03206745, -0.2856991), (0.024050597, -0.03206745, -0.2856991), (0.023716126, -0.031621512, -0.28570643), (0.031621512, -0.031621512, -0.28570643), (0.031175537, -0.031175537, -0.28571373), (0.031175537, -0.023381652, -0.28571373), (0.030729597, -0.023047179, -0.2857211), (0.030729597, -0.015364799, -0.2857211), (0.030729597, -0.015364799, -0.28471574), (0.030729597, -0.0076823807, -0.28471574), (0.030729597, -0.0076823807, -0.28371033), (0.030729597, 0, -0.28371033), (0.030729597, 0, -0.28270498), (0.030729597, 0.0076823807, -0.28270498), (0.030729597, 0.0076823807, -0.28169963), (0.030729597, 0.015364799, -0.28169963), (0.030729597, 0.015364799, -0.28069425), (0.030729597, 0.023047179, -0.28069425), (0.030729597, 0.023047179, -0.2796889), (0.030729597, 0.030729597, -0.2796889), (0.030729597, 0.030729597, -0.27868348), (0.023047179, 0.030729597, -0.27868348), (0.023047179, 0.030729597, -0.27767813), (0.015364799, 0.030729597, -0.27767813), (0.015364799, 0.023047179, -0.27767813), (0.0076823807, 0.023047179, -0.27767813), (0.0076823807, 0.015364799, -0.27767813), (0, 0.015364799, -0.27767813), (0, 0.0076823807, -0.27767813), (-0.0076823807, 0.0076823807, -0.27767813), (-0.0076823807, 0, -0.27767813), (-0.015364799, 0, -0.27767813), (-0.015364799, -0.0076823807, -0.27767813), (-0.023047179, -0.0076823807, -0.27767813), (-0.023047179, -0.015364799, -0.27767813), (-0.030729597, -0.015364799, -0.27767813), (-0.030729597, -0.023047179, -0.27767813), (-0.030729597, -0.023047179, -0.2786835), (-0.030729597, -0.030729597, -0.27868348), (-0.030729597, -0.030729597, -0.2796889), (-0.023047179, -0.030729597, -0.2796889), (-0.023047179, -0.030729597, -0.28069425), (-0.015364799, -0.030729597, -0.28069425), (-0.015364799, -0.030729597, -0.28169963), (-0.0076823807, -0.030729597, -0.28169963), (-0.0076823807, -0.030729597, -0.28270498), (0, -0.030729597, -0.28270498), (-0.023047179, -0.030729597, -0.27868348), (-0.023047179, -0.030729597, -0.27767813), (-0.015364799, -0.030729597, -0.27868348), (-0.030729597, -0.030729597, -0.27767813), (-0.015364799, -0.030729597, -0.2796889), (-0.0076823807, -0.030729597, -0.2796889), (-0.0076823807, -0.030729597, -0.28069425), (0, -0.030729597, -0.28069425), (0, -0.030729597, -0.28169963), (0.0076823807, -0.030729597, -0.28169963), (-0.023047179, -0.023047179, -0.27767813), (-0.015364799, -0.023047179, -0.27767813), (-0.015364799, -0.030729597, -0.27767813), (-0.0076823807, -0.030729597, -0.27767813), (-0.0076823807, -0.030729597, -0.2786835), (0, -0.030729597, -0.27868348), (0, -0.030729597, -0.2796889), (0.0076823807, -0.030729597, -0.2796889), (0.0076823807, -0.030729597, -0.28069425), (0.015364799, -0.030729597, -0.28069425), (-0.015364799, -0.015364799, -0.27767813), (-0.0076823807, -0.015364799, -0.27767813), (-0.0076823807, -0.023047179, -0.27767813), (0, -0.023047179, -0.27767813), (0, -0.030729597, -0.27767813), (0.0076823807, -0.030729597, -0.27767813), (0.0076823807, -0.030729597, -0.27868348), (0.015364799, -0.030729597, -0.27868348), (0.015364799, -0.030729597, -0.2796889), (0.023047179, -0.030729597, -0.2796889), (-0.0076823807, -0.0076823807, -0.27767813), (0, -0.0076823807, -0.27767813), (0, -0.015364799, -0.27767813), (0.0076823807, -0.015364799, -0.27767813), (0.0076823807, -0.023047179, -0.27767813), (0.015364799, -0.023047179, -0.27767813), (0.015364799, -0.030729597, -0.27767813), (0.023047179, -0.030729597, -0.27767813), (0.023047179, -0.030729597, -0.2786835), (0.030729597, -0.030729597, -0.27868348), (0, 0, -0.27767813), (0.0076823807, 0, -0.27767813), (0.0076823807, -0.0076823807, -0.27767813), (0.015364799, -0.0076823807, -0.27767813), (0.015364799, -0.015364799, -0.27767813), (0.023047179, -0.015364799, -0.27767813), (0.023047179, -0.023047179, -0.27767813), (0.030729597, -0.023047179, -0.27767813), (0.030729597, -0.030729597, -0.27767813), (0.0076823807, 0.0076823807, -0.27767813), (0.015364799, 0.0076823807, -0.27767813), (0.015364799, 0, -0.27767813), (0.023047179, 0, -0.27767813), (0.023047179, -0.0076823807, -0.27767813), (0.030729597, -0.0076823807, -0.27767813), (0.030729597, -0.015364799, -0.27767813), (0.030729597, -0.015364799, -0.27868348), (0.030729597, -0.023047179, -0.27868348), (0.030729597, -0.023047179, -0.2796889), (0.015364799, 0.015364799, -0.27767813), (0.023047179, 0.015364799, -0.27767813), (0.023047179, 0.0076823807, -0.27767813), (0.030729597, 0.0076823807, -0.27767813), (0.030729597, 0, -0.27767813), (0.030729597, 0, -0.27868348), (0.030729597, -0.030729597, -0.2796889), (0.030729597, -0.030729597, -0.28069425), (0.023047179, 0.023047179, -0.27767813), (0.030729597, 0.023047179, -0.27767813), (0.030729597, 0.030729597, -0.27767813), (0.030729597, -0.0076823807, -0.2786835), (0.030729597, -0.0076823807, -0.2796889), (0.023047179, -0.030729597, -0.28069425), (0.023047179, -0.030729597, -0.28169963), (0.030729597, 0.023047179, -0.2786835), (0.030729597, 0.015364799, -0.27868348), (0.030729597, -0.015364799, -0.2796889), (0.030729597, -0.015364799, -0.28069425), (0.030729597, -0.023047179, -0.28069425), (0.030729597, -0.023047179, -0.28169963), (0.015364799, -0.030729597, -0.28169963), (0.015364799, -0.030729597, -0.28270498), (0.030729597, 0.015364799, -0.2796889), (0.030729597, 0.0076823807, -0.2796889), (0.030729597, -0.030729597, -0.28169963), (0.030729597, -0.030729597, -0.28270498), (0.0076823807, -0.030729597, -0.28270498), (0.0076823807, -0.030729597, -0.28371033), (0.030729597, 0.0076823807, -0.28069425), (0.030729597, 0, -0.28069425), (0.023047179, -0.030729597, -0.28270498), (0.023047179, -0.030729597, -0.28371033), (0, -0.030729597, -0.28371033), (0, -0.030729597, -0.28471574), (0.030729597, 0, -0.28169963), (0.030729597, -0.0076823807, -0.28169963), (0.015364799, -0.030729597, -0.28371033), (0.015364799, -0.030729597, -0.28471574), (-0.0076823807, -0.030729597, -0.28471574), (-0.0076823807, -0.030729597, -0.2857211), (0.030729597, -0.0076823807, -0.28270498), (0.030729597, -0.015364799, -0.28270498), (0.0076823807, -0.030729597, -0.28471574), (0.0076823807, -0.030729597, -0.2857211), (-0.015364799, -0.030729597, -0.2857211), (-0.0155877685, -0.031175537, -0.28571373), (0.030729597, -0.015364799, -0.28371033), (0.030729597, -0.023047179, -0.28371033), (0, -0.030729597, -0.2857211), (0, -0.031175537, -0.28571373), (-0.023381652, -0.031175537, -0.28571373), (-0.023716126, -0.031621512, -0.28570643), (0.030729597, -0.023047179, -0.28471574), (0.030729597, -0.030729597, -0.28471574), (-0.0077938843, -0.031175537, -0.28571373), (-0.007905387, -0.031621512, -0.28570643), (-0.031621512, -0.031621512, -0.28570643), (-0.03206745, -0.03206745, -0.2856991), (0.030729597, -0.030729597, -0.2857211), (0.023047179, -0.030729597, -0.2857211), (-0.015810737, -0.031621512, -0.28570643), (-0.016033744, -0.03206745, -0.2856991), (-0.024050597, -0.03206745, -0.2856991), (-0.02438507, -0.03251343, -0.28569177), (-0.03206745, -0.024050597, -0.2856991), (-0.03251343, -0.02438507, -0.28569177), (0.023381652, -0.031175537, -0.28571373), (0.0155877685, -0.031175537, -0.28571373), (-0.03251343, -0.03251343, -0.28569177), (-0.0329594, -0.0329594, -0.28568444), (-0.03251343, -0.016256714, -0.28569177), (-0.0329594, -0.016479682, -0.28568444), (0.015810737, -0.031621512, -0.28570643), (0.007905387, -0.031621512, -0.28570643), (-0.0329594, -0.024719544, -0.28568444), (-0.03340534, -0.025054015, -0.28567713), (-0.0329594, -0.008239861, -0.28568444), (-0.03340534, -0.008351326, -0.28567713), (0.008016854, -0.03206745, -0.2856991), (0, -0.03206745, -0.2856991), (-0.03340534, -0.01670269, -0.28567713), (-0.033851318, -0.016925659, -0.28566977), (-0.03340534, 0, -0.28567708), (-0.033851318, 0, -0.2856697), (0, -0.03251343, -0.28569177), (-0.008128357, -0.03251343, -0.28569177), (-0.033851318, -0.0084628295, -0.2856697), (-0.034297295, -0.008574333, -0.28566238), (-0.033851318, 0.0084628295, -0.2856697), (-0.034297295, 0.008574333, -0.28566238), (-0.008239861, -0.0329594, -0.28568444), (-0.016479682, -0.0329594, -0.28568444), (-0.034297295, 0, -0.28566238), (-0.034297295, 0, -0.2709169), (-0.034297295, 0.017148627, -0.28566238), (-0.034297295, 0.017148627, -0.27091694), (-0.01670269, -0.03340534, -0.28567713), (-0.025054015, -0.03340534, -0.28567713), (-0.034297295, 0.008574333, -0.2709169), (-0.034297295, 0.008574333, -0.2561715), (-0.034297295, 0.02572296, -0.2709169), (-0.034297295, 0.02572296, -0.2561715), (-0.025388489, -0.033851318, -0.2856697), (-0.033851318, -0.033851318, -0.2856697), (-0.034297295, 0.017148627, -0.2561715), (-0.034297295, 0.017148627, -0.24142602), (-0.034297295, 0.034297295, -0.25617146), (-0.034297295, 0.034297295, -0.24142602), (-0.034297295, -0.034297295, -0.28566238), (-0.034297295, -0.02572296, -0.28566238), (-0.034297295, 0.02572296, -0.24142602), (-0.034297295, 0.02572296, -0.22668055), (-0.02572296, 0.034297295, -0.24142602), (-0.02572296, 0.034297295, -0.22668055), (-0.034297295, -0.02572296, -0.2709169), (-0.034297295, -0.017148627, -0.27091694), (-0.034297295, 0.034297295, -0.22668055), (-0.034297295, 0.034297295, -0.21193506), (-0.017148627, 0.034297295, -0.22668055), (-0.017148627, 0.034297295, -0.2119351), (-0.034297295, -0.017148627, -0.2561715), (-0.034297295, -0.008574333, -0.2561715), (-0.02572296, 0.034297295, -0.2119351), (-0.02572296, 0.034297295, -0.19718964), (-0.008574333, 0.034297295, -0.21193506), (-0.008574333, 0.034297295, -0.19718964), (-0.034297295, -0.008574333, -0.24142602), (-0.034297295, 0, -0.24142602), (-0.017148627, 0.034297295, -0.19718964), (-0.017148627, 0.034297295, -0.18244417), (0, 0.034297295, -0.19718961), (0, 0.034297295, -0.18244417), (-0.034297295, 0, -0.22668055), (-0.034297295, 0.008574333, -0.22668055), (-0.008574333, 0.034297295, -0.18244417), (-0.008574333, 0.034297295, -0.16769868), (0.008574333, 0.034297295, -0.18244417), (0.008574333, 0.034297295, -0.16769868), (-0.034297295, 0.008574333, -0.2119351), (-0.034297295, 0.017148627, -0.2119351), (0, 0.034297295, -0.16769868), (0, 0.036246758, -0.16769685), (0.017148627, 0.034297295, -0.16769868), (0.018123398, 0.036246758, -0.16769685), (-0.034297295, 0.017148627, -0.19718964), (-0.034297295, 0.02572296, -0.19718964), (0.009061699, 0.036246758, -0.16769685), (0.009549065, 0.03819626, -0.16769502), (0.027185058, 0.036246758, -0.16769685), (0.028647194, 0.03819626, -0.16769502), (-0.034297295, 0.02572296, -0.18244417), (-0.034297295, 0.034297295, -0.18244417), (0.01909813, 0.03819626, -0.16769502), (0.02007286, 0.04014572, -0.16769323), (0.03819626, 0.03819626, -0.16769506), (0.04014572, 0.04014572, -0.16769327), (-0.034297295, 0.034297295, -0.16769868), (-0.02572296, 0.034297295, -0.16769868), (0.03010929, 0.04014572, -0.16769323), (0.03157139, 0.04209522, -0.16769144), (0.04014572, 0.03010929, -0.16769327), (0.04209522, 0.03157139, -0.16769144), (-0.027185058, 0.036246758, -0.16769685), (-0.018123398, 0.036246758, -0.16769685), (0.04209522, 0.04209522, -0.16769144), (0.044044685, 0.044044685, -0.1676896), (0.04209522, 0.021047592, -0.16769144), (0.044044685, 0.022022361, -0.1676896), (-0.01909813, 0.03819626, -0.16769502), (-0.009549065, 0.03819626, -0.16769502), (0.044044685, 0.033033524, -0.1676896), (0.045994148, 0.03449562, -0.16768777), (0.044044685, 0.011011162, -0.1676896), (0.045994148, 0.011498528, -0.16768777), (-0.01003643, 0.04014572, -0.16769323), (0, 0.04014572, -0.16769327), (0.045994148, 0.022997092, -0.16768777), (0.047943648, 0.023971824, -0.16768599), (0.045994148, 0, -0.16768782), (0.047943648, 0, -0.16768602), (0, 0.04209522, -0.16769144), (0.010523796, 0.04209522, -0.16769144), (0.047943648, 0.011985893, -0.16768602), (0.04989311, 0.012473297, -0.16768418), (0.047943648, -0.011985893, -0.16768602), (0.04989311, -0.012473297, -0.16768418), (0.011011162, 0.044044685, -0.1676896), (0.022022361, 0.044044685, -0.1676896), (0.04989311, 0, -0.16768418), (0.04989311, 0, -0.15168554), (0.04989311, -0.024946555, -0.16768418), (0.04989311, -0.024946555, -0.15168554), (0.022997092, 0.045994148, -0.16768777), (0.03449562, 0.045994148, -0.16768777), (0.04989311, -0.012473297, -0.15168558), (0.04989311, -0.012473297, -0.13568689), (0.04989311, -0.037419852, -0.15168558), (0.04989311, -0.037419852, -0.13568689), (0.035957716, 0.047943648, -0.16768602), (0.047943648, 0.047943648, -0.16768602), (0.04989311, -0.024946555, -0.13568689), (0.04989311, -0.024946555, -0.119688205), (0.04989311, -0.04989311, -0.13568689), (0.04989311, -0.04989311, -0.119688205), (0.04989311, 0.04989311, -0.16768418), (0.04989311, 0.037419852, -0.16768418), (0.04989311, -0.037419852, -0.119688205), (0.04989311, -0.037419852, -0.10368955), (0.037419852, -0.04989311, -0.119688205), (0.037419852, -0.04989311, -0.10368955), (0.04989311, 0.037419852, -0.15168558), (0.04989311, 0.024946555, -0.15168554), (0.04989311, -0.04989311, -0.10368955), (0.04989311, -0.04989311, -0.087690905), (0.024946555, -0.04989311, -0.10368955), (0.024946555, -0.04989311, -0.087690905), (0.04989311, 0.024946555, -0.13568689), (0.04989311, 0.012473297, -0.13568689), (0.037419852, -0.04989311, -0.087690905), (0.037419852, -0.04989311, -0.07169222), (0.012473297, -0.04989311, -0.087690905), (0.012473297, -0.04989311, -0.07169222), (0.04989311, 0.012473297, -0.119688205), (0.04989311, 0, -0.119688205), (0.024946555, -0.04989311, -0.07169222), (0.024946555, -0.04989311, -0.055693567), (0, -0.04989311, -0.07169222), (0, -0.04989311, -0.055693567), (0.04989311, 0, -0.10368955), (0.04989311, -0.012473297, -0.10368955), (0.012473297, -0.04989311, -0.055693567), (0.012473297, -0.04989311, -0.03969492), (-0.012473297, -0.04989311, -0.055693567), (-0.012473297, -0.04989311, -0.03969492), (0.04989311, -0.012473297, -0.087690905), (0.04989311, -0.024946555, -0.087690905), (0, -0.04989311, -0.03969492), (0, -0.052668724, -0.039537907), (-0.024946555, -0.04989311, -0.03969492), (-0.02633438, -0.052668724, -0.039537907), (0.04989311, -0.024946555, -0.07169226), (0.04989311, -0.037419852, -0.07169222), (-0.01316719, -0.052668724, -0.039537907), (-0.013861083, -0.055444352, -0.039380893), (-0.03950157, -0.052668724, -0.039537907), (-0.04158325, -0.055444352, -0.039380893), (0.04989311, -0.037419852, -0.055693567), (0.04989311, -0.04989311, -0.055693567), (-0.027722167, -0.055444352, -0.039380893), (-0.029109992, -0.058219966, -0.03922388), (-0.055444375, -0.055444352, -0.039380893), (-0.058219984, -0.058219966, -0.03922388), (0.04989311, -0.04989311, -0.03969492), (0.037419852, -0.04989311, -0.03969492), (-0.04366497, -0.058219966, -0.03922388), (-0.045746688, -0.060995597, -0.039066903), (-0.058219984, -0.04366497, -0.039223917), (-0.060995597, -0.045746688, -0.039066903), (0.03950157, -0.052668724, -0.039537907), (0.02633438, -0.052668724, -0.039537907), (-0.060995597, -0.060995597, -0.039066903), (-0.06377121, -0.06377121, -0.03890993), (-0.060995597, -0.03049778, -0.039066903), (-0.06377121, -0.031885605, -0.03890993), (0.027722167, -0.055444352, -0.03938093), (0.013861083, -0.055444352, -0.039380893), (-0.06377121, -0.047828406, -0.03890993), (-0.06654682, -0.049910124, -0.038752917), (-0.06377121, -0.015942803, -0.03890993), (-0.06654682, -0.016636696, -0.038752917), (0.014554977, -0.058219966, -0.039223917), (0, -0.058219966, -0.03922388), (-0.06654682, -0.03327343, -0.038752917), (-0.06932243, -0.034661215, -0.038595904), (-0.06654682, 0, -0.038752917), (-0.06932243, 0, -0.038595904), (0, -0.060995597, -0.039066903), (-0.015248909, -0.060995597, -0.039066903), (-0.06932243, -0.017330628, -0.038595904), (-0.07209805, -0.018024521, -0.03843889), (-0.06932243, 0.017330628, -0.038595904), (-0.07209805, 0.018024521, -0.03843889), (-0.07209805, 0, -0.03843889), (-0.015942803, -0.06377121, -0.03890993), (-0.031885605, -0.06377121, -0.03890993), (-0.07209805, 0, -0.010456027), (-0.07209805, -0.018024521, -0.010456027), (-0.07209805, 0.0020000075, -0.012456035), (-0.07209805, 0.036049042, -0.03843889), (-0.03327343, -0.06654682, -0.038752917), (-0.049910124, -0.06654682, -0.038752917), (-0.07209805, 0.0020000075, -0.036438882), (-0.07209805, 0.03804901, -0.036438882), (-0.07209805, 0.052073553, -0.036438882), (-0.07209805, 0.018024521, -0.010456027), (-0.07209805, 0.016024513, -0.036438882), (-0.07209805, 0.03804901, -0.012456035), (-0.07075756, 0.0020000075, -0.012456035), (-0.07075756, 0.0020000075, -0.036438882), (-0.07075756, 0.016024513, -0.036438882), (-0.07075756, 0.016024513, -0.012456035), (-0.07209805, 0.016024513, -0.012456035), (-0.07075756, 0.03804901, -0.012456035), (-0.07075756, 0.03804901, -0.036438882), (-0.07075756, 0.052073553, -0.036438882), (-0.07075756, 0.052073553, -0.012456035), (-0.07209805, 0.052073553, -0.012456035), (-0.07209805, 0.020024529, -0.008456021), (-0.07209805, 0, 0.017526856), (-0.07209805, 0.020024529, 0.015526828), (-0.07075756, 0.020024529, -0.008456021), (-0.07075756, 0.020024529, 0.015526828), (-0.07075756, 0.034049034, -0.008456021), (-0.07075756, 0.034049034, 0.015526828), (-0.07209805, 0.034049034, 0.015526828), (-0.07209805, 0.0020000075, 0.019526843), (-0.07209805, -0.0020000075, -0.008456021), (-0.07209805, -0.016024513, -0.008456021), (-0.07075756, 0.0020000075, 0.019526843), (-0.07075756, 0.016024513, 0.019526843), (-0.07075756, 0.0020000075, 0.04350973), (-0.07075756, 0.016024513, 0.04350973), (-0.07209805, 0.0020000075, 0.04350973), (-0.07209805, -0.018024521, 0.017526835), (-0.07209805, -0.018024521, 0.04550972), (-0.07209805, -0.036049042, -0.010456027), (-0.07209805, -0.036049042, 0.017526835), (-0.07209805, -0.020024529, -0.012456035), (-0.07209805, -0.0020000075, 0.015526848), (-0.07209805, -0.016024513, 0.047509726), (-0.07075756, -0.0020000075, -0.008456021), (-0.07075756, -0.016024513, -0.008456021), (-0.07075756, -0.016024513, 0.015526848), (-0.07075756, -0.0020000075, 0.015526848), (-0.07209805, -0.016024513, 0.015526848), (-0.07209805, -0.020024529, 0.019526843), (-0.07209805, -0.034049034, 0.019526843), (-0.07209805, -0.020024529, 0.04350971), (-0.07209805, -0.036049042, 0.04550972), (-0.07209805, -0.054073542, 0.017526835), (-0.07209805, -0.054073542, 0.045509737), (-0.07209805, -0.03804901, 0.015526828), (-0.07075756, -0.034049034, 0.019526843), (-0.07075756, -0.020024529, 0.019526843), (-0.07075756, -0.034049034, 0.04350971), (-0.07075756, -0.020024529, 0.04350971), (-0.07209805, -0.034049034, 0.04350971), (-0.07209805, -0.03804901, -0.008456021), (-0.07209805, -0.036049042, 0.0734926), (-0.07209805, -0.016024513, 0.0714926), (-0.07209805, -0.03804901, 0.047509726), (-0.07209805, -0.052073553, 0.047509726), (-0.07075756, -0.016024513, 0.0714926), (-0.07075756, -0.016024513, 0.047509726), (-0.07075756, -0.0020000075, 0.047509726), (-0.07075756, -0.0020000075, 0.0714926), (-0.07209805, -0.034049034, 0.075492606), (-0.07209805, -0.020024529, 0.075492606), (-0.07209805, -0.052073553, 0.0714926), (-0.07209805, -0.054073542, 0.0734926), (-0.07209805, -0.036049042, 0.10147546), (-0.07209805, -0.054073542, 0.10147546), (-0.07209805, -0.036049042, 0.12945834), (-0.07209805, -0.07209805, 0.045509737), (-0.07209805, -0.07209805, 0.0734926), (-0.07209805, -0.05607353, 0.04350973), (-0.07209805, -0.05607353, 0.019526843), (-0.07075756, -0.052073553, 0.0714926), (-0.07075756, -0.052073553, 0.047509726), (-0.07075756, -0.03804901, 0.047509726), (-0.07075756, -0.03804901, 0.0714926), (-0.07209805, -0.03804901, 0.0714926), (-0.07209805, -0.07009806, 0.075492606), (-0.07209805, -0.05607353, 0.075492606), (-0.07209805, -0.07009806, 0.09947546), (-0.07209805, -0.07209805, 0.10147546), (-0.07209805, -0.054073542, 0.12945834), (-0.07209805, -0.052073553, 0.12745833), (-0.054073524, -0.07209805, 0.0734926), (-0.07009807, -0.07209805, 0.0714926), (-0.07009807, -0.07209805, 0.047509726), (-0.07075756, -0.07009806, 0.075492606), (-0.07075756, -0.07009806, 0.09947546), (-0.07075756, -0.05607353, 0.075492606), (-0.07075756, -0.05607353, 0.09947546), (-0.07209805, -0.05607353, 0.09947546), (-0.05607353, -0.07209805, 0.103475474), (-0.07009807, -0.07209805, 0.103475474), (-0.07009807, -0.07075756, 0.103475474), (-0.05607353, -0.07075756, 0.103475474), (-0.07009807, -0.07075756, 0.12745833), (-0.05607353, -0.07075756, 0.12745833), (-0.07209805, -0.052073553, 0.103475474), (-0.07209805, -0.03804901, 0.103475474), (-0.07075756, -0.052073553, 0.12745833), (-0.07075756, -0.052073553, 0.103475474), (-0.07075756, -0.03804901, 0.103475474), (-0.07075756, -0.03804901, 0.12745833), (-0.07209805, -0.03804901, 0.12745833), (-0.07209805, -0.034049034, 0.15544121), (-0.07209805, -0.034049034, 0.13145834), (-0.07209805, -0.05607353, 0.13145834), (-0.07209805, -0.07009806, 0.13145834), (-0.07075756, -0.07009806, 0.15544121), (-0.07075756, -0.07009806, 0.13145834), (-0.07075756, -0.05607353, 0.15544121), (-0.07075756, -0.05607353, 0.13145834), (-0.07209805, -0.052073553, 0.1594412), (-0.07209805, -0.052073553, 0.18342407), (-0.07075756, -0.03804901, 0.18342407), (-0.07075756, -0.03804901, 0.1594412), (-0.07075756, -0.052073553, 0.18342407), (-0.07075756, -0.052073553, 0.1594412), (-0.07209805, -0.020024529, 0.15544121), (-0.07075756, -0.020024529, 0.15544121), (-0.07075756, -0.034049034, 0.15544121), (-0.07075756, -0.020024529, 0.13145834), (-0.07075756, -0.034049034, 0.13145834), (-0.07209805, -0.016024513, 0.18342407), (-0.07209805, -0.0020000075, 0.18342407), (-0.07209805, -0.016024513, 0.1594412), (-0.07209805, -0.0020000075, 0.1594412), (-0.07075756, -0.0020000075, 0.18342407), (-0.07075756, -0.016024513, 0.18342407), (-0.07075756, -0.0020000075, 0.1594412), (-0.07075756, -0.016024513, 0.1594412), (-0.07209805, 0.016024513, 0.15544121), (-0.07209805, 0.0020000075, 0.15544121), (-0.07209805, 0.016024513, 0.13145834), (-0.07209805, 0.0020000075, 0.13145834), (-0.07075756, 0.016024513, 0.15544121), (-0.07075756, 0.016024513, 0.13145834), (-0.07075756, 0.0020000075, 0.15544121), (-0.07075756, 0.0020000075, 0.13145834), (-0.07209805, -0.0020000075, 0.12745833), (-0.07209805, -0.016024513, 0.12745833), (-0.07075756, -0.0020000075, 0.103475474), (-0.07075756, -0.0020000075, 0.12745833), (-0.07075756, -0.016024513, 0.12745833), (-0.07075756, -0.016024513, 0.103475474), (-0.07209805, -0.016024513, 0.103475474), (-0.07209805, -0.020024529, 0.09947546), (-0.07209805, -0.034049034, 0.09947546), (-0.07075756, -0.034049034, 0.075492606), (-0.07075756, -0.020024529, 0.075492606), (-0.07075756, -0.034049034, 0.09947546), (-0.07075756, -0.020024529, 0.09947546), (-0.09651226, -0.09651226, 0.18568397), (-0.099999994, -0.099999994, 0.18572111), (-0.074999996, -0.099999994, 0.18572111), (-0.072384186, -0.09651226, 0.18568397), (-0.06976837, -0.09302452, 0.18564685), (-0.04825611, -0.09651226, 0.18568397), (-0.09302452, -0.09302452, 0.18564685), (-0.049999997, -0.099999994, 0.18572111), (-0.024999999, -0.099999994, 0.18572111), (-0.0671526, -0.089536764, 0.18560971), (-0.04476837, -0.089536764, 0.18560971), (-0.04651226, -0.09302452, 0.18564685), (-0.02325611, -0.09302452, 0.18564685), (-0.024128074, -0.09651226, 0.18568397), (0, -0.09651226, 0.18568397), (0, -0.099999994, 0.18572111), (0.024999999, -0.099999994, 0.18572111), (-0.04302452, -0.08604902, 0.18557258), (-0.02151226, -0.08604902, 0.18557258), (-0.022384185, -0.08953678, 0.18560971), (0, -0.089536764, 0.18560971), (0, -0.09302452, 0.18564685), (0.02325611, -0.09302452, 0.18564685), (0.024128074, -0.09651226, 0.18568397), (0.04825611, -0.09651226, 0.18568397), (0.049999997, -0.099999994, 0.18572111), (0.074999996, -0.099999994, 0.18572111), (-0.020640334, -0.082561284, 0.18553546), (0, -0.082561284, 0.18553546), (0, -0.08604902, 0.18557258), (0.02151226, -0.08604902, 0.18557258), (0.022384185, -0.089536764, 0.18560971), (0.04476837, -0.089536764, 0.18560971), (0.04651226, -0.09302452, 0.18564685), (0.06976837, -0.09302452, 0.18564685), (0.072384186, -0.09651226, 0.18568397), (0.09651226, -0.09651226, 0.18568397), (0.099999994, -0.099999994, 0.18572111), (0.09302452, -0.09302452, 0.18564685), (0.08953678, -0.089536764, 0.18560971), (0.0671526, -0.08953678, 0.18560971), (0.06453678, -0.08604902, 0.18557258), (0.086049005, -0.08604902, 0.18557258), (0.0825613, -0.082561284, 0.18553546), (0.04302452, -0.08604902, 0.18557258), (0.04128063, -0.082561284, 0.18553546), (0.061920967, -0.082561284, 0.18553546), (0.05930515, -0.07907354, 0.18549833), (0.079073526, -0.07907354, 0.18549833), (0.07558578, -0.07558578, 0.18546121), (0.020640334, -0.082561284, 0.18553546), (0.01976837, -0.07907354, 0.18549833), (0.03953678, -0.07907354, 0.18549834), (0.03779289, -0.07558578, 0.18546121), (0.056689337, -0.075585805, 0.18546121), (0, -0.07907354, 0.18549833), (0.018896446, -0.075585805, 0.18546121), (0.036049042, -0.07209805, 0.18542407), (0.03804901, -0.07209805, 0.18342407), (0.03804901, -0.07209805, 0.1594412), (0.052073553, -0.07209805, 0.18342407), (0.020024529, -0.07209805, 0.15544121), (0.020024529, -0.07209805, 0.13145834), (0.03804901, -0.07075756, 0.1594412), (0.03804901, -0.07075756, 0.18342407), (0.052073553, -0.07075756, 0.18342407), (0.052073553, -0.07075756, 0.1594412), (0.034049034, -0.07075756, 0.15544121), (0.020024529, -0.07075756, 0.15544121), (0.020024529, -0.07075756, 0.13145834), (0.034049034, -0.07075756, 0.13145834), (0.079073526, 0.01976837, 0.18549833), (0.079073526, 0.03953678, 0.18549834), (0.07558578, 0.03779289, 0.18546121), (0.07558578, 0.018896446, 0.18546121), (0.016024513, 0.07075756, 0.075492606), (0.016024513, 0.07075756, 0.09947546), (0.0020000075, 0.07075756, 0.075492606), (0.0020000075, 0.07075756, 0.09947546), (0.07075756, 0.07009807, 0.09947546), (0.07075756, 0.05607353, 0.09947546), (0.07075756, 0.05607353, 0.075492606), (0.07075756, 0.07009807, 0.075492606), (0.07209805, 0.05607353, 0.075492606), (0.07209805, 0.052073553, 0.103475474), (0.07209805, 0.052073553, 0.12745833), (0.07209805, 0.03804901, 0.12745833), (0.07209805, 0.03804901, 0.103475474), (0.07209805, 0.034049034, 0.09947546), (0.07209805, 0.034049034, 0.075492606), (0.07075756, 0.03804901, 0.12745833), (0.07075756, 0.052073553, 0.12745833), (0.07075756, 0.03804901, 0.103475474), (0.07075756, 0.052073553, 0.103475474), (0.07075756, 0.020024529, 0.09947546), (0.07075756, 0.034049034, 0.09947546), (0.07075756, 0.020024529, 0.075492606), (0.07075756, 0.034049034, 0.075492606), (0.07209805, 0.016024513, 0.0714926), (0.07209805, 0.016024513, 0.047509726), (0.07075756, 0.0020000075, 0.0714926), (0.07075756, 0.0020000075, 0.047509726), (0.07075756, 0.016024513, 0.0714926), (0.07075756, 0.016024513, 0.047509726), (0.07209805, 0.0020000075, 0.015526848), (0.07209805, 0.016024513, 0.015526848), (0.07209805, -0.0020000075, 0.04350973), (0.07209805, -0.016024513, 0.04350973), (0.07075756, 0.0020000075, -0.008456021), (0.07075756, 0.0020000075, 0.015526848), (0.07075756, 0.016024513, -0.008456021), (0.07075756, 0.016024513, 0.015526848), (0.07075756, -0.0020000075, 0.04350973), (0.07075756, -0.0020000075, 0.019526843), (0.07075756, -0.016024513, 0.019526843), (0.07075756, -0.016024513, 0.04350973), (0.07209805, 0.020024529, -0.036438882), (0.07209805, 0.020024529, -0.012456035), (0.07075756, 0.034049034, -0.036438882), (0.07075756, 0.020024529, -0.036438882), (0.07075756, 0.034049034, -0.012456035), (0.07075756, 0.020024529, -0.012456035), (0.07209805, 0.052073553, -0.008456021), (0.07075756, 0.052073553, -0.008456021), (0.07075756, 0.03804901, -0.008456021), (0.07075756, 0.052073553, 0.015526828), (0.07075756, 0.03804901, 0.015526828), (0.07209805, 0.05607353, -0.036438882), (0.07209805, 0.07009807, -0.036438882), (0.07209805, 0.05607353, -0.012456035), (0.07209805, 0.07009807, -0.012456035), (0.07075756, 0.07009807, -0.036438882), (0.07075756, 0.05607353, -0.036438882), (0.07075756, 0.07009807, -0.012456035), (0.07075756, 0.05607353, -0.012456035), (0.052073553, 0.07209805, -0.036438882), (0.05607353, 0.07209805, -0.008456021), (0.03804901, 0.07075756, -0.036438882), (0.052073553, 0.07075756, -0.036438882), (0.03804901, 0.07075756, -0.012456035), (0.052073553, 0.07075756, -0.012456035), (0.05607353, 0.07075756, -0.008456021), (0.05607353, 0.07075756, 0.015526848), (0.07009807, 0.07075756, -0.008456021), (0.07009807, 0.07075756, 0.015526848), (0.016024513, -0.07075756, 0.015526848), (0.0020000075, -0.07075756, 0.015526848), (0.0020000075, -0.07075756, -0.008456021), (0.016024513, -0.07075756, -0.008456021), (0.0020000075, -0.07209805, -0.008456021), (-0.018024521, -0.07209805, 0.017526835), (-0.018024521, -0.07209805, -0.010456027), (-0.0020000075, -0.07209805, 0.019526843), (-0.016024513, -0.07209805, -0.012456035), (-0.0020000075, -0.07075756, 0.04350973), (-0.016024513, -0.07075756, 0.04350973), (-0.016024513, -0.07075756, 0.019526843), (-0.0020000075, -0.07075756, 0.019526843), (-0.016024513, -0.07209805, 0.019526843), (-0.036049042, -0.07209805, 0.04550972), (-0.036049042, -0.07209805, 0.017526835), (-0.020024529, -0.07209805, 0.047509726), (-0.034049034, -0.07209805, 0.015526828), (-0.020024529, -0.07209805, 0.015526828), (-0.020024529, -0.07075756, 0.0714926), (-0.034049034, -0.07075756, 0.0714926), (-0.034049034, -0.07075756, 0.047509726), (-0.020024529, -0.07075756, 0.047509726), (-0.034049034, -0.07209805, 0.047509726), (-0.034049034, -0.07209805, -0.008456021), (-0.036049042, -0.07209805, -0.010456027), (-0.054073524, -0.07209805, 0.017526835), (-0.054073524, -0.07209805, -0.010456027), (-0.03804901, -0.07209805, 0.019526843), (-0.03804901, -0.07209805, 0.04350971), (-0.034049034, -0.07075756, -0.008456021), (-0.034049034, -0.07075756, 0.015526828), (-0.020024529, -0.07075756, 0.015526828), (-0.020024529, -0.07075756, -0.008456021), (-0.020024529, -0.07209805, -0.008456021), (-0.016024513, -0.07209805, -0.036438882), (-0.036049042, -0.07209805, -0.03843889), (-0.054073524, -0.07209805, -0.03843889), (-0.051991843, -0.06932243, -0.038595904), (-0.06932243, -0.06932243, -0.038595904), (-0.016024513, -0.07075756, -0.036438882), (-0.0020000075, -0.07075756, -0.036438882), (-0.0020000075, -0.07075756, -0.012456035), (-0.016024513, -0.07075756, -0.012456035), (-0.03804901, -0.07209805, -0.012456035), (-0.03804901, -0.07209805, -0.036438882), (-0.052073553, -0.07209805, -0.012456035), (-0.07209805, -0.07209805, -0.010456027), (-0.07209805, -0.07209805, -0.03843889), (-0.05607353, -0.07209805, -0.008456021), (-0.052073553, -0.07209805, -0.036438882), (-0.07209805, -0.054073542, -0.03843889), (-0.07209805, -0.07009806, -0.036438882), (-0.05607353, -0.07209805, 0.015526848), (-0.07209805, -0.07009806, -0.012456035), (-0.03804901, -0.07075756, -0.012456035), (-0.03804901, -0.07075756, -0.036438882), (-0.052073553, -0.07075756, -0.036438882), (-0.052073553, -0.07075756, -0.012456035), (-0.07009807, -0.07209805, -0.008456021), (-0.07209805, -0.07209805, 0.017526856), (-0.05607353, -0.07075756, -0.008456021), (-0.05607353, -0.07075756, 0.015526848), (-0.07009807, -0.07075756, -0.008456021), (-0.07009807, -0.07075756, 0.015526848), (-0.07009807, -0.07209805, 0.015526848), (-0.07209805, -0.054073542, -0.010456027), (-0.07209805, -0.05607353, -0.012456035), (-0.07075756, -0.05607353, -0.012456035), (-0.07075756, -0.07009806, -0.012456035), (-0.07075756, -0.05607353, -0.036438882), (-0.07075756, -0.07009806, -0.036438882), (-0.07209805, -0.05607353, -0.036438882), (-0.054073524, -0.07209805, 0.04550972), (-0.052073553, -0.07209805, 0.019526843), (-0.07209805, -0.07009806, 0.04350973), (-0.07209805, -0.07009806, 0.019526843), (-0.07209805, -0.052073553, 0.015526828), (-0.07075756, -0.07009806, 0.019526843), (-0.07075756, -0.05607353, 0.019526843), (-0.07075756, -0.07009806, 0.04350973), (-0.07075756, -0.05607353, 0.04350973), (-0.07209805, -0.052073553, -0.008456021), (-0.07075756, -0.03804901, 0.015526828), (-0.07075756, -0.03804901, -0.008456021), (-0.07075756, -0.052073553, 0.015526828), (-0.07075756, -0.052073553, -0.008456021), (-0.07209805, -0.036049042, -0.03843889), (-0.07209805, -0.034049034, -0.012456035), (-0.06932243, -0.051991843, -0.038595904), (-0.06654682, -0.06654682, -0.038752917), (-0.047828406, -0.06377121, -0.03890993), (-0.03049778, -0.060995597, -0.039066903), (-0.014554977, -0.058219966, -0.03922388), (0, -0.055444352, -0.039380893), (0.01316719, -0.052668724, -0.039537907), (0.024946555, -0.04989311, -0.03969492), (0.037419852, -0.04989311, -0.055693567), (0.04989311, -0.04989311, -0.07169222), (0.04989311, -0.037419852, -0.087690905), (0.04989311, -0.024946555, -0.10368955), (0.04989311, -0.012473297, -0.119688205), (0.04989311, 0, -0.13568689), (0.04989311, 0.012473297, -0.15168558), (0.04989311, 0.024946555, -0.16768418), (0.047943648, 0.035957716, -0.16768602), (0.045994148, 0.045994148, -0.16768782), (0.033033524, 0.044044685, -0.1676896), (0.021047592, 0.04209522, -0.16769144), (0.01003643, 0.04014572, -0.16769327), (0, 0.03819626, -0.16769506), (-0.009061699, 0.036246758, -0.16769685), (-0.017148627, 0.034297295, -0.16769868), (-0.02572296, 0.034297295, -0.18244417), (-0.034297295, 0.034297295, -0.19718961), (-0.034297295, 0.02572296, -0.21193506), (-0.034297295, 0.017148627, -0.22668055), (-0.034297295, 0.008574333, -0.24142602), (-0.034297295, 0, -0.25617146), (-0.034297295, -0.008574333, -0.2709169), (-0.034297295, -0.017148627, -0.28566238), (-0.033851318, -0.025388489, -0.2856697), (-0.03340534, -0.03340534, -0.28567708), (-0.024719544, -0.0329594, -0.28568444), (-0.016256714, -0.03251343, -0.28569177), (-0.008016854, -0.03206745, -0.2856991), (0, -0.031621512, -0.28570643), (0.0077938843, -0.031175537, -0.28571373), (0.015364799, -0.030729597, -0.2857211), (0.023047179, -0.030729597, -0.28471574), (0.030729597, -0.030729597, -0.28371033), (0.030729597, -0.023047179, -0.28270498), (0.030729597, -0.015364799, -0.28169963), (0.030729597, -0.0076823807, -0.28069425), (0.030729597, 0, -0.2796889), (0.030729597, 0.0076823807, -0.27868348), (0.030729597, 0.015364799, -0.27767813), (0.07209805, -0.07009806, 0.1594412), (0.07075756, -0.07009806, 0.1594412), (0.07075756, -0.05607353, 0.1594412), (0.07075756, -0.05607353, 0.18342407), (0.07075756, -0.07009806, 0.18342407), (-0.07209805, 0.07009807, 0.1594412), (-0.07075756, 0.07009807, 0.1594412), (-0.07075756, 0.05607353, 0.1594412), (-0.07075756, 0.05607353, 0.18342407), (-0.07075756, 0.07009807, 0.18342407), (-0.07209805, -0.034049034, -0.036438882), (-0.07209805, -0.020024529, -0.036438882), (-0.07075756, -0.034049034, -0.012456035), (-0.07075756, -0.034049034, -0.036438882), (-0.07075756, -0.020024529, -0.036438882), (-0.07075756, -0.020024529, -0.012456035), (-0.05607353, -0.07209805, 0.047509726), (-0.05607353, -0.07075756, 0.047509726), (-0.07009807, -0.07075756, 0.047509726), (-0.05607353, -0.07075756, 0.0714926), (-0.07009807, -0.07075756, 0.0714926), (-0.05607353, -0.07209805, 0.0714926), (-0.052073553, -0.07209805, 0.04350971), (-0.052073553, -0.07075756, 0.019526843), (-0.052073553, -0.07075756, 0.04350971), (-0.03804901, -0.07075756, 0.04350971), (-0.03804901, -0.07075756, 0.019526843), (-0.03804901, -0.07209805, 0.075492606), (-0.03804901, -0.07209805, 0.09947546), (-0.052073553, -0.07209805, 0.075492606), (-0.052073553, -0.07209805, 0.09947546), (-0.03804901, -0.07075756, 0.09947546), (-0.03804901, -0.07075756, 0.075492606), (-0.052073553, -0.07075756, 0.075492606), (-0.052073553, -0.07075756, 0.09947546), (-0.05607353, 0.07209805, -0.036438882), (-0.05607353, 0.07209805, -0.012456035), (-0.07009807, 0.07075756, -0.036438882), (-0.05607353, 0.07075756, -0.036438882), (-0.07009807, 0.07075756, -0.012456035), (-0.05607353, 0.07075756, -0.012456035), (-0.07209805, 0.05607353, -0.008456021), (-0.07075756, 0.05607353, -0.008456021), (-0.07075756, 0.05607353, 0.015526848), (-0.07075756, 0.07009807, -0.008456021), (-0.07075756, 0.07009807, 0.015526848)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0.875, 1), (1, 1), (1, 0.875), (0.875, 0.875), (0.75, 0.875), (0.875, 0.75), (0.75, 1), (1, 0.75), (0.625, 1), (1, 0.625), (0.625, 0.875), (0.5, 0.875), (0.625, 0.75), (0.5, 1), (0.375, 1), (0.75, 0.75), (0.75, 0.625), (0.875, 0.625), (0.875, 0.5), (1, 0.5), (1, 0.375), (0.375, 0.875), (0.25, 0.875), (0.375, 0.75), (0.25, 1), (0.125, 1), (0.5, 0.75), (0.5, 0.625), (0.625, 0.625), (0.625, 0.5), (0.75, 0.5), (0.75, 0.375), (0.875, 0.375), (0.875, 0.25), (1, 0.25), (1, 0.125), (0.875, 0.125), (0.75, 0.125), (0.875, 0), (1, 0), (0.75, 0), (0.625, 0), (0.75, 0.25), (0.625, 0.25), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.375, 0), (0.625, 0.375), (0.5, 0.375), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.125, 0), (0.5, 0.5), (0.375, 0.5), (0.375, 0.375), (0.25, 0.375), (0.25, 0.25), (0.125, 0.25), (0.125, 0.125), (0, 0.125), (0, 0), (0, 0.25), (0, 0.375), (0.125, 0.375), (0.125, 0.5), (0, 0.5), (0, 0.625), (0.25, 0.5), (0.25, 0.625), (0.125, 0.625), (0.125, 0.75), (0, 0.75), (0, 0.875), (0.375, 0.625), (0.25, 0.75), (0.125, 0.875), (0, 1), (1, 0.125), (1, 0), (0.875, 0), (0.875, 0.125), (0.875, 0.25), (0.75, 0.125), (1, 0.25), (0.75, 0), (1, 0.375), (0.625, 0), (0.875, 0.375), (0.875, 0.5), (0.75, 0.375), (1, 0.5), (1, 0.625), (0.75, 0.25), (0.625, 0.25), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.375, 0), (0.875, 0.625), (0.875, 0.75), (0.75, 0.625), (1, 0.75), (1, 0.875), (0.75, 0.5), (0.625, 0.5), (0.625, 0.375), (0.5, 0.375), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.125, 0), (0.125, 0.125), (0.125, 0.25), (0, 0.125), (0, 0), (0, 0.25), (0, 0.375), (0.25, 0.25), (0.25, 0.375), (0.125, 0.375), (0.125, 0.5), (0, 0.5), (0, 0.625), (0.375, 0.375), (0.375, 0.5), (0.25, 0.5), (0.25, 0.625), (0.125, 0.625), (0.125, 0.75), (0, 0.75), (0, 0.875), (0.5, 0.5), (0.5, 0.625), (0.375, 0.625), (0.375, 0.75), (0.25, 0.75), (0.25, 0.875), (0.125, 0.875), (0.125, 1), (0, 1), (0.25, 1), (0.375, 1), (0.375, 0.875), (0.5, 0.875), (0.5, 1), (0.625, 1), (0.5, 0.75), (0.625, 0.75), (0.625, 0.875), (0.75, 0.875), (0.75, 1), (0.875, 1), (0.625, 0.625), (0.75, 0.75), (0.875, 0.875), (1, 1), (1, 0.125), (1, 0), (0.875, 0), (0.875, 0.125), (0.875, 0.25), (0.75, 0.125), (1, 0.25), (0.75, 0), (1, 0.375), (0.625, 0), (0.875, 0.375), (0.875, 0.5), (0.75, 0.375), (1, 0.5), (1, 0.625), (0.75, 0.25), (0.625, 0.25), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.375, 0), (0.875, 0.625), (0.875, 0.75), (0.75, 0.625), (1, 0.75), (1, 0.875), (0.75, 0.5), (0.625, 0.5), (0.625, 0.375), (0.5, 0.375), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.125, 0), (0.125, 0.125), (0.125, 0.25), (0, 0.125), (0, 0), (0, 0.25), (0, 0.375), (0.25, 0.25), (0.25, 0.375), (0.125, 0.375), (0.125, 0.5), (0, 0.5), (0, 0.625), (0.375, 0.375), (0.375, 0.5), (0.25, 0.5), (0.25, 0.625), (0.125, 0.625), (0.125, 0.75), (0, 0.75), (0, 0.875), (0.5, 0.5), (0.5, 0.625), (0.375, 0.625), (0.375, 0.75), (0.25, 0.75), (0.25, 0.875), (0.125, 0.875), (0.125, 1), (0, 1), (0.25, 1), (0.375, 1), (0.625, 0.625), (0.625, 0.75), (0.5, 0.75), (0.5, 0.875), (0.375, 0.875), (0.75, 0.75), (0.75, 0.875), (0.625, 0.875), (0.625, 1), (0.5, 1), (0.517439, 1), (0.396798, 1), (0.638079, 1), (0.758719, 1), (0.651158, 1), (0.517439, 1), (0.875, 0.875), (0.875, 1), (1, 1), (1, 1), (0.75, 1), (0.87936, 1), (0.883719, 1), (1, 1), (1, 1), (0.767439, 1), (0.776158, 1), (0.888079, 1), (0.892439, 1), (1, 1), (1, 1), (0.896798, 1), (0.991281, 0.875), (0.883719, 0.875), (1, 1), (1, 1), (0.784877, 1), (0.677316, 1), (0.664237, 1), (0.552316, 1), (0.534877, 1), (0.508719, 0.875), (0.396798, 1), (0.366281, 0.875), (0.375, 1), (0.25, 1), (0.125, 1), (0.24564, 0.875), (0.366281, 0.75), (0.125, 0.875), (0, 1), (0.25, 0.75), (0.375, 0.625), (0.482561, 0.75), (0.508719, 0.75), (0.396798, 0.75), (0.517439, 0.625), (0.5, 0.5), (0.625, 0.375), (0.533897, 0.870313), (0.552316, 0.875), (0.534877, 0.75), (0.643852, 0.635133), (0.641732, 0.494934), (0.751414, 0.385133), (0.75, 0.25), (0.875, 0.125), (0.569755, 1), (0.677316, 0.875), (0.660584, 0.755067), (0.768852, 0.635133), (0.752827, 0.520266), (0.876414, 0.385133), (0.875062, 0.25596), (1, 0.125), (1, 0), (0.780518, 0.875), (0.883719, 0.75), (0.784877, 0.75), (0.892439, 0.625), (0.891732, 0.494934), (1, 0.375), (1, 0), (1, 0.125), (1, 0), (0.982561, 0.75), (0.991281, 0.75), (1, 0.25), (0.896798, 0.75), (1, 0.625), (0.999615, 0.869487), (1, 0.875), (1, 1), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.5), (1, 0.75), (1, 0.25), (1, 0.5), (1, 0.625), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.75), (1, 0.875), (1, 0.625), (1, 0.75), (1, 0.5), (1, 0.625), (1, 0.5), (1, 0.75), (1, 0.625), (1, 0.75), (1, 0.875), (1, 1), (1, 0.75), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.625), (1, 0.875), (1, 0.75), (1, 0.875), (1, 0.875), (1, 1), (1, 1), (1, 0.875), (1, 0.75), (1, 0.875), (1, 0.75), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.75), (1, 0.75), (1, 0.75), (1, 0.875), (1, 1), (1, 0.75), (1, 0.625), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.875), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.5), (1, 0.5), (1, 0.625), (1, 0.5), (1, 0.5), (1, 0.5), (1, 0.5), (1, 0.625), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.625), (1, 0.75), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.625), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.75), (1, 0.625), (1, 0.75), (1, 0.625), (1, 0.75), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.875), (1, 1), (1, 1), (1, 0.875), (1, 1), (1, 0.875), (1, 0.875), (1, 1), (1, 1), (1, 0.875), (1, 1), (0.875, 1), (0.875, 1), (1, 1), (1, 1), (0.875, 1), (1, 1), (0.875, 1), (0.875, 1), (0.875, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.875, 1), (0.75, 1), (1, 1), (1, 1), (0.875, 1), (0.875, 1), (0.875, 1), (0.75, 1), (0.75, 1), (0.75, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.875, 1), (0.875, 1), (0.875, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.625, 1), (0.875, 1), (0.875, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0.875, 1), (1, 1), (0.875, 1), (0.75, 1), (1, 1), (1, 1), (1, 0.875), (1, 0.875), (1, 0.875), (1, 0.875), (1, 1), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.75), (1, 0.875), (1, 0.75), (1, 1), (0.875, 1), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.75), (1, 0.75), (1, 1), (1, 0.875), (1, 1), (1, 1), (1, 0.875), (1, 1), (1, 1), (0.875, 1), (1, 1), (0.875, 1), (0.875, 1), (1, 1), (1, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.759624, 1), (0.625, 1), (0.75, 1), (0.75, 1), (1, 1), (0.875, 1), (0.875, 1), (1, 1), (0.875, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.875, 1), (0.875, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.625, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.5, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.5, 1), (0.5, 1), (0.375, 1), (0.375, 1), (0.375, 1), (0.375, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.392439, 1), (0.625, 1), (0.5, 1), (0.5, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.25, 1), (0.25, 1), (0.25, 1), (0.25, 1), (0.366281, 1), (0.125, 1), (0.125, 1), (0.271798, 1), (0.383719, 1), (0.125, 1), (0.25, 1), (0.255129, 1), (0.366281, 1), (0.482561, 1), (0.383719, 1), (0.125, 1), (0.25, 1), (0.375, 1), (0, 1), (0.271798, 1), (0.392439, 1), (0.5, 1), (0.625, 1), (0, 1), (0.125, 1), (0.513079, 1), (0.633719, 1), (0.401158, 1), (0.75, 1), (0.875, 1), (0.284877, 1), (0.177316, 1), (0.280518, 1), (0.177316, 1), (0.284877, 1), (0.383719, 1), (0.521798, 1), (0.616281, 1), (0.75, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.875, 1), (0.744102, 1), (0.616281, 1), (0.875, 1), (0.75, 1), (0.625, 1), (0.482561, 1), (0.383719, 1), (0.521798, 1), (0.392439, 1), (0.5, 1), (0.375, 1), (0.280518, 1), (0.177316, 1), (0.284877, 1), (0.383719, 1), (0.271798, 1), (0.366281, 1), (0.25, 1), (0.125, 1), (0.069755, 1), (0.177316, 1), (0.288583, 1), (0.383719, 1), (0.482561, 1), (0.366281, 1), (0.24564, 1), (0.125, 1), (0, 1), (0, 0.875), (0.289237, 1), (0.401158, 1), (0.284877, 1), (0.392439, 1), (0.271798, 1), (0.375, 1), (0.25, 1), (0.25, 0.875), (0.125, 0.875), (0.125, 0.75), (0, 0.75), (0, 0.625), (0.125, 0.625), (0.125, 0.5), (0.25, 0.625), (0, 0.5), (0, 0.375), (0.25, 0.75), (0.375, 0.75), (0.375, 0.875), (0.5, 0.875), (0.5, 1), (0.625, 1), (0.513079, 1), (0.633719, 1), (0.517439, 1), (0.75436, 1), (0.875, 1), (1, 1), (1, 0.875), (0.75, 1), (0.75, 0.875), (0.875, 0.875), (0.875, 0.75), (1, 0.75), (1, 0.625), (0.625, 0.875), (0.625, 0.75), (0.75, 0.75), (0.75, 0.625), (0.875, 0.625), (0.875, 0.5), (1, 0.5), (1, 0.375), (0.5, 0.75), (0.5, 0.625), (0.625, 0.625), (0.625, 0.5), (0.75, 0.5), (0.75, 0.375), (0.875, 0.375), (0.875, 0.25), (1, 0.25), (1, 0.125), (0.375, 0.625), (0.375, 0.5), (0.5, 0.5), (0.5, 0.375), (0.625, 0.375), (0.625, 0.25), (0.75, 0.25), (0.75, 0.125), (0.875, 0.125), (0.875, 0), (1, 0), (0.75, 0), (0.625, 0), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.375, 0), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.125, 0), (0.375, 0.375), (0.25, 0.375), (0.25, 0.25), (0.125, 0.25), (0.125, 0.125), (0, 0.125), (0, 0), (0, 0.25), (0.125, 0.375), (0.25, 0.5), (1, 0.125), (1, 0), (0.875, 0), (0.875, 0.125), (0.875, 0.25), (0.75, 0.125), (1, 0.25), (0.75, 0), (1, 0.375), (0.625, 0), (0.875, 0.375), (0.875, 0.5), (0.75, 0.375), (1, 0.5), (1, 0.625), (0.75, 0.25), (0.625, 0.25), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.375, 0), (0.875, 0.625), (0.875, 0.75), (0.75, 0.625), (1, 0.75), (1, 0.875), (0.75, 0.5), (0.625, 0.5), (0.625, 0.375), (0.5, 0.375), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.125, 0), (0.125, 0.125), (0.125, 0.25), (0, 0.125), (0, 0), (0, 0.25), (0, 0.375), (0.25, 0.25), (0.25, 0.375), (0.125, 0.375), (0.125, 0.5), (0, 0.5), (0, 0.625), (0.375, 0.375), (0.375, 0.5), (0.25, 0.5), (0.25, 0.625), (0.125, 0.625), (0.125, 0.75), (0, 0.75), (0, 0.875), (0.5, 0.5), (0.5, 0.625), (0.375, 0.625), (0.375, 0.75), (0.25, 0.75), (0.25, 0.875), (0.125, 0.875), (0.125, 1), (0, 1), (0, 1), (0.625, 0.625), (0.625, 0.75), (0.5, 0.75), (0.5, 0.875), (0.375, 0.875), (0.375, 1), (0.25, 1), (0.241281, 1), (0.5, 1), (0.12064, 1), (0.116281, 1), (0, 1), (0.625, 1), (0.241281, 1), (0, 1), (0.625, 0.875), (0.75, 0.875), (0.75, 1), (0.875, 1), (0.75, 0.75), (0.875, 0.875), (1, 1), (0.021799, 0.875), (0.017439, 0.875), (0.133719, 0.875), (0, 1), (0, 1), (0.232561, 1), (0.258719, 0.875), (0.016732, 0.880066), (0.001414, 0.864867), (0.018852, 0.739867), (0, 1), (0, 1), (0.034877, 0.75), (0.052316, 0.625), (0.158896, 0.754686), (0.177316, 0.625), (0.271798, 0.875), (0.392439, 0.875), (0.375, 1), (0.25, 1), (0.5, 1), (0.625, 1), (0.284877, 0.75), (0.401158, 0.75), (0.513079, 0.875), (0.633719, 0.875), (0.75, 1), (0.875, 1), (0.75436, 0.875), (0.633719, 0.75), (0.875, 0.875), (1, 1), (0.75, 0.75), (0.625, 0.625), (0.517439, 0.75), (0.401158, 0.625), (0.513079, 0.625), (0.392439, 0.5), (0.5, 0.5), (0.375, 0.375), (0.289237, 0.625), (0.177316, 0.5), (0.284877, 0.5), (0.258719, 0.5), (0.271798, 0.375), (0.241281, 0.375), (0.25, 0.25), (0.125, 0.125), (0.069755, 0.5), (0.052316, 0.5), (0.155518, 0.5), (0.133719, 0.5), (0.232561, 0.5), (0.116281, 0.375), (0.124615, 0.255514), (0, 0.125), (0, 0), (0.035584, 0.619933), (0.018852, 0.614867), (0.002827, 0.729734), (0.001414, 0.739867), (0.034877, 0.5), (0.017439, 0.5), (0.016732, 0.630066), (0, 0.625), (0.000062, 0.86904), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0.021798, 0.375), (0, 0.375), (0, 0.5), (0, 0.25), (0, 0.5), (0, 0.375), (0, 0.5), (0, 0.5), (0, 0.25), (0, 0.125), (0, 0.375), (0, 0.25), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.375), (0, 0.125), (0, 0), (0, 0.25), (0, 0.25), (0, 0.375), (0, 0.375), (0, 0.375), (0, 0.125), (0, 0.25), (0, 0.125), (0, 0.125), (0, 0), (0, 0), (0, 0.125), (0, 0.25), (0, 0.125), (0, 0.25), (0, 0.125), (0, 0.125), (0, 0.25), (0, 0.25), (0, 0.25), (0, 0.25), (0, 0.125), (0, 0), (0, 0.25), (0, 0.375), (0, 0.375), (0, 0.25), (0, 0.375), (0, 0.375), (0, 0.375), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.375), (0, 0.25), (0, 0.375), (0, 0.5), (0, 0.25), (0, 0.125), (0, 0.5), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.5), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.5), (0, 0.375), (0, 0.5), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.625), (0, 0.75), (0, 0.75), (0, 0.625), (0, 0.625), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.5), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.75), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.375), (0, 0.375), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.75), (0, 0.75), (0, 0.625), (0, 0.75), (0, 0.75), (0, 0.875), (0, 0.875), (0, 0.875), (0, 0.625), (0, 0.75), (0, 0.75), (0, 0.625), (0, 0.75), (0, 0.875), (0, 0.875), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.75), (0, 0.875), (0, 1), (0, 1), (0, 0.875), (0, 1), (0, 1), (0, 1), (0.125, 1), (0, 1), (0, 1), (0, 0.875), (0, 1), (0.125, 1), (0.125, 1), (0.125, 1), (0.125, 1), (0, 1), (0, 1), (0.125, 1), (0.125, 1), (0.25, 1), (0.25, 1), (0.25, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0, 1), (0, 1), (0.125, 1), (0.125, 1), (0.125, 1), (0.125, 1), (0, 1), (0.125, 1), (0.125, 1), (0.375, 1), (0, 1), (0, 0.875), (0.25, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.125, 1), (0.125, 1), (0.25, 1), (0.25, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.375, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.5, 1), (0.5, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.75, 1), (0.625, 1), (0.75, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.875, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.5, 1), (0.480751, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0.600939, 1), (0.615376, 1), (0.375, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.240376, 1), (0.125, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.125, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0, 1), (0, 1), (0.125, 1), (0.125, 1), (0, 1), (0, 0.875), (0, 0.875), (0, 1), (0, 1), (0.125, 1), (0.125, 1), (0, 1), (0, 1), (0, 1), (0.125, 1), (0, 1), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0, 0.75), (0, 0.75), (0, 0.875), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.759624), (0, 0.625), (0, 0.75), (0, 0.625), (0, 0.625), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.5), (0, 0.5), (0, 0.625), (0, 0.480751), (0, 0.375), (0, 0.5), (0, 0.5), (0, 0.75), (0, 0.75), (0, 0.625), (0, 0.625), (0, 0.625), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.375), (0, 0.375), (0, 0.375), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.240376), (0, 0.375), (0, 0.125), (0, 0.25), (0, 0.375), (0, 0.5), (0, 0.375), (0, 0.360563), (0, 0.346127), (0, 0.25), (0, 0.5), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.25), (0, 0.125), (0, 0.125), (0, 0.25), (0, 0.25), (0, 0.25), (0, 0.125), (0, 0.375), (0, 0.5), (0, 0.125), (0, 0.25), (0, 0.125), (0, 0.25), (0, 0.125), (0, 0), (0, 0.125), (0, 0), (0, 0), (0.125, 0), (0, 0), (0, 0.125), (0, 0), (0, 0.120188), (0, 0.115376), (0, 0.230751), (0, 0.221127), (0, 0), (0, 0), (0.125, 0), (0.125, 0), (0, 0), (0.125, 0), (0, 0.125), (0, 0.125), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0.125), (0, 0), (0, 0.125), (0, 0.25), (0, 0.25), (0, 0.125), (0, 0.125), (0, 0.125), (0, 0.125), (0, 0.125), (0, 0.125), (0, 0.25), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.375), (0, 0.375), (0, 0.25), (0, 0.125), (0, 0.125), (0, 0.25), (0, 0.125), (0, 0), (0, 0), (0, 0.125), (0, 0), (0, 0.125), (0, 0), (0, 0), (0, 0.125), (0, 0), (0.125, 0), (0.125, 0), (0, 0), (0, 0), (0.125, 0), (0, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0.25, 0), (0, 0), (0, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.25, 0), (0.25, 0), (0.25, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.25, 0), (0.125, 0), (0.25, 0), (0.375, 0), (0.125, 0), (0.125, 0), (0, 0), (0, 0), (0, 0), (0.125, 0), (0, 0), (0.125, 0), (0.25, 0), (0.125, 0), (0, 0), (0, 0.125), (0, 0.125), (0, 0), (0.125, 0), (0, 0), (0.125, 0), (0, 0), (0.125, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.25, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.375, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.517439, 0.125), (0.375, 0), (0.5, 0), (0.5, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.741281, 0.125), (0.875, 0), (0.875, 0), (0.646798, 0.125), (0.633719, 0.25), (0.875, 0), (0.75, 0), (0.869102, 0.125), (0.866281, 0.25), (0.732561, 0.25), (0.758719, 0.375), (1, 0.125), (1, 0.25), (1, 0.375), (1, 0), (0.896798, 0.375), (0.892439, 0.5), (1, 0.5), (1, 0.625), (0.875, 0), (1, 0), (1, 0), (0.875, 0), (0.875, 0), (0.875, 0), (0.875, 0), (1, 0), (0.875, 0), (1, 0), (1, 0.125), (0.875, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.75, 0), (0.625, 0), (0.875, 0), (1, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0.5, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.75, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.375, 0), (0.375, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.625, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.25, 0), (0.25, 0), (0.375, 0), (0.25, 0), (0.375, 0), (0.5, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0.125, 0), (0, 0), (0, 0), (0.25, 0), (0.240376, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.120188, 0), (0.115376, 0), (0.375, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.519249, 0), (0.625, 0), (0.5, 0), (0, 0), (0, 0), (0.5, 0), (0, 0.110563), (0, 0.105751), (0.375, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.375, 0), (0, 0), (0.144249, 0), (0, 0), (0.149061, 0), (0.259624, 0), (0.230751, 0), (0.384624, 0), (0.399061, 0), (0, 0.100939), (0, 0.240376), (0, 0.134624), (0, 0.211502), (0, 0.317253), (0, 0.33169), (0, 0.442253), (0, 0.461502), (0, 0.615376), (0, 0.600939), (0, 0.269249), (0, 0.365376), (0, 0.259624), (0, 0.341314), (0, 0.442253), (0, 0.423004), (0, 0.567253), (0, 0.59292), (0, 0.740376), (0, 0.769249), (0, 0.884624), (0, 0.879812), (0, 1), (0, 0.461502), (0, 0.592623), (0, 0.480751), (0, 0.579938), (0, 0.717623), (0, 0.711502), (0, 0.855751), (0, 0.850939), (0, 1), (0, 1), (0.115376, 1), (0, 0.612315), (0, 0.736872), (0, 0.625), (0, 0.723744), (0, 0.861872), (0, 0.862315), (0, 1), (0, 1), (0.105751, 1), (0.110563, 1), (0.221127, 1), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.868085), (0, 1), (0, 1), (0.134624, 1), (0.100939, 1), (0.240376, 1), (0.211502, 1), (0.317253, 1), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0.125, 1), (0.131739, 1), (0.259624, 1), (0.269249, 1), (0.365376, 1), (0.341314, 1), (0.442253, 1), (0, 1), (0.125, 1), (0, 1), (0.125, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.350939, 1), (0.480751, 1), (0.461502, 1), (0.592623, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.612315, 1), (0.736872, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.875, 1), (1, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.75, 1), (0.75, 1), (0.875, 1), (0.875, 1), (1, 1), (1, 1), (1, 0.875), (0.625, 1), (0.75, 1), (0.625, 1), (0.75, 1), (0.875, 1), (0.875, 1), (1, 1), (1, 1), (1, 0.875), (1, 0.875), (1, 0.75), (0.75, 1), (0.875, 1), (0.759768, 1), (0.875, 1), (1, 1), (1, 1), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.75), (1, 0.625), (0.879884, 1), (1, 1), (0.884768, 1), (1, 1), (1, 0.875), (1, 0.875), (1, 0.75), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.5), (1, 1), (1, 0.884768), (1, 1), (1, 0.879884), (1, 0.759768), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.889652), (1, 0.779305), (1, 0.894537), (1, 0.769537), (1, 0.654305), (1, 0.639652), (1, 0.519537), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.25), (1, 0.789073), (1, 0.68361), (1, 0.759768), (1, 0.668957), (1, 0.55861), (1, 0.539073), (1, 0.384768), (1, 0.399421), (1, 0.240232), (1, 0.25), (1, 0.125), (1, 0.659189), (1, 0.55861), (1, 0.634768), (1, 0.578146), (1, 0.43361), (1, 0.407533), (1, 0.259768), (1, 0.230463), (1, 0.115232), (1, 0.120116), (1, 0), (1, 0.539073), (1, 0.407924), (1, 0.519537), (1, 0.420767), (1, 0.282924), (1, 0.289073), (1, 0.144537), (1, 0.149421), (1, 0), (1, 0), (0.884768, 0), (1, 0.387843), (1, 0.263387), (1, 0.375), (1, 0.276775), (1, 0.138387), (1, 0.137843), (1, 0), (1, 0), (0.894537, 0), (0.889652, 0), (0.779305, 0), (1, 0.25), (1, 0.125), (1, 0.25), (1, 0.132063), (1, 0), (1, 0), (0.865232, 0), (0.899421, 0), (0.759768, 0), (0.789073, 0), (0.68361, 0), (1, 0.125), (1, 0), (1, 0.125), (1, 0), (0.875, 0), (0.868122, 0), (0.740232, 0), (0.730463, 0), (0.634768, 0), (0.659189, 0), (0.55861, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.649421, 0), (0.519537, 0), (0.539073, 0), (0.407924, 0), (0.875, 0), (0.75, 0), (0.875, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.387843, 0), (0.263387, 0), (0.75, 0), (0.625, 0), (0.75, 0), (0.625, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.5, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0, 0), (0, 0), (0, 0.125), (0.375, 0), (0.25, 0), (0.375, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0, 0), (0, 0), (0, 0.125), (0, 0.125), (0, 0.25), (0.25, 0), (0.125, 0), (0.246749, 0), (0.125, 0), (0, 0), (0, 0), (0, 0.125), (0, 0.125), (0, 0.25), (0, 0.25), (0, 0.375), (0.123375, 0), (0, 0), (0.121749, 0), (0, 0), (0, 0.125), (0, 0.125), (0, 0.25), (0, 0.25), (0, 0.375), (0, 0.375), (0, 0.5), (0, 0), (0, 0.121749), (0, 0), (0, 0.123375), (0, 0.246749), (0, 0.25), (0, 0.375), (0, 0.375), (0, 0.5), (0, 0.5), (0, 0.625), (0, 0.120124), (0, 0.240248), (0, 0.118499), (0, 0.243499), (0, 0.365248), (0, 0.370124), (0, 0.493499), (0, 0.5), (0, 0.625), (0, 0.625), (0, 0.75), (0, 0.236997), (0, 0.355496), (0, 0.246749), (0, 0.360372), (0, 0.480496), (0, 0.486997), (0, 0.621749), (0, 0.616873), (0, 0.753251), (0, 0.75), (0, 0.875), (0, 0.363623), (0, 0.480496), (0, 0.371749), (0, 0.473994), (0, 0.605496), (0, 0.613796), (0, 0.746749), (0, 0.756501), (0, 0.878251), (0, 0.876625), (0, 1), (0, 0.486997), (0, 0.614891), (0, 0.493499), (0, 0.610193), (0, 0.739891), (0, 0.736997), (0, 0.868499), (0, 0.866873), (0, 1), (0, 1), (0.121749, 1), (0, 0.620302), (0, 0.746393), (0, 0.625), (0, 0.742785), (0, 0.871393), (0, 0.870302), (0, 1), (0, 1), (0.118499, 1), (0.120124, 1), (0.240248, 1), (0, 0.75), (0, 0.875), (0, 0.750001), (0, 0.873186), (0, 1), (0, 1), (0.128251, 1), (0.116873, 1), (0.246749, 1), (0.236997, 1), (0.355496, 1), (0, 0.875), (0, 1), (0, 0.875001), (0, 1), (0.125, 1), (0.126809, 1), (0.253251, 1), (0.256501, 1), (0.371749, 1), (0.363623, 1), (0.480496, 1), (0, 1), (0.124999, 1), (0, 1), (0.125, 1), (0.249999, 1), (0.25, 1), (0.375, 1), (0.366873, 1), (0.493499, 1), (0.486997, 1), (0.614891, 1), (0.125, 1), (0.249999, 1), (0.125, 1), (0.249999, 1), (0.374999, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0.625, 1), (0.620302, 1), (0.746393, 1), (0.25, 1), (0.375, 1), (0.249999, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0.625001, 1), (0.625, 1), (0.750001, 1), (0.75, 1), (0.875, 1), (0.375, 1), (0.5, 1), (0.374999, 1), (0.5, 1), (0.625, 1), (0.625, 1), (0.750001, 1), (0.750001, 1), (0.875001, 1), (0.875, 1), (1, 1), (0.5, 1), (0.625001, 1), (0.5, 1), (0.625, 1), (0.750001, 1), (0.75, 1), (0.875, 1), (0.875, 1), (1, 1), (1, 1), (1, 0.875001), (0.625, 1), (0.750001, 1), (0.625, 1), (0.750001, 1), (0.875001, 1), (0.875, 1), (1, 1), (1, 1), (1, 0.875), (1, 0.875), (1, 0.750001), (0.75, 1), (0.875, 1), (0.75, 0.875), (0.875001, 1), (1, 1), (1, 1), (1, 0.875001), (1, 0.875), (1, 0.750001), (1, 0.75), (1, 0.625), (1, 1), (1, 0.875), (1, 0.875), (1, 0.750001), (1, 0.750001), (1, 0.625001), (1, 0.625), (1, 0.5), (0.875, 0.875), (0.875, 0.75), (1, 0.75), (1, 0.625), (1, 0.624999), (1, 0.5), (1, 0.5), (1, 0.374999), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.249999), (1, 0.625), (1, 0.625001), (1, 0.750001), (1, 0.750001), (1, 0.875), (1, 0.875), (1, 1), (1, 1), (0.873186, 1), (0.871393, 1), (0.742785, 1), (0.739891, 1), (0.610193, 1), (0.605496, 1), (0.473994, 1), (0.480496, 1), (0.360372, 1), (0.365248, 1), (0.243499, 1), (0.246749, 1), (0.123375, 1), (0.125, 1), (0, 1), (0, 1), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.75), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.125), (0, 0.125), (0, 0), (0, 0), (0.132063, 0), (0.138387, 0), (0.276775, 0), (0.282924, 0), (0.420767, 0), (0.43361, 0), (0.578146, 0), (0.55861, 0), (0.668957, 0), (0.654305, 0), (0.769537, 0), (0.759768, 0), (0.879884, 0), (0.875, 0), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.375), (1, 0.5), (1, 0.5), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.75), (1, 0.875), (1, 0.875), (1, 1), (1, 1), (0.868085, 1), (0.861872, 1), (0.723744, 1), (0.717623, 1), (0.579938, 1), (0.567253, 1), (0.423004, 1), (0.442253, 1), (0.33169, 1), (0.346127, 1), (0.230751, 1), (0.120188, 1), (0.360563, 1), (0.461502, 1), (0, 1), (0.59292, 1), (0.740376, 1), (0.769249, 1), (0.884624, 1), (0.711502, 1), (0.855751, 1), (0.879812, 1), (0.850939, 1), (1, 1), (0.862315, 1), (1, 1), (1, 1), (1, 0.884624), (1, 1), (1, 0.894249), (1, 1), (1, 0.865376), (1, 0.879812), (1, 0.759624), (1, 0.889437), (1, 0.778873), (1, 0.899061), (1, 0.759624), (1, 0.868261), (1, 0.740376), (1, 0.769249), (1, 0.653873), (1, 0.788498), (1, 0.682747), (1, 0.730751), (1, 0.634624), (1, 0.75), (1, 0.625), (1, 0.66831), (1, 0.557747), (1, 0.658686), (1, 0.557747), (1, 0.649061), (1, 0.519249), (1, 0.625), (1, 0.5), (1, 0.576996), (1, 0.432747), (1, 0.538498), (1, 0.407377), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.420062), (1, 0.282377), (1, 0.387685), (1, 0.263128), (1, 0.375), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.276256), (1, 0.138128), (1, 0.25), (1, 0.125), (1, 0.25), (1, 0.125), (1, 0.25), (1, 0.125), (1, 0.131915), (1, 0), (1, 0.125), (1, 0), (1, 0.125), (1, 0), (1, 0.125), (1, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (0.875, 0), (0.75, 0), (0.875, 0), (0.75, 0), (0.875, 0), (0.75, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.75, 0), (0.625, 0), (0.75, 0), (0.625, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.5, 0), (0.639652, 0), (0.519537, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.375, 0), (0.539073, 0), (0.384768, 0), (0.375, 0), (0.25, 0), (0.375, 0), (0.25, 0), (0.399421, 0), (0.240232, 0), (0.407533, 0), (0.259768, 0), (0.25, 0), (0.125, 0), (0.25, 0), (0.125, 0), (0.230463, 0), (0.115232, 0), (0.289073, 0), (0.144537, 0), (0.125, 0), (0, 0), (0.120116, 0), (0, 0), (0.149421, 0), (0, 0), (0.137843, 0), (0, 0), (0, 0), (0, 0.125), (0, 0), (0, 0.115232), (0, 0), (0, 0.105463), (0, 0), (0, 0.134768), (0, 0.120116), (0, 0.240232), (0, 0.110348), (0, 0.220695), (0, 0.100579), (0, 0.240232), (0, 0.131878), (0, 0.259768), (0, 0.230463), (0, 0.345695), (0, 0.210927), (0, 0.31639), (0, 0.269537), (0, 0.365232), (0, 0.25), (0, 0.375), (0, 0.331043), (0, 0.44139), (0, 0.340811), (0, 0.44139), (0, 0.350579), (0, 0.480463), (0, 0.375), (0, 0.5), (0, 0.421854), (0, 0.56639), (0, 0.460927), (0, 0.592076), (0, 0.5), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.579233), (0, 0.717076), (0, 0.612157), (0, 0.736613), (0, 0.625), (0, 0.75), (0, 0.625), (0, 0.75), (0, 0.723225), (0, 0.861613), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.875), (0, 0.867937), (0, 1), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0, 1), (0.125, 1), (0, 1), (0.125, 1), (0, 1), (0.125, 1), (0, 1), (0.125, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0.25, 1), (0.375, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.375, 1), (0.5, 1), (0.370124, 1), (0.493499, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.5, 1), (0.625, 1), (0.486997, 1), (0.621749, 1), (0.625, 1), (0.75, 1), (0.625, 1), (0.75, 1), (0.616873, 1), (0.753251, 1), (0.613796, 1), (0.746749, 1), (0.75, 1), (0.875, 1), (0.75, 1), (0.875, 1), (0.756501, 1), (0.878251, 1), (0.736997, 1), (0.868499, 1), (0.875, 1), (1, 1), (0.876625, 1), (1, 1), (0.866873, 1), (1, 1), (0.870302, 1), (1, 1), (1, 1), (1, 0.875), (1, 1), (1, 0.878251), (1, 1), (1, 0.881501), (1, 1), (1, 0.871749), (1, 0.876625), (1, 0.753251), (1, 0.879876), (1, 0.759752), (1, 0.883127), (1, 0.753251), (1, 0.873191), (1, 0.746749), (1, 0.756501), (1, 0.634752), (1, 0.763003), (1, 0.644504), (1, 0.743499), (1, 0.628251), (1, 0.75), (1, 0.625), (1, 0.639628), (1, 0.519504), (1, 0.636378), (1, 0.519504), (1, 0.633127), (1, 0.506501), (1, 0.625), (1, 0.5), (1, 0.526006), (1, 0.394504), (1, 0.513003), (1, 0.385109), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.374999), (1, 0.389807), (1, 0.260109), (1, 0.379698), (1, 0.253607), (1, 0.375), (1, 0.249999), (1, 0.375), (1, 0.249999), (1, 0.257215), (1, 0.128607), (1, 0.25), (1, 0.125), (1, 0.249999), (1, 0.124999), (1, 0.25), (1, 0.125), (1, 0.126814), (1, 0), (1, 0.125), (1, 0), (1, 0.125), (1, 0), (1, 0), (0.875, 0), (1, 0), (0.875001, 0), (0.875, 0), (0.750001, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (0.750001, 0), (0.750001, 0), (0.625001, 0), (1, 0.125), (1, 0.124999), (1, 0.249999), (1, 0.249999), (1, 0.375), (1, 0.375), (1, 0.5), (0.875, 0.5), (0.875, 0.625), (0.75, 0.625), (0.75, 0.75), (0.625, 0.75), (0.625, 0.875), (0.5, 0.875), (0.5, 1), (0.375, 1), (0.375001, 1), (0.249999, 1), (0.249999, 1), (0.124999, 1), (0.125, 1), (0, 1), (0, 1), (0, 0.875), (0, 0.875), (0, 0.750001), (0, 0.750001), (0, 0.625001), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.366873), (0, 0.253251), (0, 0.256501), (0, 0.128251), (0, 0.116873), (0, 0), (0, 0), (0.131501, 0), (0.133127, 0), (0.253251, 0), (0.243499, 0), (0.378251, 0), (0.383127, 0), (0.506501, 0), (0.5, 0), (0.625, 0), (0.625, 0), (0.75, 0), (0.75, 0), (0.875, 0), (0.875, 0), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.375), (1, 0.5), (1, 0.5), (1, 0.625), (1, 0.649421), (1, 0.740232), (1, 0.730463), (1, 0.865232), (1, 0.899421), (1, 1), (1, 1), (0.855463, 1), (0.850579, 1), (0.740232, 1), (0.769537, 1), (0.615232, 1), (0.600579, 1), (0.480463, 1), (0.5, 1), (0.375, 1), (0.375, 1), (0.25, 1), (0.25, 1), (0.125, 1), (0.125, 1), (0, 1), (0, 1), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.75), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.350939), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.5), (0, 0.375), (0, 0.375), (0, 0.25), (0, 0.25), (0, 0.125), (0, 0.75), (0, 0.75), (0, 0.131739), (0, 0), (0, 0.875), (0, 0.875), (0, 0), (0.138128, 0), (0, 1), (0, 1), (0.137685, 0), (0.282377, 0), (0.125, 1), (0.125, 1), (0.288498, 0), (0.432747, 0), (0.25, 1), (0.240232, 1), (0.40708, 0), (0.557747, 0), (0.360348, 1), (0.345695, 1), (0.538498, 0), (0.653873, 0), (0.460927, 1), (0.44139, 1), (0.639437, 0), (0.759624, 0), (0.592467, 1), (0.56639, 1), (0.710927, 1), (0.717076, 1), (0.862157, 1), (0.861613, 1), (1, 1), (1, 1), (1, 0.868122), (1, 0.875), (1, 0.75), (1, 0.75), (1, 0.625), (1, 0.625), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.25), (1, 0.25), (1, 0.125), (1, 0.125), (1, 0), (1, 0), (0.875, 0), (0.875, 0), (0.75, 0), (0.753251, 0), (0.629876, 0), (0.634752, 0), (0.513003, 0), (0.519504, 0), (0.386204, 0), (0.394504, 0), (0.263003, 0), (0.260109, 0), (0.129698, 0), (0.128607, 0), (0, 0), (0, 0), (0, 0.126809), (0, 0.125), (0, 0.25), (0, 0.249999), (0, 0.375), (0, 0.374999), (0, 0.5), (0, 0.5), (0, 0.625), (0, 0.625), (0, 0.75), (0, 0.750001), (0, 0.875), (0, 0.875001), (0, 1), (0, 1), (0.125, 1), (0.125, 1), (0.25, 1), (0.25, 0.875), (0.375, 0.875), (0.375, 0.75), (0.5, 0.75), (0.5, 0.625), (0.625, 0.625), (0.625, 0.5), (0.75, 0.5), (0.75, 0.375), (0.875, 0.375), (0.875, 0.25), (1, 0.25), (1, 0.125), (1, 0.124999), (1, 0), (1, 0), (0.875001, 0), (0.875, 0), (0.750001, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.875, 0), (0.875, 0), (0.750001, 0), (1, 0), (0.750001, 0), (0.625001, 0), (0.625, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.875, 0.125), (0.75, 0.125), (0.75, 0), (0.625, 0), (0.624999, 0), (0.5, 0), (0.5, 0), (0.374999, 0), (0.375, 0), (0.249999, 0), (0.75, 0.25), (0.625, 0.25), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.375, 0), (0.375, 0), (0.249999, 0), (0.249999, 0), (0.124999, 0), (0.625, 0.375), (0.5, 0.375), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.125, 0), (0.124999, 0), (0, 0), (0.5, 0.5), (0.375, 0.5), (0.375, 0.375), (0.25, 0.375), (0.25, 0.25), (0.125, 0.25), (0.125, 0.125), (0, 0.125), (0, 0), (0.375, 0.625), (0.25, 0.625), (0.25, 0.5), (0.125, 0.5), (0.125, 0.375), (0, 0.375), (0, 0.25), (0, 0.249999), (0, 0.125), (0, 0.124999), (0.25, 0.75), (0.125, 0.75), (0.125, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0), (0, 0), (0.125, 0.875), (0, 0.875), (0, 1), (0, 0.375001), (0, 0.374999), (0.125, 0), (0.125, 0), (0, 0.875001), (0, 0.750001), (0, 0.249999), (0, 0.249999), (0, 0.125), (0, 0.125), (0.25, 0), (0.249999, 0), (0, 0.750001), (0, 0.625001), (0, 0), (0, 0), (0.375, 0), (0.374999, 0), (0, 0.625), (0, 0.5), (0.125, 0), (0.124999, 0), (0.5, 0), (0.5, 0), (0, 0.5), (0, 0.375), (0.249999, 0), (0.249999, 0), (0.625, 0), (0.625, 0), (0, 0.375), (0, 0.249999), (0.375, 0), (0.375, 0), (0.75, 0), (0.746749, 0), (0, 0.249999), (0, 0.124999), (0.5, 0), (0.506501, 0), (0.873191, 0), (0.871749, 0), (0, 0.125), (0, 0), (0.633127, 0), (0.628251, 0), (1, 0), (1, 0), (0, 0), (0.125, 0), (0.743499, 0), (0.753251, 0), (0.883127, 0), (0.881501, 0), (1, 0.129698), (1, 0.131501), (0.126814, 0), (0.253607, 0), (1, 0), (1, 0), (1, 0.263003), (1, 0.253251), (0.257215, 0), (0.385109, 0), (1, 0.133127), (1, 0.121749), (1, 0.386204), (1, 0.378251), (0.389807, 0), (0.519504, 0), (1, 0.243499), (1, 0.246749), (1, 0.513003), (1, 0.506501), (0.526006, 0), (0.644504, 0), (1, 0.383127), (1, 0.375), (1, 0.629876), (1, 0.625), (0.639628, 0), (0.759752, 0), (1, 0.5), (1, 0.5), (1, 0.75), (1, 0.75), (0.756501, 0), (0.878251, 0), (1, 0.625), (1, 0.625), (1, 0.875), (1, 0.875), (0.876625, 0), (1, 0), (1, 0.75), (1, 0.75), (1, 1), (1, 1), (1, 0), (1, 0.125), (1, 0.875), (1, 0.875), (0.875, 1), (0.875, 1), (1, 0.125), (1, 0.25), (1, 1), (1, 1), (0.75, 1), (0.75, 1), (1, 0.25), (1, 0.375), (0.875, 1), (0.875, 1), (0.625, 1), (0.625, 1), (1, 0.375), (1, 0.5), (0.75, 1), (0.75, 1), (0.5, 1), (0.5, 1), (1, 0.5), (1, 0.625), (0.625, 1), (0.625, 1), (0.375, 1), (0.375, 1), (1, 0.625), (1, 0.75), (0.5, 1), (0.480463, 1), (0.25, 1), (0.259768, 1), (1, 0.75), (1, 0.875), (0.350579, 1), (0.365232, 1), (0.131878, 1), (0.134768, 1), (1, 0.875), (1, 1), (0.269537, 1), (0.240232, 1), (0, 1), (0, 1), (1, 1), (0.875, 1), (0.100579, 1), (0.105463, 1), (0, 0.862157), (0, 0.855463), (0.867937, 1), (0.736613, 1), (0, 1), (0, 1), (0, 0.710927), (0, 0.740232), (0.723225, 1), (0.592076, 1), (0, 0.850579), (0, 0.884768), (0, 0.592467), (0, 0.615232), (0.579233, 1), (0.44139, 1), (0, 0.769537), (0, 0.759768), (0, 0.460927), (0, 0.480463), (0.421854, 1), (0.31639, 1), (0, 0.600579), (0, 0.625), (0, 0.360348), (0, 0.375), (0.331043, 1), (0.220695, 1), (0, 0.5), (0, 0.5), (0, 0.25), (0, 0.25), (0.230463, 1), (0.115232, 1), (0, 0.375), (0, 0.375), (0, 0.125), (0, 0.125), (0.120116, 1), (0, 1), (0, 0.25), (0, 0.25), (0, 0), (0, 0), (0, 1), (0, 0.875), (0, 0.125), (0, 0.125), (0.125, 0), (0.125, 0), (0, 0.875), (0, 0.75), (0, 0), (0, 0), (0.25, 0), (0.25, 0), (0, 0.75), (0, 0.625), (0.125, 0), (0.125, 0), (0.375, 0), (0.375, 0), (0, 0.625), (0, 0.5), (0.25, 0), (0.25, 0), (0.5, 0), (0.5, 0), (0, 0.5), (0, 0.375), (0.375, 0), (0.375, 0), (0.625, 0), (0.625, 0), (0, 0.375), (0, 0.25), (0.5, 0), (0.519249, 0), (0.75, 0), (0.740376, 0), (0, 0.25), (0, 0.125), (0.649061, 0), (0.634624, 0), (0.868261, 0), (0.865376, 0), (0, 0.125), (0, 0), (0.730751, 0), (0.759624, 0), (1, 0), (1, 0), (0, 0), (0.125, 0), (0.899061, 0), (0.894249, 0), (1, 0.137685), (1, 0.144249), (0.131915, 0), (0.263128, 0), (1, 0), (1, 0), (1, 0.288498), (1, 0.259624), (0.276256, 0), (0.407377, 0), (1, 0.149061), (1, 0.115376), (1, 0.40708), (1, 0.384624), (0.420062, 0), (0.557747, 0), (1, 0.230751), (1, 0.240376), (1, 0.538498), (1, 0.519249), (0.576996, 0), (0.682747, 0), (1, 0.399061), (1, 0.375), (1, 0.639437), (1, 0.625), (1, 0.5), (0.66831, 0), (0.778873, 0), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.75), (0.769249, 0), (0.884624, 0), (1, 0.5), (1, 0.75), (1, 0.875), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.5), (1, 0.5), (1, 0.625), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.75), (1, 0.875), (1, 0.875), (1, 0.875), (1, 0.625), (1, 0.5), (1, 0.625), (1, 0.625), (1, 0.625), (1, 0.75), (1, 0.75), (1, 0.75), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.625), (1, 0.5), (1, 0.625), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.125), (1, 0.375), (1, 0.375), (1, 0.5), (1, 0.5), (1, 0.25), (1, 0.375), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.125), (1, 0.25), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.25), (1, 0), (1, 0.125), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (0.875, 0), (1, 0), (1, 0), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (1, 0.125), (0.875, 0), (1, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (1, 0.125), (1, 0.25), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.25), (1, 0.25), (1, 0.25), (1, 0.125), (1, 0), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.125), (1, 0.125), (1, 0.375), (1, 0.375), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.375), (1, 0.625), (1, 0.5), (1, 0.625), (1, 0.5), (1, 0.625), (1, 0.625), (1, 0.5), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.5), (1, 0.5), (1, 0.375), (1, 0.375), (1, 0.375), (1, 0.375), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.375), (1, 0.875), (1, 1), (0.875, 1), (0.87936, 0.875), (0.883719, 0.75), (0.758719, 0.875), (1, 0.75), (0.75, 1), (0.625, 1), (0.888079, 0.625), (0.776158, 0.625), (0.767439, 0.75), (0.651158, 0.75), (0.638079, 0.875), (0.517439, 0.875), (0.5, 1), (0.375, 1), (0.784877, 0.5), (0.677316, 0.5), (0.664237, 0.625), (0.552316, 0.625), (0.534877, 0.75), (0.383719, 0.75), (0.396798, 0.875), (0.241281, 0.875), (0.25, 1), (0.125, 1), (0.655518, 0.375), (0.552316, 0.375), (0.569755, 0.5), (0.427316, 0.5), (0.40421, 0.625), (0.258719, 0.625), (0.232561, 0.75), (0.116281, 0.75), (0.12064, 0.875), (0, 0.875), (0, 1), (0, 0.75), (0, 0.625), (0.146798, 0.625), (0.142439, 0.5), (0, 0.5), (0, 0.375), (0.284877, 0.5), (0.278985, 0.375), (0.136665, 0.375), (0.136547, 0.25), (0, 0.25), (0, 0.125), (0.415651, 0.375), (0.403985, 0.25), (0.273093, 0.25), (0.261547, 0.125), (0.131023, 0.125), (0.534877, 0.25), (0.386665, 0.125), (0.25, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.25, 0), (0.125, 0), (0.125, 0), (0.25, 0), (0.375, 0), (0.375, 0), (0.25, 0), (0.018852, 0.614867), (0.002827, 0.729734), (0.001414, 0.739867), (0.016732, 0.630066), (0.375, 1), (0.375, 1), (0.5, 1), (0.5, 1), (0, 1), (0, 0.875), (0, 0.875), (0, 1), (0, 0.875), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.875), (0, 0.625), (0, 0.75), (0, 0.625), (0, 0.75), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.625), (0, 0.5), (0, 0.375), (0, 0.5), (0, 0.5), (0, 0.625), (0, 0.625), (0, 0.5), (0, 0.5), (0, 0.375), (0, 0.375), (0, 0.625), (0, 0.625), (0, 0.75), (0, 0.625), (0, 0.75), (0, 0.625), (0, 0.875), (0, 0.875), (0, 0.75), (0, 0.875), (0, 0.75), (0, 0.875), (0, 1), (0, 0.875), (0, 1), (0, 1), (0, 0.875), (0, 1), (0, 0.875), (0.125, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.25, 1), (0.125, 1), (0.125, 1), (0.125, 1), (0, 1), (0, 1), (0.375, 0), (0.5, 0), (0.5, 0), (0.375, 0), (0.5, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.625, 0), (0.5, 0), (0.625, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.875, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.75, 0), (0.875, 0), (0.879812, 0), (1, 0), (0.625, 0), (0.5, 0), (0.5, 0), (0.625, 0), (0.75, 0), (0.75, 0), (0.875, 0), (1, 0), (1, 0), (0.875, 0), (0.875, 0), (1, 0.125), (1, 0), (0.875, 0), (1, 0), (0.75, 0), (0.75, 0), (0.875, 0), (0.875, 0), (1, 0), (1, 0), (0.875, 0), (0.875, 0), (1, 0), (1, 0), (1, 0), (1, 0.125), (1, 0.125), (1, 0.125), (1, 0), (1, 0.125), (1, 0), (1, 0.125), (0.875, 0), (0.875, 0), (1, 0), (1, 0), (1, 0.125), (1, 0), (1, 0.125), (1, 0), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.125), (1, 0.125), (1, 0.25), (1, 0.25), (1, 0.120188), (1, 0), (0.889437, 0), (0.788498, 0), (0.658686, 0), (0.538498, 0), (0.387685, 0), (0.25, 0), (0.125, 0), (0, 0), (0, 0.125), (0, 0.25), (0, 0.375), (0, 0.5), (0, 0.625), (0, 0.75), (0, 0.879884), (0, 1), (0.110348, 1), (0.210927, 1), (0.340811, 1), (0.460927, 1), (0.612157, 1), (0.75, 1), (0.875, 1), (1, 1), (1, 0.875), (1, 0.75), (1, 0.625), (1, 0.5), (1, 0.375), (1, 0.25), (1, 0.123375), (1, 0), (0.879876, 0), (0.763003, 0), (0.636378, 0), (0.513003, 0), (0.379698, 0), (0.25, 0), (0.125, 0), (0, 0), (0, 0.125), (0, 0.25), (0, 0.375), (0, 0.5), (0, 0.625), (0, 0.75), (0, 0), (0, 0), (0, 0.125), (0, 0.125), (0, 0), (1, 1), (1, 1), (1, 0.875), (1, 0.875), (1, 1), (1, 0.25), (1, 0.375), (1, 0.25), (1, 0.25), (1, 0.375), (1, 0.375), (0.875, 0), (0.875, 0), (1, 0), (0.875, 0), (1, 0), (0.875, 0), (0.875, 0), (0.875, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.75, 0), (0.875, 0), (0.875, 0), (0.75, 0), (0.75, 0), (0.875, 0), (0.875, 0), (0.875, 1), (0.875, 1), (1, 1), (0.875, 1), (1, 1), (0.875, 1), (1, 0.875), (1, 0.875), (1, 0.875), (1, 1), (1, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.9945076, 0.104126975, -0.010586142, 1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.19546986, 0.98070747, -0.0020806994, 1), (0.87893116, 0.47685695, -0.009355877, 1), (0.09391047, 0.9955806, 0, 1), (0.19926053, 0.9799442, -0.00212105, 1), (0.821038, -0.57080656, -0.008739628, 1), (0.11403653, 0.99347585, -0.0012138742, 1), (0, 1, 0, 1), (1, 0, 0, -1), (0.9999434, 0, -0.010644002, 1), (0.99969876, 0.022113776, -0.010644399, 1), (0.58242, 0.8128644, -0.006199631, 1), (0.407382, 0.9132475, -0.0043364204, 1), (0.04822423, 0.9988366, 0, 1), (0, 0.9990952, -0.0425296, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0.33821392, 0.94106245, -0.0036001538, 1), (0, 0.9999434, -0.010644004, 1), (0, 1, 0, 1), (0, 0.9999434, -0.010644005, 1), (0.08074608, 0.99667823, -0.010609249, 1), (0.3315823, 0.94341975, -0.0035295628, 1), (0.88022023, 0.47447294, -0.009369597, 1), (0.27406505, 0.9617067, -0.0029173146, 1), (0.119129784, 0.9928779, -0.0012680896, 1), (0.13817786, 0.9903514, -0.010541901, 1), (0.14326936, 0.9896277, -0.010534198, 1), (0.97092503, 0.23916036, -0.010335113, 1), (0.75587875, 0.65466225, -0.008046032, 1), (0.6005116, 0.7995905, -0.006392209, 1), (0.16769286, 0.98583764, -0.0017850243, 1), (0.15966281, 0.9871701, -0.0016995481, 1), (0.16829233, 0.9857355, -0.0017914055, 1), (0.15862268, 0.98728335, -0.010509241, 1), (0.15997927, 0.9870645, -0.010506913, 1), (0.50413364, 0.86360896, -0.0053663044, 1), (0.08027801, 0.99677247, 0, 1), (0.16003804, 0.9871093, -0.0017035421, 1), (0.15409312, 0.98805505, -0.0016407229, 1), (0.16037866, 0.98705417, -0.001707168, 1), (0.15327492, 0.98818225, -0.0016315512, 1), (0.16004695, 0.98710793, -0.0017036368, 1), (0.16010231, 0.987099, -0.0017042261, 1), (-0.6480461, 0.76155794, -0.008106485, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0.1240535, 0.9922747, -0.0013205007, 1), (0.18009935, 0.9836466, -0.0019170865, 1), (0.16204055, 0.98678267, -0.001724858, 1), (0.17664999, 0.98427194, -0.0018803695, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.6761715, 0.7367092, -0.00719758, 1), (0.89438725, -0.4471922, -0.0095204, 1), (0.16138743, 0.9868896, -0.00171839, 1), (0.19428347, 0.98094326, -0.002068071, 1), (0.19389509, 0.98102015, -0.0020639368, 1), (0.8177469, -0.5755121, -0.008704593, 1), (0.7148456, -0.69924086, -0.007609249, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.18928675, 0.9819198, -0.0020148829, 1), (0.9465375, -0.32243657, -0.010075519, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (0, -1, 0, -1), (1, 0, 0, -1), (0.11983374, -0.9927932, 0.0012755832, 1), (1, 0, 0, -1), (0, -1, 0, -1), (0.89862925, 0.4386046, 0.009565554, 1), (0.8465505, -0.5322782, -0.0056658937, 1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1), (0.7319131, -0.68135357, 0.0077909273, 1), (0.752522, 0.6585184, 0.008010301, 1), (0.1354847, -0.9907783, 0.0014421813, 1), (0.70709115, 0.7070823, 0.0075266114, 1), (1, 0, 0, -1), (0.66912407, -0.74311656, 0.0071225623, 1), (0.8373432, -0.5466048, 0.00891319, 1), (0.9094602, 0.4156782, 0.009680846, 1), (0.91023684, 0.4139747, 0.009689113, 1), (0.99922323, 0.037943944, 0.010636337, 1), (0.9261229, 0.37720075, 0.0040151537, 1), (0.7082988, 0.7058727, 0.0075137373, 1), (0.7856069, -0.61866933, 0.008362476, 1), (0.76160824, -0.647987, 0.00810702, 1), (0.16015238, -0.9870908, 0.0017047591, 1), (0.08016346, -0.9967817, 0, 1), (0.7882084, -0.61535126, 0.008390168, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, 0.9997358, 0.022985503, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0.06396637, -0.99795204, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -0.9999434, 0.010644004, 1), (0, 1, 0, 1), (0, -0.9999434, 0.010644005, 1), (0, -0.9999434, 0.010644005, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -0.9999434, 0.010644003, 1), (0, -0.9999434, 0.010644005, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0.37049958, -0.9288243, 0.003943822, 1), (0.88946307, -0.4569089, 0.009467985, 1), (0.44906953, -0.89348406, 0.004780169, 1), (0.5220529, -0.852895, 0.005557048, 1), (0.09327324, -0.9955842, 0.010597601, 1), (0.15964547, -0.9871185, 0.010507488, 1), (0.5041344, -0.86360854, 0.005366312, 1), (0.9999434, 0, 0.010644003, 1), (1, 0, 0, -1), (0.06765933, -0.99770844, 0, 1), (0.34241512, -0.9395417, 0.0036448743, 1), (0.109157376, -0.99402386, 0.0011619374, 1), (0.16009271, -0.9871005, 0.0017041238, 1), (0.16043216, -0.98704535, 0.0017077372, 1), (-0.6480461, -0.76155794, 0.008106485, 1), (0.9999434, 0, 0.010644003, 1), (0.9837209, 0.17939757, 0.010474273, 1), (0.95344096, 0.30140886, 0.010149005, 1), (0.7534121, 0.6574997, 0.008019775, 1), (0.9999434, 0, 0.010644004, 1), (0.9997372, -0.020302042, 0.01064181, 1), (0.9632912, 0.2682624, 0.010253856, 1), (0.9982285, 0.05854079, 0.010625748, 1), (0.72169256, 0.6921711, 0.007682133, 1), (0.708342, 0.7058292, 0.007540022, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.4225393, -0.90633345, 0.0044977637, 1), (0.9537838, -0.30032188, 0.010152653, 1), (0.9999434, 0, 0.010644003, 1), (0.16894867, -0.9856231, 0.001798392, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.7341747, 0.67891556, 0.007817203, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-0.7070961, -0.7070773, -0.0075288815, -1), (-0.7070878, -0.7070857, -0.0075266715, -1), (-0.70708627, -0.7070872, -0.007526654, -1), (-0.70709497, -0.7070786, -0.0075267483, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (55.01103706005563, 3.2086477482713462, -19.087857631332668, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh493"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.099999994, -0.099999994, -0.2857211), (0.099999994, 0.099999994, 0.2857211)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 5, 4, 6, 6, 4, 7, 9, 8, 10, 10, 8, 11, 8, 12, 13, 13, 12, 14, 12, 15, 14, 12, 16, 15, 17, 16, 12, 14, 15, 18, 16, 19, 15, 15, 20, 18, 15, 19, 20, 17, 21, 16, 16, 22, 19, 21, 22, 16, 14, 18, 23, 23, 18, 21, 23, 21, 17, 24, 14, 23, 25, 14, 24, 26, 23, 17, 27, 23, 26, 18, 28, 21, 18, 20, 28, 21, 28, 22, 19, 29, 20, 20, 30, 28, 20, 29, 30, 28, 31, 22, 28, 30, 31, 22, 32, 19, 19, 32, 29, 22, 31, 32, 30, 33, 31, 29, 34, 30, 30, 34, 33, 31, 35, 32, 31, 33, 35, 32, 36, 29, 29, 36, 34, 32, 35, 36, 33, 37, 35, 34, 38, 33, 33, 38, 37, 35, 39, 36, 35, 37, 39, 36, 40, 34, 34, 40, 38, 36, 39, 40, 37, 41, 39, 38, 42, 37, 37, 42, 41, 39, 43, 40, 39, 41, 43, 40, 44, 38, 38, 44, 42, 40, 43, 44, 41, 45, 43, 42, 46, 41, 41, 46, 45, 42, 47, 46, 44, 47, 42, 47, 45, 46, 43, 48, 44, 43, 45, 48, 48, 45, 47, 44, 48, 47, 50, 49, 51, 51, 49, 52, 49, 17, 52, 52, 17, 53, 55, 54, 56, 56, 54, 57]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (-0.010645005, 0, -0.9999434), (0, -1, 0), (0, -0.010645005, -0.9999434), (-1, 0, 0), (0, 1, 0), (0, 0.010645005, -0.9999434), (0, -1, 0), (0, 0.056475002, -0.9984041), (-0.056475002, 0, -0.9984041), (0, -1, 0), (0, -0.056475002, -0.9984041), (0, -0.010645005, -0.9999434), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (0, -0.056475002, -0.9984041), (0, 1, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-0.0009289996, 0, -0.99999964), (0, 0.0009289996, -0.99999964), (0, -0.0009289996, -0.99999964), (0, -0.0009289996, -0.99999964), (-1, 0, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (-0.016452996, 0, -0.9998647), (0, 0.016452996, -0.9998647), (0, -0.016452996, -0.9998647), (0, -0.016452996, -0.9998647), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-0.010645005, 0, -0.9999434), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.099999994, 0.099999994, 0.2857211), (0.099999994, 0.099999994, 0.2857211), (0.099999994, -0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.18572111), (-0.099999994, -0.099999994, 0.2857211), (0.099999994, -0.099999994, 0.2857211), (0.099999994, -0.099999994, 0.18572111), (-0.099999994, 0.099999994, 0.18572111), (-0.099999994, 0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.2857211), (-0.099999994, -0.099999994, 0.18572111), (-0.07209805, 0.07209805, 0.18542407), (-0.099999994, -0.099999994, 0.18572111), (-0.07209805, -0.07209805, 0.18542407), (-0.07209805, 0.07209805, -0.03843889), (0.07209805, 0.07209805, -0.03843889), (0.07209805, 0.07209805, 0.18542407), (-0.07209805, -0.07209805, -0.03843889), (0.049893122, 0.04989311, -0.03969492), (-0.04989311, 0.04989311, -0.03969492), (0.07209805, -0.07209805, -0.03843889), (0.049893122, -0.04989311, -0.03969492), (0.07209805, -0.07209805, 0.18542407), (0.099999994, -0.099999994, 0.18572111), (-0.099999994, -0.099999994, 0.18572111), (0.099999994, 0.099999994, 0.18572111), (0.099999994, -0.099999994, 0.18572111), (-0.04989311, -0.04989311, -0.03969492), (0.049893122, 0.04989311, -0.16768418), (-0.04989311, 0.04989311, -0.16768418), (-0.04989311, -0.04989311, -0.16768418), (0.049893122, -0.04989311, -0.16768418), (-0.034297284, 0.034297295, -0.16769868), (0.034297284, 0.034297295, -0.16769868), (-0.034297284, -0.034297295, -0.16769868), (0.034297284, -0.034297295, -0.16769868), (-0.034297284, 0.034297295, -0.28566238), (0.034297284, 0.034297295, -0.28566238), (-0.034297284, -0.034297295, -0.28566238), (0.034297284, -0.034297295, -0.28566238), (-0.030729579, 0.030729597, -0.2857211), (0.030729579, 0.030729597, -0.2857211), (-0.030729579, -0.030729597, -0.2857211), (0.030729579, -0.030729597, -0.2857211), (-0.030729579, 0.030729597, -0.27767813), (0.030729579, 0.030729597, -0.27767813), (0.030729579, -0.030729597, -0.27767813), (-0.030729579, -0.030729597, -0.27767813), (0.099999994, 0.099999994, 0.18572111), (0.099999994, 0.099999994, 0.2857211), (-0.099999994, 0.099999994, 0.2857211), (-0.099999994, 0.099999994, 0.18572111), (-0.07209805, 0.07209805, 0.18542407), (0.099999994, -0.099999994, 0.18572111), (0.099999994, -0.099999994, 0.2857211), (0.099999994, 0.099999994, 0.2857211), (0.099999994, 0.099999994, 0.18572111)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = [(0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 1), (1, 0), (0, 1), (1, 1), (0, 0), (0, 0), (0, 0), (0, 1), (1, 1), (0, 1), (1, 1), (1, 0), (0, 1), (1, 1), (1, 0), (0, 0), (1, 1), (0, 1), (1, 0), (0, 0), (1, 1), (0, 1), (1, 0), (0, 0), (1, 1), (0, 1), (1, 0), (0, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 1), (1, 0), (0, 0), (0, 1)]
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0, 1, 0, -1), (0.16003829, 0.9871093, -0.0017037048, 1), (0.9999434, 0, -0.010644938, 1), (-0.6480462, 0.76155794, -0.008107246, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-0.73161364, -0.68168086, 0.007256907, 1), (-1, 0, 0, 1), (-1, 0, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (1, 0, 0, -1), (0, 1, 0, -1), (0, -1, 0, -1), (0, -1, 0, -1), (0, 1, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (48.79514315867419, 3.2086477482713462, -27.36516403868268, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh494"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.25, -0.25, -0.2536392), (0.25, 0.25, 0.2536392)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 2, 3, 4, 1, 5, 0, 6, 5, 1, 4, 3, 7, 4, 7, 8, 6, 9, 5, 10, 9, 6, 8, 7, 11, 8, 11, 12, 10, 13, 9, 14, 13, 10, 12, 11, 15, 12, 15, 16, 14, 17, 13, 18, 17, 14, 16, 15, 19, 16, 19, 20, 18, 21, 17, 22, 21, 18, 20, 19, 23, 20, 23, 24, 22, 25, 21, 26, 25, 22, 24, 23, 27, 24, 27, 28, 26, 29, 25, 30, 29, 26, 28, 27, 31, 28, 31, 32, 30, 33, 29, 34, 33, 30, 32, 35, 34, 32, 31, 35, 34, 35, 33, 25, 36, 21, 29, 37, 25, 25, 37, 36, 33, 38, 29, 29, 38, 37, 35, 39, 33, 33, 39, 38, 31, 40, 35, 35, 40, 39, 27, 41, 31, 31, 41, 40, 21, 36, 42, 21, 42, 17, 27, 43, 41, 23, 43, 27, 17, 42, 44, 17, 44, 13, 23, 45, 43, 19, 45, 23, 13, 44, 46, 13, 46, 9, 19, 47, 45, 15, 47, 19, 9, 46, 48, 9, 48, 5, 15, 49, 47, 11, 49, 15, 5, 48, 50, 5, 50, 0, 11, 51, 49, 7, 51, 11, 0, 50, 52, 0, 52, 3, 3, 53, 7, 7, 53, 51, 3, 52, 53, 46, 54, 48, 48, 55, 50, 48, 54, 55, 50, 56, 52, 50, 55, 56, 52, 57, 53, 52, 56, 57, 53, 58, 51, 53, 57, 58, 51, 59, 49, 51, 58, 59, 46, 60, 54, 44, 60, 46, 49, 59, 61, 49, 61, 47, 44, 62, 60, 42, 62, 44, 47, 61, 63, 47, 63, 45, 42, 64, 62, 36, 64, 42, 45, 63, 65, 45, 65, 43, 36, 66, 64, 37, 66, 36, 43, 65, 67, 43, 67, 41, 37, 68, 66, 38, 68, 37, 41, 67, 69, 41, 69, 40, 38, 70, 68, 39, 70, 38, 40, 71, 39, 40, 69, 71, 39, 71, 70, 66, 72, 64, 68, 73, 66, 66, 73, 72, 70, 74, 68, 68, 74, 73, 71, 75, 70, 70, 75, 74, 69, 76, 71, 71, 76, 75, 67, 77, 69, 69, 77, 76, 64, 72, 78, 64, 78, 62, 67, 79, 77, 65, 79, 67, 62, 78, 80, 62, 80, 60, 65, 81, 79, 63, 81, 65, 60, 80, 82, 60, 82, 54, 63, 83, 81, 61, 83, 63, 54, 82, 84, 54, 84, 55, 61, 85, 83, 59, 85, 61, 55, 84, 86, 55, 86, 56, 59, 87, 85, 58, 87, 59, 56, 86, 88, 56, 88, 57, 57, 89, 58, 58, 89, 87, 57, 88, 89, 82, 90, 84, 84, 91, 86, 84, 90, 91, 86, 92, 88, 86, 91, 92, 88, 93, 89, 88, 92, 93, 89, 94, 87, 89, 93, 94, 87, 95, 85, 87, 94, 95, 82, 96, 90, 80, 96, 82, 85, 95, 97, 85, 97, 83, 80, 98, 96, 78, 98, 80, 83, 97, 99, 83, 99, 81, 78, 100, 98, 72, 100, 78, 81, 99, 101, 81, 101, 79, 72, 102, 100, 73, 102, 72, 79, 101, 103, 79, 103, 77, 73, 104, 102, 74, 104, 73, 77, 103, 105, 77, 105, 76, 74, 106, 104, 75, 106, 74, 76, 107, 75, 76, 105, 107, 75, 107, 106, 102, 108, 100, 104, 109, 102, 102, 109, 108, 106, 110, 104, 104, 110, 109, 107, 111, 106, 106, 111, 110, 105, 112, 107, 107, 112, 111, 103, 113, 105, 105, 113, 112, 100, 108, 114, 100, 114, 98, 103, 115, 113, 101, 115, 103, 98, 114, 116, 98, 116, 96, 101, 117, 115, 99, 117, 101, 96, 116, 118, 96, 118, 90, 99, 119, 117, 97, 119, 99, 90, 118, 120, 90, 120, 91, 97, 121, 119, 95, 121, 97, 91, 120, 122, 91, 122, 92, 95, 123, 121, 94, 123, 95, 92, 122, 124, 92, 124, 93, 93, 125, 94, 94, 125, 123, 93, 124, 125, 118, 126, 120, 120, 127, 122, 120, 126, 127, 122, 128, 124, 122, 127, 128, 124, 129, 125, 124, 128, 129, 125, 130, 123, 125, 129, 130, 123, 131, 121, 123, 130, 131, 118, 132, 126, 116, 132, 118, 121, 131, 133, 121, 133, 119, 116, 134, 132, 114, 134, 116, 119, 133, 135, 119, 135, 117, 114, 136, 134, 108, 136, 114, 117, 135, 137, 117, 137, 115, 108, 138, 136, 109, 138, 108, 115, 137, 139, 115, 139, 113, 109, 140, 138, 110, 140, 109, 113, 139, 141, 113, 141, 112, 110, 142, 140, 111, 142, 110, 112, 143, 111, 112, 141, 143, 111, 143, 142, 138, 144, 136, 140, 145, 138, 138, 145, 144, 142, 146, 140, 140, 146, 145, 143, 147, 142, 142, 147, 146, 141, 148, 143, 143, 148, 147, 139, 149, 141, 141, 149, 148, 136, 144, 150, 136, 150, 134, 139, 151, 149, 137, 151, 139, 134, 150, 152, 134, 152, 132, 137, 153, 151, 135, 153, 137, 132, 152, 154, 132, 154, 126, 135, 155, 153, 133, 155, 135, 126, 154, 156, 126, 156, 127, 133, 157, 155, 131, 157, 133, 127, 156, 158, 127, 158, 128, 131, 159, 157, 130, 159, 131, 128, 158, 160, 128, 160, 129, 129, 161, 130, 130, 161, 159, 129, 160, 161, 154, 162, 156, 156, 163, 158, 156, 162, 163, 158, 164, 160, 158, 163, 164, 160, 165, 161, 160, 164, 165, 161, 166, 159, 161, 165, 166, 159, 167, 157, 159, 166, 167, 154, 168, 162, 152, 168, 154, 157, 167, 169, 157, 169, 155, 152, 170, 168, 150, 170, 152, 155, 169, 171, 155, 171, 153, 150, 172, 170, 144, 172, 150, 153, 171, 173, 153, 173, 151, 144, 174, 172, 145, 174, 144, 151, 173, 175, 151, 175, 149, 145, 176, 174, 146, 176, 145, 149, 175, 177, 149, 177, 148, 146, 178, 176, 147, 178, 146, 148, 179, 147, 148, 177, 179, 147, 179, 178, 174, 180, 172, 176, 181, 174, 174, 181, 180, 181, 182, 180, 181, 183, 182, 176, 184, 181, 178, 184, 176, 184, 183, 181, 179, 185, 178, 178, 185, 184, 177, 186, 179, 179, 186, 185, 172, 180, 187, 172, 187, 170, 185, 188, 184, 184, 188, 183, 185, 189, 188, 186, 189, 185, 189, 190, 188, 186, 190, 189, 188, 190, 183, 177, 191, 186, 191, 190, 186, 175, 191, 177, 175, 192, 191, 173, 192, 175, 191, 193, 190, 192, 193, 191, 193, 194, 190, 192, 194, 193, 190, 194, 183, 173, 195, 192, 195, 194, 192, 171, 195, 173, 194, 196, 183, 195, 196, 194, 171, 197, 195, 197, 196, 195, 169, 197, 171, 183, 196, 198, 197, 198, 196, 198, 182, 183, 199, 182, 198, 200, 199, 198, 169, 201, 197, 201, 198, 197, 201, 200, 198, 167, 201, 169, 167, 202, 201, 202, 200, 201, 166, 202, 167, 202, 203, 200, 203, 199, 200, 166, 204, 202, 204, 203, 202, 204, 199, 203, 165, 204, 166, 165, 205, 204, 205, 199, 204, 164, 205, 165, 164, 206, 205, 163, 206, 164, 205, 207, 199, 206, 207, 205, 163, 208, 206, 162, 208, 163, 206, 209, 207, 207, 209, 199, 208, 209, 206, 162, 210, 208, 168, 210, 162, 199, 209, 211, 211, 182, 199, 208, 212, 209, 210, 212, 208, 211, 209, 212, 210, 211, 212, 168, 213, 210, 213, 211, 210, 170, 213, 168, 170, 187, 213, 213, 214, 211, 214, 182, 211, 187, 214, 213, 215, 182, 214, 187, 215, 214, 180, 182, 215, 180, 215, 187]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -0.40613878, -0.91381145), (0, -0.40613878, -0.91381145), (-0.40613788, 0, -0.91381174), (0, -0.40613788, -0.91381174), (-0.40613788, 0, -0.91381174), (0, 0.40613788, -0.91381174), (0.40613788, 0, -0.91381174), (-0.40613788, 0, -0.91381174), (0, -0.40613788, -0.91381174), (0, -0.40613788, -0.91381174), (0.40613878, 0, -0.91381145), (-0.40613788, 0, -0.91381174), (0, 0.40613788, -0.91381174), (-0.40613788, 0, -0.91381174), (0.40613788, 0, -0.91381174), (-0.40613788, 0, -0.91381174), (0, 0.40613878, -0.91381145), (0, 0.40613878, -0.91381145), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, -1, 0), (-1, 0, 0), (0, -0.44721398, 0.894427), (-0.44721398, 0, 0.894427), (0, -0.44721398, 0.894427), (-0.44721398, 0, 0.894427), (0, 0.44721398, 0.894427), (-0.44721398, 0, 0.894427), (0, -0.44721398, 0.894427), (0, -0.44721398, 0.894427), (0.44721398, 0, 0.894427), (-0.44721398, 0, 0.894427), (0, -0.44721398, 0.894427), (-0.44721398, 0, 0.894427), (0.44721398, 0, 0.894427), (-0.44721398, 0, 0.894427), (0, 0.44721398, 0.894427), (0, 0.44721398, 0.894427), (0.44721398, 0, 0.894427), (0, 0.44721398, 0.894427), (0, -1, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (-0.74329394, 0, -0.668965), (0, -0.74329394, -0.668965), (-0.74329394, 0, -0.668965), (0, 0.74329394, -0.668965), (-0.74329394, 0, -0.668965), (0, -0.74329394, -0.668965), (0, -0.74329394, -0.668965), (-0.74329394, 0, -0.668965), (0, -0.74329394, -0.668965), (-0.74329394, 0, -0.668965), (0.74329394, 0, -0.668965), (-0.74329394, 0, -0.668965), (0, -0.74329394, -0.668965), (0, 0.74329394, -0.668965), (0.74329394, 0, -0.668965), (0, 0.74329394, -0.668965), (0, 0.74329394, -0.668965), (0.74329394, 0, -0.668965), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, 1, 0), (-1, 0, 0), (0, -0.89442754, -0.4472128), (-0.89442754, 0, -0.4472128), (0, 0.89442754, -0.4472128), (-0.89442754, 0, -0.4472128), (0, -0.89442754, -0.4472128), (-0.89442754, 0, -0.4472128), (-0.89442754, 0, -0.4472128), (-0.89442754, 0, -0.4472128), (0, -0.89442754, -0.4472128), (-0.89442754, 0, -0.4472128), (0, -0.89442754, -0.4472128), (0, 0.89442754, -0.4472128), (0.89442754, 0, -0.4472128), (0, 0.89442754, -0.4472128), (0, -0.89442754, -0.4472128), (0.89442754, 0, -0.4472128), (0.89442754, 0, -0.4472128), (0, 0.89442754, -0.4472128), (0, -1, 0), (1, 0, 0), (0, -1, 0), (1, 0, 0), (0, 1, 0), (1, 0, 0), (0, -1, 0), (0, 1, 0), (-1, 0, 0), (0, 1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (-0.7808689, 0, 0.62469494), (0, 0.7808689, 0.62469494), (0, 0, -1), (0, 0, -1), (-0.7808689, 0, 0.62469494), (0, -0.7808689, 0.62469494), (-0.7808689, 0, 0.62469494), (0, -0.7808689, 0.62469494), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7808689, 0, 0.62469494), (-0.7808689, 0, 0.62469494), (0, 0, -1), (0, 0, -1), (0, 0.7808689, 0.62469494), (0, 0, -1), (0, 0.7808689, 0.62469494), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.7808689, 0, 0.62469494), (0, 0.7808689, 0.62469494), (0, 0, -1), (0.7808689, 0, 0.62469494), (0, -0.7808689, 0.62469494), (0.7808689, 0, 0.62469494), (0, 0, -1), (0, -0.7808689, 0.62469494), (0, 0, -1), (0, -0.7808689, 0.62469494), (0, 0, -1), (0, 0, -1), (-0.7808689, 0, 0.62469494), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.049999997, 0.25, 0.20883228), (0.049999997, 0.25, 0.2536392), (-0.049999997, 0.25, 0.2536392), (-0.049999997, 0.25, 0.20883228), (-0.14999999, 0.25, 0.2536392), (0.049999997, 0.049999997, 0.20883228), (0.049999997, 0.049999997, 0.2536392), (-0.14999999, 0.25, 0.20883228), (-0.14999999, 0.14999999, 0.2536392), (0.25, 0.049999997, 0.20883228), (0.25, 0.049999997, 0.2536392), (-0.14999999, 0.14999999, 0.20883228), (-0.25, 0.14999999, 0.2536392), (0.25, -0.14999999, 0.20883228), (0.25, -0.14999999, 0.2536392), (-0.25, 0.14999999, 0.20883228), (-0.25, 0.049999997, 0.2536392), (0.049999997, -0.14999999, 0.20883228), (0.049999997, -0.14999999, 0.2536392), (-0.25, 0.049999997, 0.20883228), (-0.14999999, 0.049999997, 0.2536392), (0.049999997, -0.25, 0.20883228), (0.049999997, -0.25, 0.2536392), (-0.14999999, 0.049999997, 0.20883228), (-0.14999999, -0.049999997, 0.2536392), (-0.049999997, -0.25, 0.20883228), (-0.049999997, -0.25, 0.2536392), (-0.14999999, -0.049999997, 0.20883228), (-0.25, -0.049999997, 0.2536392), (-0.14999999, -0.25, 0.20883228), (-0.14999999, -0.25, 0.2536392), (-0.25, -0.049999997, 0.20883228), (-0.25, -0.14999999, 0.2536392), (-0.14999999, -0.14999999, 0.20883228), (-0.14999999, -0.14999999, 0.2536392), (-0.25, -0.14999999, 0.20883228), (-0.049999997, -0.21380657, 0.19274631), (-0.11380657, -0.21380657, 0.19274631), (-0.11380657, -0.11380657, 0.19274631), (-0.21380657, -0.11380657, 0.19274631), (-0.21380657, -0.08619343, 0.19274631), (-0.11380657, -0.08619343, 0.19274631), (0.01380657, -0.21380657, 0.19274631), (-0.11380657, 0.08619342, 0.19274631), (0.01380657, -0.11380657, 0.19274631), (-0.21380657, 0.08619342, 0.19274631), (0.2138066, -0.11380657, 0.19274631), (-0.21380657, 0.113806576, 0.19274631), (0.2138066, 0.013806591, 0.19274631), (-0.11380657, 0.113806576, 0.19274631), (0.01380657, 0.013806591, 0.19274631), (-0.11380657, 0.21380658, 0.19274631), (0.01380657, 0.21380658, 0.19274631), (-0.049999997, 0.21380658, 0.19274631), (0.2138066, -0.11380657, 0.10427353), (0.2138066, 0.013806591, 0.10427353), (0.01380657, 0.013806591, 0.10427353), (0.01380657, 0.21380658, 0.10427353), (-0.049999997, 0.21380658, 0.10427353), (-0.11380657, 0.21380658, 0.10427353), (0.01380657, -0.11380657, 0.10427353), (-0.11380657, 0.113806576, 0.10427353), (0.01380657, -0.21380657, 0.10427353), (-0.21380657, 0.113806576, 0.10427353), (-0.049999997, -0.21380657, 0.10427353), (-0.21380657, 0.08619342, 0.10427353), (-0.11380657, -0.21380657, 0.10427353), (-0.11380657, 0.08619342, 0.10427353), (-0.11380657, -0.11380657, 0.10427353), (-0.11380657, -0.08619343, 0.10427353), (-0.21380657, -0.11380657, 0.10427353), (-0.21380657, -0.08619343, 0.10427353), (-0.13525452, -0.23525456, 0.093549535), (-0.13525452, -0.13525452, 0.093549535), (-0.23525451, -0.13525452, 0.093549535), (-0.23525451, -0.06474548, 0.093549535), (-0.13525452, -0.06474548, 0.093549535), (-0.13525452, 0.06474548, 0.093549535), (-0.049999997, -0.23525456, 0.093549535), (-0.23525451, 0.06474548, 0.093549535), (0.035254516, -0.23525456, 0.093549535), (-0.23525451, 0.13525452, 0.093549535), (0.035254516, -0.13525452, 0.093549535), (-0.13525452, 0.13525452, 0.093549535), (0.23525451, -0.13525452, 0.093549535), (-0.13525452, 0.23525453, 0.093549535), (0.23525451, 0.035254516, 0.093549535), (-0.049999997, 0.23525453, 0.093549535), (0.035254516, 0.035254516, 0.093549535), (0.035254516, 0.23525453, 0.093549535), (0.035254516, -0.13525452, 0.013119736), (0.23525451, -0.13525452, 0.013119736), (0.23525451, 0.035254516, 0.013119736), (0.035254516, 0.035254516, 0.013119736), (0.035254516, 0.23525453, 0.013119736), (-0.049999997, 0.23525453, 0.013119736), (0.035254516, -0.23525456, 0.013119736), (-0.13525452, 0.23525453, 0.013119736), (-0.049999997, -0.23525456, 0.013119736), (-0.13525452, 0.13525452, 0.013119736), (-0.13525452, -0.23525456, 0.013119736), (-0.23525451, 0.13525452, 0.013119736), (-0.13525452, -0.13525452, 0.013119736), (-0.23525451, 0.06474548, 0.013119736), (-0.23525451, -0.13525452, 0.013119736), (-0.13525452, 0.06474548, 0.013119736), (-0.23525451, -0.06474548, 0.013119736), (-0.13525452, -0.06474548, 0.013119736), (-0.123190045, -0.12319004, -0.0002852249), (-0.22319004, -0.12319004, -0.0002852249), (-0.22319004, -0.07680996, -0.0002852249), (-0.123190045, -0.07680996, -0.0002852249), (-0.123190045, 0.07680995, -0.0002852249), (-0.22319004, 0.07680995, -0.0002852249), (-0.123190045, -0.22319004, -0.0002852249), (-0.22319004, 0.123190045, -0.0002852249), (-0.049999997, -0.22319004, -0.0002852249), (-0.123190045, 0.123190045, -0.0002852249), (0.02319004, -0.22319004, -0.0002852249), (-0.123190045, 0.22319005, -0.0002852249), (0.02319004, -0.12319004, -0.0002852249), (-0.049999997, 0.22319005, -0.0002852249), (0.22319007, -0.12319004, -0.0002852249), (0.02319004, 0.22319005, -0.0002852249), (0.22319007, 0.02319004, -0.0002852249), (0.02319004, 0.02319004, -0.0002852249), (0.02319004, -0.22319004, -0.07267208), (0.02319004, -0.12319004, -0.07267208), (0.22319007, -0.12319004, -0.07267208), (0.22319007, 0.02319004, -0.07267208), (0.02319004, 0.02319004, -0.07267208), (0.02319004, 0.22319005, -0.07267208), (-0.049999997, -0.22319004, -0.07267208), (-0.049999997, 0.22319005, -0.07267208), (-0.123190045, -0.22319004, -0.07267208), (-0.123190045, 0.22319005, -0.07267208), (-0.123190045, -0.12319004, -0.07267208), (-0.123190045, 0.123190045, -0.07267208), (-0.22319004, -0.12319004, -0.07267208), (-0.22319004, 0.123190045, -0.07267208), (-0.22319004, -0.07680996, -0.07267208), (-0.22319004, 0.07680995, -0.07267208), (-0.123190045, -0.07680996, -0.07267208), (-0.123190045, 0.07680995, -0.07267208), (-0.21648756, -0.11648758, -0.08607708), (-0.21648756, -0.08351242, -0.08607708), (-0.11648758, -0.08351242, -0.08607708), (-0.11648758, 0.083512425, -0.08607708), (-0.21648756, 0.083512425, -0.08607708), (-0.21648756, 0.11648757, -0.08607708), (-0.11648758, -0.11648758, -0.08607708), (-0.11648758, 0.11648757, -0.08607708), (-0.11648758, -0.21648757, -0.08607708), (-0.11648758, 0.21648757, -0.08607708), (-0.049999997, -0.21648757, -0.08607708), (-0.049999997, 0.21648757, -0.08607708), (0.016487578, -0.21648757, -0.08607708), (0.016487578, 0.21648757, -0.08607708), (0.016487578, -0.11648758, -0.08607708), (0.016487578, 0.01648758, -0.08607708), (0.21648757, -0.11648758, -0.08607708), (0.21648757, 0.01648758, -0.08607708), (-0.049999997, -0.21648757, -0.15310192), (0.016487578, -0.21648757, -0.15310192), (0.016487578, -0.11648758, -0.15310192), (0.21648757, -0.11648758, -0.15310192), (0.21648757, 0.01648758, -0.15310192), (0.016487578, 0.01648758, -0.15310192), (-0.11648758, -0.21648757, -0.15310192), (0.016487578, 0.21648757, -0.15310192), (-0.11648758, -0.11648758, -0.15310192), (-0.049999997, 0.21648757, -0.15310192), (-0.21648756, -0.11648758, -0.15310192), (-0.11648758, 0.21648757, -0.15310192), (-0.21648756, -0.08351242, -0.15310192), (-0.11648758, 0.11648757, -0.15310192), (-0.11648758, -0.08351242, -0.15310192), (-0.21648756, 0.11648757, -0.15310192), (-0.11648758, 0.083512425, -0.15310192), (-0.21648756, 0.083512425, -0.15310192), (-0.23257351, -0.06742649, -0.17320938), (-0.13257352, -0.06742649, -0.17320938), (-0.13257352, -0.06742649, -0.2536392), (-0.13257352, 0.06742649, -0.2536392), (-0.13257352, 0.06742649, -0.17320938), (-0.23257351, 0.06742649, -0.17320938), (-0.23257351, 0.13257352, -0.17320938), (-0.23257351, -0.1325735, -0.17320938), (-0.23257351, 0.06742649, -0.2536392), (-0.23257351, 0.13257352, -0.2536392), (-0.13257352, 0.13257352, -0.2536392), (-0.13257352, 0.13257352, -0.17320938), (-0.13257352, 0.23257352, -0.17320938), (-0.13257352, 0.23257352, -0.2536392), (-0.049999997, 0.23257352, -0.2536392), (-0.049999997, 0.23257352, -0.17320938), (0.03257351, 0.23257352, -0.2536392), (0.03257351, 0.23257352, -0.17320938), (0.03257351, 0.03257351, -0.2536392), (0.03257351, -0.1325735, -0.2536392), (0.23257354, 0.03257351, -0.2536392), (0.03257351, 0.03257351, -0.17320938), (0.23257354, 0.03257351, -0.17320938), (0.23257354, -0.1325735, -0.2536392), (0.23257354, -0.1325735, -0.17320938), (0.03257351, -0.1325735, -0.17320938), (0.03257351, -0.23257351, -0.17320938), (0.03257351, -0.23257351, -0.2536392), (-0.049999997, -0.23257351, -0.17320938), (-0.049999997, -0.23257351, -0.2536392), (-0.13257352, -0.23257351, -0.17320938), (-0.13257352, -0.1325735, -0.2536392), (-0.13257352, -0.23257351, -0.2536392), (-0.13257352, -0.1325735, -0.17320938), (-0.23257351, -0.1325735, -0.2536392), (-0.23257351, -0.06742649, -0.2536392)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = []
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (53.325142784625996, 2.848368003192604, -25.90180841271132, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Mesh "mesh495"
    {
        uniform bool doubleSided = 0
        float3[] extent = [(-0.19999999, -0.35, -0.17548667), (0.19999999, 0.35, 0.17548667)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 2, 2, 0, 3, 2, 3, 4, 1, 5, 0, 6, 5, 1, 4, 3, 7, 4, 7, 8, 6, 9, 5, 10, 9, 6, 8, 7, 11, 8, 11, 12, 10, 13, 9, 14, 13, 10, 12, 11, 15, 12, 15, 16, 14, 17, 13, 18, 17, 14, 16, 15, 19, 16, 19, 20, 18, 21, 17, 22, 21, 18, 20, 19, 23, 20, 23, 24, 22, 25, 21, 26, 25, 22, 24, 23, 27, 24, 27, 28, 26, 29, 25, 30, 29, 26, 28, 27, 31, 28, 31, 32, 30, 33, 29, 34, 33, 30, 32, 31, 35, 32, 35, 36, 34, 37, 33, 38, 37, 34, 36, 35, 39, 36, 39, 40, 38, 41, 37, 42, 41, 38, 40, 39, 43, 40, 43, 44, 42, 45, 41, 46, 45, 42, 44, 43, 47, 44, 47, 48, 46, 49, 45, 50, 49, 46, 48, 47, 51, 48, 51, 52, 50, 53, 49, 54, 53, 50, 52, 51, 55, 52, 55, 56, 54, 57, 53, 58, 57, 54, 56, 55, 59, 56, 59, 60, 58, 61, 57, 62, 61, 58, 60, 59, 63, 60, 63, 64, 62, 65, 61, 66, 65, 62, 64, 63, 67, 64, 67, 68, 66, 69, 65, 70, 69, 66, 68, 67, 71, 68, 71, 72, 70, 73, 69, 74, 73, 70, 72, 75, 74, 72, 71, 75, 74, 75, 73, 65, 76, 61, 69, 77, 65, 65, 77, 76, 73, 78, 69, 69, 78, 77, 75, 79, 73, 73, 79, 78, 71, 80, 75, 75, 80, 79, 67, 81, 71, 71, 81, 80, 61, 76, 82, 61, 82, 57, 67, 83, 81, 63, 83, 67, 57, 82, 84, 57, 84, 53, 63, 85, 83, 59, 85, 63, 53, 84, 86, 53, 86, 49, 59, 87, 85, 55, 87, 59, 49, 86, 88, 49, 88, 45, 55, 89, 87, 51, 89, 55, 45, 88, 90, 45, 90, 41, 51, 91, 89, 47, 91, 51, 41, 90, 92, 41, 92, 37, 47, 93, 91, 43, 93, 47, 37, 92, 94, 37, 94, 33, 43, 95, 93, 39, 95, 43, 33, 94, 96, 33, 96, 29, 39, 97, 95, 35, 97, 39, 29, 96, 98, 29, 98, 25, 35, 99, 97, 31, 99, 35, 25, 98, 100, 25, 100, 21, 31, 101, 99, 27, 101, 31, 21, 100, 102, 21, 102, 17, 27, 103, 101, 23, 103, 27, 17, 102, 104, 17, 104, 13, 23, 105, 103, 19, 105, 23, 13, 104, 106, 13, 106, 9, 19, 107, 105, 15, 107, 19, 9, 106, 108, 9, 108, 5, 15, 109, 107, 11, 109, 15, 5, 108, 110, 5, 110, 0, 11, 111, 109, 7, 111, 11, 0, 110, 112, 0, 112, 3, 3, 113, 7, 7, 113, 111, 3, 112, 113, 106, 114, 108, 108, 115, 110, 108, 114, 115, 110, 116, 112, 110, 115, 116, 112, 117, 113, 112, 116, 117, 113, 118, 111, 113, 117, 118, 111, 119, 109, 111, 118, 119, 106, 120, 114, 104, 120, 106, 109, 119, 121, 109, 121, 107, 104, 122, 120, 102, 122, 104, 107, 121, 123, 107, 123, 105, 102, 124, 122, 100, 124, 102, 105, 123, 125, 105, 125, 103, 100, 126, 124, 98, 126, 100, 103, 125, 127, 103, 127, 101, 98, 128, 126, 96, 128, 98, 101, 127, 129, 101, 129, 99, 96, 130, 128, 94, 130, 96, 99, 129, 131, 99, 131, 97, 94, 132, 130, 92, 132, 94, 97, 131, 133, 97, 133, 95, 92, 134, 132, 90, 134, 92, 95, 133, 135, 95, 135, 93, 90, 136, 134, 88, 136, 90, 93, 135, 137, 93, 137, 91, 88, 138, 136, 86, 138, 88, 91, 137, 139, 91, 139, 89, 86, 140, 138, 84, 140, 86, 89, 139, 141, 89, 141, 87, 84, 142, 140, 82, 142, 84, 87, 141, 143, 87, 143, 85, 82, 144, 142, 76, 144, 82, 85, 143, 145, 85, 145, 83, 76, 146, 144, 77, 146, 76, 83, 145, 147, 83, 147, 81, 77, 148, 146, 78, 148, 77, 81, 147, 149, 81, 149, 80, 78, 150, 148, 79, 150, 78, 80, 151, 79, 80, 149, 151, 79, 151, 150, 146, 152, 144, 148, 153, 146, 146, 153, 152, 150, 154, 148, 148, 154, 153, 151, 155, 150, 150, 155, 154, 149, 156, 151, 151, 156, 155, 147, 157, 149, 149, 157, 156, 144, 152, 158, 144, 158, 142, 147, 159, 157, 145, 159, 147, 142, 158, 160, 142, 160, 140, 145, 161, 159, 143, 161, 145, 140, 160, 162, 140, 162, 138, 143, 163, 161, 141, 163, 143, 138, 162, 164, 138, 164, 136, 141, 165, 163, 139, 165, 141, 136, 164, 166, 136, 166, 134, 139, 167, 165, 137, 167, 139, 134, 166, 168, 134, 168, 132, 137, 169, 167, 135, 169, 137, 132, 168, 170, 132, 170, 130, 135, 171, 169, 133, 171, 135, 130, 170, 172, 130, 172, 128, 133, 173, 171, 131, 173, 133, 128, 172, 174, 128, 174, 126, 131, 175, 173, 129, 175, 131, 126, 174, 176, 126, 176, 124, 129, 177, 175, 127, 177, 129, 124, 176, 178, 124, 178, 122, 127, 179, 177, 125, 179, 127, 122, 178, 180, 122, 180, 120, 125, 181, 179, 123, 181, 125, 120, 180, 182, 120, 182, 114, 123, 183, 181, 121, 183, 123, 114, 182, 184, 114, 184, 115, 121, 185, 183, 119, 185, 121, 115, 184, 186, 115, 186, 116, 119, 187, 185, 118, 187, 119, 116, 186, 188, 116, 188, 117, 117, 189, 118, 118, 189, 187, 117, 188, 189, 182, 190, 184, 184, 191, 186, 184, 190, 191, 186, 192, 188, 186, 191, 192, 188, 193, 189, 188, 192, 193, 189, 194, 187, 189, 193, 194, 187, 195, 185, 187, 194, 195, 182, 196, 190, 180, 196, 182, 185, 195, 197, 185, 197, 183, 180, 198, 196, 178, 198, 180, 183, 197, 199, 183, 199, 181, 178, 200, 198, 176, 200, 178, 181, 199, 201, 181, 201, 179, 176, 202, 200, 174, 202, 176, 179, 201, 203, 179, 203, 177, 174, 204, 202, 172, 204, 174, 177, 203, 205, 177, 205, 175, 172, 206, 204, 170, 206, 172, 175, 205, 207, 175, 207, 173, 170, 208, 206, 168, 208, 170, 173, 207, 209, 173, 209, 171, 168, 210, 208, 166, 210, 168, 171, 209, 211, 171, 211, 169, 166, 212, 210, 164, 212, 166, 169, 211, 213, 169, 213, 167, 164, 214, 212, 162, 214, 164, 167, 213, 215, 167, 215, 165, 162, 216, 214, 160, 216, 162, 165, 215, 217, 165, 217, 163, 160, 218, 216, 158, 218, 160, 163, 217, 219, 163, 219, 161, 158, 220, 218, 152, 220, 158, 161, 219, 221, 161, 221, 159, 152, 222, 220, 153, 222, 152, 159, 221, 223, 159, 223, 157, 153, 224, 222, 154, 224, 153, 157, 223, 225, 157, 225, 156, 154, 226, 224, 155, 226, 154, 156, 227, 155, 156, 225, 227, 155, 227, 226, 222, 228, 220, 224, 229, 222, 222, 229, 228, 226, 230, 224, 224, 230, 229, 227, 231, 226, 226, 231, 230, 225, 232, 227, 227, 232, 231, 223, 233, 225, 225, 233, 232, 220, 228, 234, 220, 234, 218, 223, 235, 233, 221, 235, 223, 218, 234, 236, 218, 236, 216, 221, 237, 235, 219, 237, 221, 216, 236, 238, 216, 238, 214, 219, 239, 237, 217, 239, 219, 214, 238, 240, 214, 240, 212, 217, 241, 239, 215, 241, 217, 212, 240, 242, 212, 242, 210, 215, 243, 241, 213, 243, 215, 210, 242, 244, 210, 244, 208, 213, 245, 243, 211, 245, 213, 208, 244, 246, 208, 246, 206, 211, 247, 245, 209, 247, 211, 206, 246, 248, 206, 248, 204, 209, 249, 247, 207, 249, 209, 204, 248, 250, 204, 250, 202, 207, 251, 249, 205, 251, 207, 202, 250, 252, 202, 252, 200, 205, 253, 251, 203, 253, 205, 200, 252, 254, 200, 254, 198, 203, 255, 253, 201, 255, 203, 198, 254, 256, 198, 256, 196, 201, 257, 255, 199, 257, 201, 196, 256, 258, 196, 258, 190, 199, 259, 257, 197, 259, 199, 190, 258, 260, 190, 260, 191, 197, 261, 259, 195, 261, 197, 191, 260, 262, 191, 262, 192, 195, 263, 261, 194, 263, 195, 192, 262, 264, 192, 264, 193, 193, 265, 194, 194, 265, 263, 193, 264, 265, 258, 266, 260, 260, 267, 262, 260, 266, 267, 262, 268, 264, 262, 267, 268, 264, 269, 265, 264, 268, 269, 265, 270, 263, 265, 269, 270, 263, 271, 261, 263, 270, 271, 258, 272, 266, 256, 272, 258, 261, 271, 273, 261, 273, 259, 256, 274, 272, 254, 274, 256, 259, 273, 275, 259, 275, 257, 254, 276, 274, 252, 276, 254, 257, 275, 277, 257, 277, 255, 252, 278, 276, 250, 278, 252, 255, 277, 279, 255, 279, 253, 250, 280, 278, 248, 280, 250, 253, 279, 281, 253, 281, 251, 248, 282, 280, 246, 282, 248, 251, 281, 283, 251, 283, 249, 246, 284, 282, 244, 284, 246, 249, 283, 285, 249, 285, 247, 244, 286, 284, 242, 286, 244, 247, 285, 287, 247, 287, 245, 242, 288, 286, 240, 288, 242, 245, 287, 289, 245, 289, 243, 240, 290, 288, 238, 290, 240, 243, 289, 291, 243, 291, 241, 238, 292, 290, 236, 292, 238, 241, 291, 293, 241, 293, 239, 236, 294, 292, 234, 294, 236, 239, 293, 295, 239, 295, 237, 234, 296, 294, 228, 296, 234, 237, 295, 297, 237, 297, 235, 228, 298, 296, 229, 298, 228, 235, 297, 299, 235, 299, 233, 229, 300, 298, 230, 300, 229, 233, 299, 301, 233, 301, 232, 230, 302, 300, 231, 302, 230, 232, 303, 231, 232, 301, 303, 231, 303, 302, 298, 304, 296, 300, 305, 298, 298, 305, 304, 302, 306, 300, 300, 306, 305, 303, 307, 302, 302, 307, 306, 301, 308, 303, 303, 308, 307, 299, 309, 301, 301, 309, 308, 296, 304, 310, 296, 310, 294, 299, 311, 309, 297, 311, 299, 294, 310, 312, 294, 312, 292, 297, 313, 311, 295, 313, 297, 292, 312, 314, 292, 314, 290, 295, 315, 313, 293, 315, 295, 290, 314, 316, 290, 316, 288, 293, 317, 315, 291, 317, 293, 288, 316, 318, 288, 318, 286, 291, 319, 317, 289, 319, 291, 286, 318, 320, 286, 320, 284, 289, 321, 319, 287, 321, 289, 284, 320, 322, 284, 322, 282, 287, 323, 321, 285, 323, 287, 282, 322, 324, 282, 324, 280, 285, 325, 323, 283, 325, 285, 280, 324, 326, 280, 326, 278, 283, 327, 325, 281, 327, 283, 278, 326, 328, 278, 328, 276, 281, 329, 327, 279, 329, 281, 276, 328, 330, 276, 330, 274, 279, 331, 329, 277, 331, 279, 274, 330, 332, 274, 332, 272, 277, 333, 331, 275, 333, 277, 272, 332, 334, 272, 334, 266, 275, 335, 333, 273, 335, 275, 266, 334, 336, 266, 336, 267, 273, 337, 335, 271, 337, 273, 267, 336, 338, 267, 338, 268, 271, 339, 337, 270, 339, 271, 268, 338, 340, 268, 340, 269, 269, 341, 270, 270, 341, 339, 269, 340, 341, 334, 342, 336, 336, 343, 338, 336, 342, 343, 338, 344, 340, 338, 343, 344, 340, 345, 341, 340, 344, 345, 341, 346, 339, 341, 345, 346, 339, 347, 337, 339, 346, 347, 334, 348, 342, 332, 348, 334, 337, 347, 349, 337, 349, 335, 332, 350, 348, 330, 350, 332, 335, 349, 351, 335, 351, 333, 330, 352, 350, 328, 352, 330, 328, 353, 352, 326, 353, 328, 326, 354, 353, 324, 354, 326, 324, 355, 354, 322, 355, 324, 322, 356, 355, 320, 356, 322, 320, 357, 356, 318, 357, 320, 318, 358, 357, 316, 358, 318, 316, 359, 358, 314, 359, 316, 314, 360, 359, 312, 360, 314, 312, 361, 360, 310, 361, 312, 310, 362, 361, 304, 362, 310, 304, 363, 362, 305, 363, 304, 305, 364, 363, 306, 364, 305, 306, 365, 364, 307, 365, 306, 307, 366, 365, 308, 366, 307, 308, 367, 366, 309, 367, 308, 309, 368, 367, 311, 368, 309, 311, 369, 368, 313, 369, 311, 313, 370, 369, 315, 370, 313, 315, 371, 370, 317, 371, 315, 317, 372, 371, 319, 372, 317, 319, 373, 372, 321, 373, 319, 321, 374, 373, 323, 374, 321, 323, 375, 374, 325, 375, 323, 325, 376, 375, 327, 376, 325, 327, 377, 376, 329, 377, 327, 329, 378, 377, 331, 378, 329, 331, 379, 378, 333, 379, 331, 379, 333, 380, 333, 351, 380, 374, 381, 373, 375, 382, 374, 374, 382, 381, 376, 383, 375, 375, 383, 382, 377, 384, 376, 376, 384, 383, 378, 385, 377, 377, 385, 384, 379, 386, 378, 378, 386, 385, 380, 387, 379, 379, 387, 386, 373, 381, 388, 373, 388, 372, 380, 389, 387, 351, 389, 380, 372, 388, 390, 372, 390, 371, 351, 391, 389, 349, 391, 351, 371, 390, 392, 371, 392, 370, 349, 393, 391, 347, 393, 349, 393, 394, 391, 391, 394, 395, 391, 395, 389, 393, 396, 394, 347, 397, 393, 397, 396, 393, 346, 397, 347, 397, 398, 396, 396, 398, 394, 394, 398, 399, 346, 400, 397, 400, 398, 397, 345, 400, 346, 400, 401, 398, 399, 398, 401, 345, 402, 400, 402, 401, 400, 402, 399, 401, 344, 402, 345, 344, 403, 402, 403, 399, 402, 343, 403, 344, 343, 404, 403, 342, 404, 343, 403, 405, 399, 404, 405, 403, 342, 406, 404, 348, 406, 342, 404, 407, 405, 405, 407, 399, 406, 407, 404, 348, 408, 406, 350, 408, 348, 399, 407, 409, 399, 409, 394, 406, 410, 407, 408, 410, 406, 409, 407, 410, 408, 409, 410, 350, 411, 408, 411, 409, 408, 352, 411, 350, 411, 412, 409, 394, 409, 412, 352, 413, 411, 413, 412, 411, 353, 413, 352, 412, 414, 394, 413, 415, 412, 415, 416, 412, 412, 416, 417, 353, 418, 413, 418, 415, 413, 418, 416, 415, 354, 418, 353, 354, 419, 418, 419, 416, 418, 355, 419, 354, 394, 414, 420, 420, 395, 394, 421, 395, 420, 420, 414, 422, 419, 423, 416, 417, 416, 423, 355, 424, 419, 424, 423, 419, 424, 417, 423, 356, 424, 355, 356, 425, 424, 425, 417, 424, 357, 425, 356, 357, 426, 425, 358, 426, 357, 427, 395, 421, 389, 395, 427, 389, 427, 387, 387, 427, 428, 421, 428, 427, 387, 428, 386, 386, 428, 429, 386, 429, 385, 425, 430, 417, 426, 430, 425, 358, 431, 426, 359, 431, 358, 426, 432, 430, 430, 432, 417, 431, 432, 426, 417, 432, 433, 417, 433, 412, 412, 433, 434, 434, 433, 435, 359, 436, 431, 360, 436, 359, 431, 437, 432, 433, 432, 437, 436, 437, 431, 436, 433, 437, 360, 438, 436, 438, 433, 436, 361, 438, 360, 361, 439, 438, 362, 439, 361, 438, 440, 433, 439, 440, 438, 440, 441, 433, 439, 441, 440, 433, 441, 435, 362, 442, 439, 442, 441, 439, 363, 442, 362, 442, 443, 441, 435, 441, 443, 363, 444, 442, 444, 443, 442, 444, 435, 443, 364, 444, 363, 364, 445, 444, 445, 435, 444, 365, 445, 364, 365, 446, 445, 366, 446, 365, 445, 447, 435, 446, 447, 445, 447, 448, 435, 446, 448, 447, 435, 448, 434, 366, 449, 446, 449, 448, 446, 367, 449, 366, 449, 450, 448, 434, 448, 450, 367, 451, 449, 451, 450, 449, 451, 434, 450, 368, 451, 367, 368, 452, 451, 452, 434, 451, 369, 452, 368, 452, 453, 434, 434, 453, 412, 369, 454, 452, 454, 453, 452, 370, 454, 369, 370, 392, 454, 454, 455, 453, 412, 453, 455, 392, 455, 454, 455, 456, 412, 392, 456, 455, 390, 456, 392, 412, 456, 414, 390, 414, 456, 388, 414, 390, 388, 422, 414, 381, 422, 388, 381, 457, 422, 382, 457, 381, 457, 420, 422, 382, 458, 457, 458, 420, 457, 383, 458, 382, 383, 459, 458, 459, 420, 458, 384, 459, 383, 384, 460, 459, 385, 460, 384, 385, 429, 460, 460, 461, 459, 429, 461, 460, 461, 420, 459, 429, 462, 461, 428, 462, 429, 462, 428, 421, 463, 420, 461, 464, 461, 462, 463, 461, 464, 465, 421, 420, 465, 420, 463, 466, 462, 421, 464, 462, 466, 466, 421, 465, 467, 465, 463, 468, 463, 464, 467, 463, 468, 469, 466, 465, 469, 465, 467, 470, 464, 466, 468, 464, 470, 470, 466, 469, 467, 471, 469, 468, 472, 467, 467, 472, 471, 470, 473, 468, 468, 473, 472, 469, 474, 470, 469, 471, 474, 470, 474, 473, 472, 475, 471, 471, 476, 474, 471, 475, 476, 473, 477, 472, 472, 477, 475, 474, 478, 473, 474, 476, 478, 473, 478, 477, 475, 479, 476, 476, 480, 478, 476, 479, 480, 477, 481, 475, 475, 481, 479, 478, 482, 477, 478, 480, 482, 477, 482, 481, 479, 483, 480, 480, 484, 482, 480, 483, 484, 481, 485, 479, 479, 485, 483, 482, 486, 481, 482, 484, 486, 481, 486, 485, 483, 487, 484, 484, 488, 486, 484, 487, 488, 485, 489, 483, 483, 489, 487, 486, 490, 485, 486, 488, 490, 485, 490, 489, 487, 491, 488, 488, 492, 490, 488, 491, 492, 489, 493, 487, 487, 493, 491, 490, 494, 489, 490, 492, 494, 489, 494, 493, 491, 495, 492, 492, 496, 494, 492, 495, 496, 493, 497, 491, 491, 497, 495, 494, 498, 493, 494, 496, 498, 493, 498, 497, 495, 499, 496, 496, 500, 498, 496, 499, 500, 497, 501, 495, 495, 501, 499, 498, 502, 497, 498, 500, 502, 497, 502, 501, 499, 503, 500, 500, 504, 502, 500, 503, 504, 501, 505, 499, 499, 505, 503, 502, 506, 501, 502, 504, 506, 501, 506, 505, 503, 507, 504, 504, 508, 506, 504, 507, 508, 505, 509, 503, 503, 509, 507, 506, 510, 505, 506, 508, 510, 505, 510, 509, 507, 511, 508, 508, 512, 510, 508, 511, 512, 509, 513, 507, 507, 513, 511, 510, 514, 509, 510, 512, 514, 509, 514, 513, 511, 515, 512, 512, 516, 514, 512, 515, 516, 513, 517, 511, 511, 517, 515, 514, 518, 513, 514, 516, 518, 513, 518, 517, 515, 519, 516, 516, 520, 518, 516, 519, 520, 515, 521, 519, 517, 521, 515, 519, 521, 520, 518, 520, 522, 518, 522, 517, 520, 521, 522, 517, 522, 521]
        rel material:binding = </GameObject/Materials/lambert2_34632>
        normal3f[] normals = [(1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.70710677, -0.70710677, 0), (0.70710677, -0.70710677, 0), (0, 1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (-1, 0, 0), (0.9972446, -0.074184395, 0), (0.9972446, -0.07418396, 0), (-1, 0, 0), (-0.9999765, 0.0068489974, 0), (0.94885, -0.31572744, 0), (0.94884974, -0.31572792, 0), (-0.9999765, 0.006848917, 0), (-0.99839395, 0.056652993, 0), (0.78809404, -0.61555475, 0), (0.7880939, -0.615555, 0), (-0.99839395, 0.056652926, 0), (-0.98121625, 0.19291106, 0), (0.5678031, -0.82316446, 0), (0.56780326, -0.8231643, 0), (-0.98121625, 0.19291098, 0), (-0.90458703, 0.42628902, 0), (0.36415014, -0.9313403, 0), (0.3641501, -0.9313403, 0), (-0.90458673, 0.42628953, 0), (-0.7147832, 0.6993462, 0), (0.20759206, -0.9782155, 0), (0.2075921, -0.9782155, 0), (-0.7147835, 0.6993459, 0), (-0.44059303, 0.89770705, 0), (0.097085826, -0.995276, 0), (0.097086, -0.995276, 0), (-0.44059286, 0.89770705, 0), (-0.18742402, 0.9822792, 0), (0.052557435, -0.9986179, 0), (0.052557435, -0.9986179, 0), (-0.18742348, 0.98227924, 0), (-0.07849703, 0.9969144, 0), (1, 0, 0), (1, 0, 0), (-0.07849744, 0.99691427, 0), (-0.18742402, 0.9822792, 0), (-0.07801969, -0.9969518, 0), (-0.078019984, -0.9969518, 0), (-0.1874238, 0.9822792, 0), (-0.44059303, 0.89770705, 0), (-0.34658355, -0.9380191, 0), (-0.346584, -0.938019, 0), (-0.44059306, 0.8977069, 0), (-0.7147832, 0.6993462, 0), (-0.6836516, -0.7298085, 0), (-0.68365157, -0.72980857, 0), (-0.71478295, 0.6993463, 0), (-0.90458703, 0.42628902, 0), (-0.89124733, -0.45351768, 0), (-0.89124703, -0.45351803, 0), (-0.9045868, 0.42628938, 0), (-0.9812165, 0.19291009, 0), (-0.9723002, -0.23373607, 0), (-0.9723002, -0.23373604, 0), (-0.9812165, 0.19291033, 0), (-0.99839395, 0.056652993, 0), (-0.99513704, -0.09850099, 0), (-0.99513704, -0.098501004, 0), (-0.99839383, 0.056653228, 0), (-0.99999416, 0.0034250007, 0), (-0.99959666, -0.02840016, 0), (-0.99959666, -0.028399993, 0), (-0.99999416, 0.0034248773, 0), (-0.05687274, -0.01367183, -0.99828774), (-0.058367662, -0.0057774237, -0.9982784), (-0.058685053, -0.0016673855, -0.99827516), (-0.05871883, 0.00020113199, -0.99827456), (-0.058574017, 0.003323724, -0.99827754), (-0.057363443, 0.0112779215, -0.99828964), (-0.051779322, -0.026348239, -0.9983109), (-0.052510593, 0.024745805, -0.99831367), (-0.039339267, -0.041995306, -0.9983431), (-0.0412807, 0.040388927, -0.9983309), (-0.01995701, -0.054012973, -0.99834085), (-0.025552373, 0.05206296, -0.9983169), (-0.0045674173, -0.058365356, -0.99828476), (-0.01093968, 0.057334468, -0.9982951), (0.029386615, -0.029386405, -0.99913615), (-0.0046094456, 0.058541007, -0.9982743), (0.03092977, -0.029344574, -0.9990907), (-0.010939813, 0.057334602, -0.9982951), (0.0056955954, -0.058386896, -0.9982778), (-0.025552567, 0.052062865, -0.9983169), (0.012162944, -0.05731386, -0.9982821), (-0.041280527, 0.04038907, -0.9983309), (0.021284705, -0.054437473, -0.99829024), (-0.052510615, 0.024745652, -0.99831367), (0.033041727, -0.047901537, -0.99830544), (-0.057363268, 0.011277864, -0.99828964), (0.045620393, -0.035632595, -0.99832314), (-0.058573965, 0.0033238865, -0.99827754), (0.05489253, -0.018265383, -0.99832517), (-0.058719564, 0.0004021844, -0.99827445), (0.058399715, -0.0043443227, -0.9982838), (-0.02938643, -0.02938643, -0.99913615), (0.029386405, 0.029386405, -0.99913615), (-0.029386405, -0.029386405, -0.99913615), (0.020791586, 0.008612766, -0.99974674), (-0.029386405, 0.029386405, -0.99913615), (0.0501353, -0.02076677, -0.99852645), (0.029386405, 0.029386405, -0.99913615), (0.99570066, -0.074069366, 0.055622347), (0, 0.9984603, 0.055469763), (0.70601815, -0.70601815, 0.055469763), (0.9984604, 0, 0.055469483), (0, 0.9984603, 0.055469763), (0, 0.9984603, 0.055469763), (0.94734466, -0.3152268, 0.056304634), (0, -0.9984603, 0.055469763), (0.7868455, -0.6145794, 0.05627018), (-0.9984604, 0, 0.05546951), (0.56691295, -0.8218737, 0.055975), (-0.99843687, 0.0068383496, 0.055470895), (0.36358434, -0.92989296, 0.05572753), (-0.996854, 0.05656558, 0.055520557), (0.2072711, -0.9767025, 0.055594873), (-0.97969204, 0.19261116, 0.055717252), (0.0969361, -0.9937405, 0.055524807), (-0.90316147, 0.425618, 0.05611279), (0.05247709, -0.99708027, 0.05546963), (-0.7136455, 0.69823277, 0.056401175), (0.9984603, 0, 0.055469763), (-0.4398975, 0.89629006, 0.056164656), (-0.07789835, -0.9954075, 0.055638563), (-0.18713164, 0.9807484, 0.055805504), (-0.34602833, -0.9365172, 0.056568388), (-0.07837648, 0.99537945, 0.05546931), (-0.6825554, -0.7286383, 0.056606658), (-0.18713148, 0.98074853, 0.05580545), (-0.8898454, -0.45280433, 0.056066293), (-0.43989792, 0.89628977, 0.056164615), (-0.97079134, -0.23337328, 0.0556873), (-0.71364504, 0.6982331, 0.05640106), (-0.99360114, -0.098348975, 0.055534944), (-0.9031613, 0.4256186, 0.05611272), (-0.9980568, -0.02835646, 0.055482388), (-0.97969216, 0.19261079, 0.055717252), (-0.99845433, 0.0034197504, 0.055472303), (-0.996854, 0.05656568, 0.055520665), (-0.08254487, -0.008170467, 0.9965539), (-0.08299328, -0.0023578205, 0.9965473), (-0.0830411, 0.00028451352, 0.9965461), (-0.082836516, 0.004700418, 0.9965521), (-0.0811253, 0.015949631, 0.99657625), (-0.07426418, 0.034997206, 0.99662435), (-0.08043145, -0.019335184, 0.9965726), (-0.058382854, 0.0571222, 0.9966587), (-0.07323, -0.03726361, 0.9966186), (-0.036138117, 0.07363143, 0.9966305), (-0.055638097, -0.059394527, 0.9966828), (-0.015471358, 0.08108501, 0.99658716), (-0.028225414, -0.07639114, 0.99667835), (-0.006518987, 0.08278985, 0.99654573), (-0.0064594224, -0.0825421, 0.99656665), (-0.015471549, 0.08108503, 0.99658716), (0.041594855, -0.041594855, 0.99826837), (-0.036138065, 0.07363155, 0.9966305), (0.043776825, -0.041533414, 0.99817765), (-0.05838288, 0.057121947, 0.9966587), (0.008054537, -0.082571864, 0.9965526), (-0.07426433, 0.03499737, 0.99662435), (0.017200898, -0.08105467, 0.9965612), (-0.081125356, 0.015949495, 0.99657625), (0.030101929, -0.076987386, 0.99657756), (-0.08283657, 0.0047006016, 0.9965521), (0.04672931, -0.067745104, 0.9966078), (-0.083042115, 0.00056889444, 0.99654585), (0.06452039, -0.05039463, 0.9966432), (-0.041594803, -0.041594803, 0.99826837), (0.07763347, -0.025832301, 0.9966472), (-0.041594855, -0.041594855, 0.99826837), (0.08259046, -0.006143893, 0.9965647), (-0.041594855, 0.041594855, 0.99826837), (0.041594855, 0.041594855, 0.99826837), (0.04159489, 0.04159489, 0.99826837), (0.029448058, 0.012197719, 0.99949193), (0.07091994, -0.029375844, 0.99704933), (0.94885, -0.31572744, 0), (0.9972446, -0.074184395, 0), (0, 1, 0), (0.70710677, -0.70710677, 0), (1, 0, 0), (0, 1, 0), (0.78809404, -0.61555475, 0), (0, 1, 0), (0.5678032, -0.82316434, 0), (0, -1, 0), (0.36415052, -0.93134016, 0), (-1, 0, 0), (0.20759206, -0.9782155, 0), (-0.9999765, 0.006848917, 0), (0.09708612, -0.995276, 0), (-0.99839395, 0.056652926, 0), (0.05255807, -0.9986179, 0), (-0.98121625, 0.19291098, 0), (1, 0, 0), (-0.9045869, 0.4262893, 0), (-0.07801905, -0.9969518, 0), (-0.7147835, 0.6993459, 0), (-0.34658328, -0.93801916, 0), (-0.44059286, 0.89770705, 0), (-0.6836517, -0.72980845, 0), (-0.18742374, 0.9822792, 0), (-0.8912473, -0.4535178, 0), (-0.07849713, 0.9969144, 0), (-0.9723002, -0.23373567, 0), (-0.18742348, 0.98227924, 0), (-0.99513704, -0.09850099, 0), (-0.44059306, 0.8977069, 0), (-0.99959666, -0.02840016, 0), (-0.71478266, 0.6993466, 0), (-0.99999416, 0.0034248773, 0), (-0.9045865, 0.4262901, 0), (-0.99839395, 0.056652606, 0), (-0.9812165, 0.19291002, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.7880939, -0.61555505, 0), (0.94885, -0.31572744, 0), (0.9972446, -0.074184105, 0), (0, 1, 0), (0.7071065, -0.70710707, 0), (1, 0, 0), (0.5678031, -0.82316446, 0), (0, 1, 0), (0.36415014, -0.9313403, 0), (0, 1, 0), (0.2075927, -0.9782154, 0), (0, -1, 0), (0.09708645, -0.99527586, 0), (-1, 0, 0), (0.052557435, -0.9986179, 0), (-0.9999765, 0.006848917, 0), (1, 0, 0), (-0.99839395, 0.056652926, 0), (-0.07801905, -0.9969518, 0), (-0.98121625, 0.19291098, 0), (-0.34658328, -0.93801916, 0), (-0.90458673, 0.42628953, 0), (-0.68365145, -0.7298087, 0), (-0.7147835, 0.6993459, 0), (-0.8912473, -0.4535178, 0), (-0.44059286, 0.89770705, 0), (-0.97230023, -0.23373534, 0), (-0.18742348, 0.98227924, 0), (-0.9951369, -0.09850129, 0), (-0.07849713, 0.9969144, 0), (-0.99959666, -0.02840016, 0), (-0.18742348, 0.98227924, 0), (-0.99999416, 0.0034251958, 0), (-0.44059306, 0.8977069, 0), (-0.99839395, 0.056652926, 0), (-0.71478254, 0.6993468, 0), (-0.9812166, 0.19290969, 0), (-0.9045866, 0.4262898, 0), (-0.083040446, 0.00028451352, 0.9965461), (-0.08283585, 0.0047004167, 0.9965521), (-0.08112459, 0.015949292, 0.99657637), (-0.074263535, 0.034996882, 0.99662435), (-0.058382493, 0.05712184, 0.9966587), (-0.036137756, 0.073630705, 0.9966306), (-0.08299264, -0.0023578207, 0.9965474), (-0.015471358, 0.08108433, 0.99658716), (-0.08254424, -0.008170471, 0.9965539), (-0.0065186676, 0.08278889, 0.99654573), (-0.08043077, -0.01933518, 0.99657273), (-0.015471246, 0.0810844, 0.99658716), (-0.07322932, -0.037263278, 0.99661875), (-0.036137775, 0.073630966, 0.9966306), (-0.05563774, -0.059393797, 0.9966828), (-0.058382317, 0.057121668, 0.9966588), (-0.028225044, -0.07639039, 0.9966785), (-0.07426373, 0.034997072, 0.99662435), (-0.0064594224, -0.08254142, 0.99656665), (-0.08112477, 0.015949497, 0.99657637), (0.04159422, -0.04159422, 0.99826837), (-0.08283595, 0.004700292, 0.9965521), (0.043776605, -0.041533202, 0.99817765), (-0.083041474, 0.0005688945, 0.996546), (0.008054539, -0.08257122, 0.9965526), (-0.04159438, -0.04159438, 0.99826837), (0.017200882, -0.08105391, 0.9965612), (-0.041594252, -0.041594252, 0.99826837), (0.030101597, -0.07698674, 0.99657756), (-0.04159422, 0.04159422, 0.99826837), (0.046728957, -0.067744754, 0.9966078), (0.04159422, 0.04159422, 0.99826837), (0.064519666, -0.05039427, 0.9966432), (0.070919506, -0.029375842, 0.99704933), (0.07763311, -0.025832301, 0.9966472), (0.02944769, 0.012197717, 0.99949193), (0.0825898, -0.006143893, 0.9965647), (0.04159422, 0.04159422, 0.99826837), (0.5678032, -0.82316434, 0), (0.78809404, -0.61555475, 0), (0.94885, -0.31572744, 0), (0.9972446, -0.07418408, 0), (0, 1, 0), (0.70710677, -0.70710677, 0), (0.36414984, -0.9313404, 0), (1, 0, 0), (0.20759235, -0.9782154, 0), (0, 1, 0), (0.09708678, -0.99527586, 0), (0.05255807, -0.9986179, 0), (1, 0, 0), (-0.07801905, -0.9969518, 0), (-0.34658328, -0.93801916, 0), (-0.6836517, -0.72980845, 0), (-0.89124733, -0.4535174, 0), (-0.9723002, -0.23373567, 0), (-0.9951369, -0.09850129, 0), (-0.99959666, -0.02840016, 0), (-0.99999416, 0.0034248773, 0), (-0.99839395, 0.056652606, 0), (-0.9812166, 0.19290969, 0), (-0.9045866, 0.4262898, 0), (-0.7147822, 0.69934714, 0), (-0.44059306, 0.8977069, 0), (-0.1874238, 0.9822792, 0), (-0.07849713, 0.9969144, 0), (-0.18742341, 0.98227924, 0), (-0.44059306, 0.8977069, 0), (-0.7147835, 0.6993459, 0), (-0.90458673, 0.42628953, 0), (-0.98121625, 0.19291098, 0), (-0.99839395, 0.056652926, 0), (-0.9999765, 0.006848917, 0), (-1, 0, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (-0.4372454, 0.08596429, -0.8952243), (-0.4461646, 0.025317198, -0.89459276), (-0.447194, 0.0030629595, -0.89443177), (-0.4472131, 0, -0.8944275), (0, -0.4472124, -0.8944278), (4.3468333e-7, 0.44721392, -0.894427), (3.1830984e-7, 0.4472136, -0.8944272), (-0.40080836, 0.18888225, -0.8964799), (0, 0.4472138, -0.89442706), (-0.3154019, 0.30858994, -0.89738166), (0.38743585, -0.16048157, -0.90782106), (-0.19507375, 0.3974624, -0.89664364), (0.31622794, -0.31622794, -0.89442706), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.44721234, -0.89442784), (0, 0, -1), (0, 0, -1), (0.44499618, -0.033102997, -0.8949204), (0, 0, -1), (0.41926426, -0.13950908, -0.8970812), (0.34840435, -0.27212718, -0.8969734), (0.25208306, -0.3654539, -0.8960455), (0, 0, -1), (0.16224693, -0.4149584, -0.8952572), (0, 0, -1), (0.09267031, -0.43668056, -0.8948309), (0, 0, -1), (0, 0, -1), (0.043383636, -0.44474494, -0.89460593), (0, 0, -1), (0.023504212, -0.446595, -0.8944275), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.4472131, 0, -0.8944275), (-0.034805935, -0.44475976, -0.8949734), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.15256605, -0.4129156, -0.8979), (-0.3007799, -0.3210872, -0.8980169), (-0.3951646, -0.2010824, -0.8963318), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.43346182, -0.10420178, -0.89512736), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.4446152, -0.04400922, -0.8946399), (0, 0, -1), (-0.44694987, -0.012698397, -0.89446896), (-0.44719115, 0.0015313607, -0.8944371), (0, 0, -1), (0, 0, -1), (-0.44616538, 0.025317106, -0.8945924), (0, 0, -1), (-0.4372449, 0.085963495, -0.8952247), (-0.40080824, 0.18888241, -0.8964799), (-0.31540075, 0.3085899, -0.897382), (0, 0, -1), (0, 0, -1), (-0.19507425, 0.39746296, -0.89664334), (0, 0, -1), (-0.0834124, 0.43716112, -0.8955069), (-0.035104804, 0.4458331, -0.8944275), (0, 0, -1), (-0.08341236, 0.43716124, -0.8955068), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.000060636747, 0.44721267, -0.89442766), (-0.0003735518, -0.44721168, -0.89442813), (-0.0000606352, 0.4472131, -0.8944275), (-0.4472131, -0.000036837886, -0.8944275), (0.00013687328, -1, 0), (-1, -0.00014833244, 0), (0.00013687328, -1, 0), (0.0008346084, 0.99999964, 0), (0.00013687328, -1, 0), (-1, -0.00014833244, 0), (0.0008346084, 0.99999964, 0), (0.00013687328, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, -0.00014833244, 0), (0.00013687328, -1, 0), (0.0008346084, 0.99999964, 0), (0.00013687328, -1, 0), (-1, -0.00014833244, 0), (0.00013687328, -1, 0), (0.0008346084, 0.99999964, 0), (0.00013687328, -1, 0), (0.015283014, -0.015293842, 0.9997663), (0.015293698, 0.015298153, 0.99976605), (-0.015309064, -0.015296976, 0.9997658), (-0.015298381, 0.015294562, 0.99976605), (-1, -0.00014833244, 0), (0.00013687328, -1, 0), (0.0008346084, 0.99999964, 0), (0.00013687328, -1, 0), (-0.9486831, -0.00014115596, -0.31622824), (0.0001294571, -0.94868344, -0.31622747), (0.00079176895, 0.9486831, -0.3162275), (0.00012945791, -0.94868344, -0.31622732), (-0.8479981, -0.00012581602, -0.52999926), (0.000115637886, -0.8479979, -0.52999955), (0.0007075603, 0.8479979, -0.5299991), (0.00011563884, -0.84799856, -0.5299985), (-0.89442706, -0.00013255033, -0.44721374), (0.00012202925, -0.8944272, -0.4472136), (0.0007463623, 0.8944269, -0.4472137), (0.00012203015, -0.8944273, -0.44721338), (-0.7071075, -0.00010517949, -0.70710605), (0.00009651143, -0.70710725, -0.7071063), (0.0005901614, 0.70710665, -0.70710665), (0.0000965123, -0.70710725, -0.7071063), (-0.61394, -0.000091092195, -0.7893528), (0.00008396585, -0.61394, -0.7893528), (0.0005123819, 0.61393976, -0.7893528), (0.00008396663, -0.6139398, -0.78935283), (-0.5734622, -0.000085044696, -0.819232), (0.0000784175, -0.5734623, -0.819232), (0.0004785739, 0.5734618, -0.81923217), (0.000078418234, -0.5734619, -0.8192322), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)]
        uniform token orientation = "rightHanded"
        point3f[] points = [(0.19999999, 0.24999997, 0.15269823), (0.19999999, 0.24999997, 0.17548667), (0.19999999, 0.35, 0.17548667), (0.19999999, 0.35, 0.15269823), (-0.099999994, 0.35, 0.17548667), (0.099999994, 0.14999999, 0.15269823), (0.099999994, 0.14999999, 0.17548667), (-0.099999994, 0.35, 0.15269823), (-0.099999994, 0.14999999, 0.17548667), (0.19999999, 0.14999999, 0.15269823), (0.19999999, 0.14999999, 0.17548667), (-0.099999994, 0.14999999, 0.15269823), (-2.3841857e-9, 0.14999999, 0.17548667), (0.19999999, -0.049999997, 0.15269823), (0.19999999, -0.049999997, 0.17548667), (-2.3841857e-9, 0.14999999, 0.15269823), (-2.3841857e-9, 0.049999997, 0.17548667), (0.19446063, -0.08702623, 0.15269823), (0.19446063, -0.08702623, 0.17548667), (-2.3841857e-9, 0.049999997, 0.15269823), (-0.00029155015, 0.028717194, 0.17548667), (0.18017492, -0.11355683, 0.15269823), (0.18017492, -0.11355683, 0.17548667), (-0.00029155015, 0.028717194, 0.15269823), (-0.0023323654, 0.00830904, 0.17548667), (0.1606414, -0.13134111, 0.15269823), (0.1606414, -0.13134111, 0.17548667), (-0.0023323654, 0.00830904, 0.15269823), (-0.007871726, -0.0103498455, 0.17548667), (0.13935858, -0.14212826, 0.15269823), (0.13935858, -0.14212826, 0.17548667), (-0.007871726, -0.0103498455, 0.15269823), (-0.018658897, -0.02638484, 0.17548667), (0.11982507, -0.14766765, 0.15269823), (0.11982507, -0.14766765, 0.17548667), (-0.018658897, -0.02638484, 0.15269823), (-0.03644314, -0.038921278, 0.17548667), (0.10553936, -0.14970846, 0.15269823), (0.10553936, -0.14970846, 0.17548667), (-0.03644314, -0.038921278, 0.15269823), (-0.062973745, -0.04708454, 0.17548667), (0.099999994, -0.14999999, 0.15269823), (0.099999994, -0.14999999, 0.17548667), (-0.062973745, -0.04708454, 0.15269823), (-0.099999994, -0.049999997, 0.17548667), (0.099999994, -0.35, 0.15269823), (0.099999994, -0.35, 0.17548667), (-0.099999994, -0.049999997, 0.15269823), (-0.13702625, -0.052915458, 0.17548667), (-0.099999994, -0.35, 0.15269823), (-0.099999994, -0.35, 0.17548667), (-0.13702625, -0.052915458, 0.15269823), (-0.16355686, -0.061078735, 0.17548667), (-0.1370262, -0.34416908, 0.15269823), (-0.1370262, -0.34416908, 0.17548667), (-0.16355686, -0.061078735, 0.15269823), (-0.18134107, -0.07361515, 0.17548667), (-0.16355681, -0.32784256, 0.15269823), (-0.16355681, -0.32784256, 0.17548667), (-0.18134107, -0.07361515, 0.15269823), (-0.19212829, -0.089650154, 0.17548667), (-0.1813411, -0.30276963, 0.15269823), (-0.1813411, -0.30276963, 0.17548667), (-0.19212829, -0.089650154, 0.15269823), (-0.19766761, -0.10830904, 0.17548667), (-0.19212821, -0.27069968, 0.15269823), (-0.19212821, -0.27069968, 0.17548667), (-0.19766761, -0.10830904, 0.15269823), (-0.19970843, -0.12871718, 0.17548667), (-0.19766761, -0.23338193, 0.15269823), (-0.19766761, -0.23338193, 0.17548667), (-0.19970843, -0.12871718, 0.15269823), (-0.19999999, -0.14999999, 0.17548667), (-0.19970848, -0.19256559, 0.15269823), (-0.19970848, -0.19256559, 0.17548667), (-0.19999999, -0.14999999, 0.15269823), (-0.16988386, -0.26535222, 0.15135773), (-0.17496307, -0.23113458, 0.15135773), (-0.17692395, -0.19191824, 0.15135773), (-0.17721048, -0.15007804, 0.15135773), (-0.17693555, -0.13000941, 0.15135773), (-0.1752071, -0.112724856, 0.15135773), (-0.16081184, -0.29232317, 0.15135773), (-0.17127435, -0.09947764, 0.15135773), (-0.14765705, -0.31086928, 0.15135773), (-0.16477783, -0.08982069, 0.15135773), (-0.12897116, -0.32236832, 0.15135773), (-0.15339017, -0.08179332, 0.15135773), (-0.09821663, -0.32721153, 0.15135773), (-0.1327292, -0.07543608, 0.15135773), (0.07721155, -0.32721153, 0.15135773), (-0.09821117, -0.072718136, 0.15135773), (0.07721155, -0.12837937, 0.15135773), (-0.05867672, -0.06960518, 0.15135773), (0.10332472, -0.12700503, 0.15135773), (-0.026276477, -0.05963587, 0.15135773), (0.11508367, -0.12532519, 0.15135773), (-0.002095654, -0.04259037, 0.15135773), (0.13102147, -0.12080547, 0.15135773), (0.012982213, -0.020177335, 0.15135773), (0.14758372, -0.112410925, 0.15135773), (0.020128151, 0.0038932036, 0.15135773), (0.16195545, -0.0993262, 0.15135773), (0.022481333, 0.027424965, 0.15135773), (0.17251123, -0.07972262, 0.15135773), (0.022788445, 0.049843922, 0.15135773), (0.17721155, -0.048304766, 0.15135773), (0.022788445, 0.17278844, 0.15135773), (0.17721155, 0.12721156, 0.15135773), (-0.07721155, 0.17278844, 0.15135773), (0.044983823, 0.12721156, 0.15135773), (-0.07721155, 0.32721153, 0.15135773), (0.17721155, 0.2594393, 0.15135773), (0.17721155, 0.32721153, 0.15135773), (0.17855203, -0.048404492, 0.12722877), (0.17855203, 0.12855203, 0.12722877), (0.04822003, 0.12855203, 0.12722877), (0.17855203, 0.258884, 0.12722877), (0.17855203, 0.328552, 0.12722877), (-0.07855204, 0.328552, 0.12722877), (0.17380235, -0.08015224, 0.12722877), (-0.07855204, 0.17144796, 0.12722877), (0.16302718, -0.10016329, 0.12722877), (0.02144796, 0.17144796, 0.12722877), (0.14835182, -0.11352446, 0.12722877), (0.02144796, 0.049853094, 0.12722877), (0.13151188, -0.12205974, 0.12722877), (0.021141764, 0.02750099, 0.12722877), (0.11536256, -0.12663944, 0.12722877), (0.01880696, 0.0041529653, 0.12722877), (0.103454985, -0.12834051, 0.12722877), (0.011755531, -0.019599237, 0.12722877), (0.07855202, -0.12965116, 0.12722877), (-0.0030699468, -0.041637115, 0.12722877), (0.07855202, -0.328552, 0.12722877), (-0.026874505, -0.05841738, 0.12722877), (-0.098321535, -0.328552, 0.12722877), (-0.05892948, -0.06828045, 0.12722877), (-0.12944497, -0.32365066, 0.12722877), (-0.09831638, -0.07138179, 0.12722877), (-0.14859232, -0.31186768, 0.12722877), (-0.13298197, -0.07411135, 0.12722877), (-0.16201945, -0.29293767, 0.12722877), (-0.15398821, -0.08057483, 0.12722877), (-0.17119233, -0.26566678, 0.12722877), (-0.16575213, -0.08886743, 0.12722877), (-0.17629862, -0.23126678, 0.12722877), (-0.17250104, -0.098899566, 0.12722877), (-0.1782642, -0.19195631, 0.12722877), (-0.17652829, -0.112465106, 0.12722877), (-0.17855102, -0.15007345, 0.12722877), (-0.17827512, -0.12993342, 0.12722877), (-0.19232535, -0.23285314, 0.12588827), (-0.19434738, -0.19241326, 0.12588827), (-0.19463772, -0.15001835, 0.12588827), (-0.19435008, -0.12902126, 0.12588827), (-0.19238277, -0.109348066, 0.12588827), (-0.18722145, -0.09196251, 0.12588827), (-0.18689422, -0.26944146, 0.12588827), (-0.1774438, -0.07742823, 0.12588827), (-0.17651068, -0.30031163, 0.12588827), (-0.16116469, -0.06595278, 0.12588827), (-0.15981567, -0.32384878, 0.12588827), (-0.13601516, -0.05821445, 0.12588827), (-0.13513088, -0.33903944, 0.12588827), (-0.09957908, -0.055345483, 0.12588827), (-0.099580385, -0.344638, 0.12588827), (-0.06196268, -0.052383546, 0.12588827), (0.09463798, -0.344638, 0.12588827), (-0.034050982, -0.04379533, 0.12588827), (0.09463798, -0.14491278, 0.12588827), (-0.014761641, -0.030197924, 0.12588827), (0.10501826, -0.14436646, 0.12588827), (-0.0029648803, -0.0126622, 0.12588827), (0.118709445, -0.14241058, 0.12588827), (0.0029524874, 0.0072700116, 0.12588827), (0.1373969, -0.13711111, 0.12588827), (0.0050668023, 0.028413143, 0.12588827), (0.15756899, -0.12688692, 0.12588827), (0.0053620124, 0.049963284, 0.12588827), (0.17588796, -0.11020843, 0.12588827), (0.0053620124, 0.15536201, 0.12588827), (0.18929604, -0.08530773, 0.12588827), (-0.09463798, 0.15536201, 0.12588827), (0.19463798, -0.049601115, 0.12588827), (-0.09463798, 0.344638, 0.12588827), (0.19463798, 0.14463799, 0.12588827), (0.19463798, 0.344638, 0.12588827), (0.087054946, 0.14463799, 0.12588827), (0.19463798, 0.25222102, 0.12588827), (0.18929604, -0.08530773, 0.09639734), (0.19463798, -0.049601115, 0.09639734), (0.19463798, 0.14463799, 0.09639734), (0.087054946, 0.14463799, 0.09639734), (0.19463798, 0.25222102, 0.09639734), (0.19463798, 0.344638, 0.09639734), (0.17588796, -0.11020843, 0.09639734), (-0.09463798, 0.344638, 0.09639734), (0.15756899, -0.12688692, 0.09639734), (-0.09463798, 0.15536201, 0.09639734), (0.1373969, -0.13711111, 0.09639734), (0.0053620124, 0.15536201, 0.09639734), (0.118709445, -0.14241058, 0.09639734), (0.0053620124, 0.049963284, 0.09639734), (0.10501826, -0.14436646, 0.09639734), (0.0050668023, 0.028413143, 0.09639734), (0.09463798, -0.14491278, 0.09639734), (0.0029524874, 0.0072700116, 0.09639734), (0.09463798, -0.344638, 0.09639734), (-0.0029648803, -0.0126622, 0.09639734), (-0.099580385, -0.344638, 0.09639734), (-0.014761641, -0.030197924, 0.09639734), (-0.13513088, -0.33903944, 0.09639734), (-0.034050982, -0.04379533, 0.09639734), (-0.15981567, -0.32384878, 0.09639734), (-0.06196268, -0.052383546, 0.09639734), (-0.17651068, -0.30031163, 0.09639734), (-0.09957908, -0.055345483, 0.09639734), (-0.18689422, -0.26944146, 0.09639734), (-0.13601516, -0.05821445, 0.09639734), (-0.19232535, -0.23285314, 0.09639734), (-0.16116469, -0.06595278, 0.09639734), (-0.19434738, -0.19241326, 0.09639734), (-0.1774438, -0.07742823, 0.09639734), (-0.19463772, -0.15001835, 0.09639734), (-0.18722145, -0.09196251, 0.09639734), (-0.19435008, -0.12902126, 0.09639734), (-0.19238277, -0.109348066, 0.09639734), (-0.1782642, -0.19195631, 0.09639734), (-0.178551, -0.15007345, 0.09639734), (-0.17827511, -0.12993342, 0.09639734), (-0.17652828, -0.112465106, 0.09639734), (-0.17250104, -0.09889957, 0.09639734), (-0.16575213, -0.08886743, 0.09639734), (-0.17629859, -0.23126678, 0.09639734), (-0.15398818, -0.08057483, 0.09639734), (-0.17119232, -0.26566678, 0.09639734), (-0.13298197, -0.07411137, 0.09639734), (-0.16201945, -0.29293767, 0.09639734), (-0.09831638, -0.07138181, 0.09639734), (-0.1485923, -0.31186768, 0.09639734), (-0.05892948, -0.06828047, 0.09639734), (-0.12944496, -0.32365066, 0.09639734), (-0.026874505, -0.05841739, 0.09639734), (-0.098321535, -0.328552, 0.09639734), (-0.0030699372, -0.041637123, 0.09639734), (0.078552015, -0.328552, 0.09639734), (0.01175554, -0.019599255, 0.09639734), (0.078552015, -0.12965116, 0.09639734), (0.018806979, 0.004152956, 0.09639734), (0.10345498, -0.12834051, 0.09639734), (0.021141784, 0.02750099, 0.09639734), (0.11536256, -0.12663943, 0.09639734), (0.02144798, 0.049853094, 0.09639734), (0.13151188, -0.12205973, 0.09639734), (0.02144798, 0.17144798, 0.09639734), (0.1483518, -0.11352444, 0.09639734), (-0.078552015, 0.17144798, 0.09639734), (0.16302717, -0.10016329, 0.09639734), (-0.078552015, 0.328552, 0.09639734), (0.17380235, -0.08015224, 0.09639734), (0.17855202, 0.328552, 0.09639734), (0.17855202, -0.048404492, 0.09639734), (0.17855202, 0.258884, 0.09639734), (0.17855202, 0.12855202, 0.09639734), (0.048219986, 0.12855202, 0.09639734), (0.16302717, -0.10016329, 0.070927896), (0.17380235, -0.08015224, 0.070927896), (0.17855202, -0.048404492, 0.070927896), (0.17855202, 0.12855202, 0.070927896), (0.048219986, 0.12855202, 0.070927896), (0.17855202, 0.258884, 0.070927896), (0.1483518, -0.11352444, 0.070927896), (0.17855202, 0.328552, 0.070927896), (0.13151188, -0.12205973, 0.070927896), (-0.078552015, 0.328552, 0.070927896), (0.11536256, -0.12663943, 0.070927896), (-0.078552015, 0.17144798, 0.070927896), (0.10345498, -0.12834051, 0.070927896), (0.02144798, 0.17144798, 0.070927896), (0.078552015, -0.12965116, 0.070927896), (0.02144798, 0.049853094, 0.070927896), (0.078552015, -0.328552, 0.070927896), (0.021141784, 0.02750099, 0.070927896), (-0.098321535, -0.328552, 0.070927896), (0.018806979, 0.004152956, 0.070927896), (-0.12944496, -0.32365066, 0.070927896), (0.01175554, -0.019599255, 0.070927896), (-0.1485923, -0.31186768, 0.070927896), (-0.0030699372, -0.041637123, 0.070927896), (-0.16201945, -0.29293767, 0.070927896), (-0.026874505, -0.05841739, 0.070927896), (-0.17119232, -0.26566678, 0.070927896), (-0.05892948, -0.06828047, 0.070927896), (-0.17629859, -0.23126678, 0.070927896), (-0.09831638, -0.07138181, 0.070927896), (-0.1782642, -0.19195631, 0.070927896), (-0.13298197, -0.07411137, 0.070927896), (-0.178551, -0.15007345, 0.070927896), (-0.15398818, -0.08057483, 0.070927896), (-0.17827511, -0.12993342, 0.070927896), (-0.16575213, -0.08886743, 0.070927896), (-0.17652828, -0.112465106, 0.070927896), (-0.17250104, -0.09889957, 0.070927896), (-0.19463772, -0.15001835, 0.0695874), (-0.19435008, -0.12902126, 0.0695874), (-0.19238277, -0.109348066, 0.0695874), (-0.18722148, -0.091962524, 0.0695874), (-0.1774438, -0.07742823, 0.0695874), (-0.16116466, -0.06595278, 0.0695874), (-0.19434738, -0.19241326, 0.0695874), (-0.13601516, -0.05821445, 0.0695874), (-0.19232535, -0.23285314, 0.0695874), (-0.09957908, -0.055345483, 0.0695874), (-0.18689422, -0.26944143, 0.0695874), (-0.06196268, -0.052383557, 0.0695874), (-0.17651068, -0.30031163, 0.0695874), (-0.034050982, -0.043795336, 0.0695874), (-0.15981567, -0.32384878, 0.0695874), (-0.014761641, -0.030197924, 0.0695874), (-0.13513088, -0.33903944, 0.0695874), (-0.0029648803, -0.0126622, 0.0695874), (-0.099580385, -0.344638, 0.0695874), (0.0029524874, 0.0072700116, 0.0695874), (0.09463798, -0.344638, 0.0695874), (0.0050668023, 0.028413143, 0.0695874), (0.09463798, -0.14491278, 0.0695874), (0.0053620124, 0.049963284, 0.0695874), (0.10501826, -0.14436646, 0.0695874), (0.0053620124, 0.15536201, 0.0695874), (0.11870946, -0.14241056, 0.0695874), (-0.09463798, 0.15536201, 0.0695874), (0.1373969, -0.13711111, 0.0695874), (-0.09463798, 0.344638, 0.0695874), (0.15756899, -0.12688692, 0.0695874), (0.19463798, 0.344638, 0.0695874), (0.17588796, -0.11020843, 0.0695874), (0.19463798, 0.25222102, 0.0695874), (0.18929604, -0.08530773, 0.0695874), (0.08705494, 0.14463799, 0.0695874), (0.19463797, -0.049601115, 0.0695874), (0.19463798, 0.14463799, 0.0695874), (0.15756899, -0.12688692, 0.03875597), (0.17588796, -0.11020843, 0.03875597), (0.18929604, -0.08530773, 0.03875597), (0.19463797, -0.049601115, 0.03875597), (0.19463798, 0.14463799, 0.03875597), (0.08705494, 0.14463799, 0.03875597), (0.1373969, -0.13711111, 0.03875597), (0.19463798, 0.25222102, 0.03875597), (0.11870946, -0.14241056, 0.03875597), (0.19463798, 0.344638, 0.03875597), (0.10501826, -0.14436646, 0.03875597), (0.09463798, -0.14491278, 0.03875597), (0.09463798, -0.344638, 0.03875597), (-0.099580385, -0.344638, 0.03875597), (-0.13513088, -0.33903944, 0.03875597), (-0.15981567, -0.32384878, 0.03875597), (-0.17651068, -0.30031163, 0.03875597), (-0.18689422, -0.26944143, 0.03875597), (-0.19232535, -0.23285314, 0.03875597), (-0.19434738, -0.19241326, 0.03875597), (-0.19463772, -0.15001835, 0.03875597), (-0.19435008, -0.12902126, 0.03875597), (-0.19238277, -0.109348066, 0.03875597), (-0.18722148, -0.091962524, 0.03875597), (-0.1774438, -0.07742823, 0.03875597), (-0.16116466, -0.06595278, 0.03875597), (-0.13601516, -0.05821445, 0.03875597), (-0.09957908, -0.055345483, 0.03875597), (-0.06196268, -0.052383557, 0.03875597), (-0.034050982, -0.043795336, 0.03875597), (-0.014761641, -0.030197924, 0.03875597), (-0.0029648803, -0.0126622, 0.03875597), (0.0029524874, 0.0072700116, 0.03875597), (0.0050668023, 0.028413143, 0.03875597), (0.0053620124, 0.049963284, 0.03875597), (0.0053620124, 0.15536201, 0.03875597), (-0.09463798, 0.15536201, 0.03875597), (-0.09463798, 0.344638, 0.03875597), (-0.07844381, 0.344638, 0.03875598), (0.0055948994, 0.0067505073, 0.037415475), (0.007745969, 0.028261127, 0.037415475), (0.0080430005, 0.049944915, 0.037415475), (0.0080430005, 0.158043, 0.037415475), (-0.09195697, 0.158043, 0.037415475), (-0.09195697, 0.341957, 0.037415475), (-0.07844381, 0.341957, 0.037415486), (-0.000511477, -0.013818379, 0.037415475), (0.19195697, 0.341957, 0.037415475), (-0.012813017, -0.032104455, 0.037415475), (0.19195697, 0.2533315, 0.037415475), (-0.032854903, -0.046232346, 0.037415475), (0.08058245, 0.141957, 0.037415475), (0.08058245, 0.141957, 0.048139457), (0.19195697, 0.2533315, 0.048139457), (0.19195697, 0.141957, 0.048139457), (0.19195697, 0.141957, 0.037415475), (0.19195697, -0.049401682, 0.048139457), (0.17374448, -0.10853424, 0.048139457), (0.19195697, -0.049401682, 0.037415475), (0.18671376, -0.08444848, 0.048139457), (0.18671376, -0.08444848, 0.037415475), (0.17374448, -0.10853424, 0.037415475), (0.1560328, -0.124659844, 0.037415475), (0.1560328, -0.124659844, 0.048139457), (0.13641606, -0.13460255, 0.037415475), (0.13641606, -0.13460255, 0.048139457), (0.11815164, -0.13978204, 0.037415475), (0.10475772, -0.14169545, 0.048139457), (0.11815164, -0.13978204, 0.048139457), (0.10475772, -0.14169545, 0.037415475), (0.09195699, -0.14236917, 0.048139457), (0.09195699, -0.14236917, 0.037415475), (-0.000511477, -0.013818379, 0.048139457), (0.09195699, -0.34195694, 0.048139457), (-0.09937058, -0.34195694, 0.048139457), (-0.15794511, -0.32185194, 0.048139457), (0.09195699, -0.34195694, 0.037415475), (-0.09937058, -0.34195694, 0.037415475), (0.0956254, 0.1772965, 0.048139457), (0.095613204, 0.32533216, 0.048139457), (0.0055948994, 0.0067505073, 0.048139457), (-0.13418323, -0.3364747, 0.048139457), (-0.13418323, -0.3364747, 0.037415475), (-0.15794511, -0.32185194, 0.037415475), (-0.17409547, -0.29908267, 0.037415475), (0.19195697, 0.341957, 0.048139457), (-0.07844381, 0.341957, 0.048139457), (-0.09195697, 0.341957, 0.048139457), (-0.17409547, -0.29908267, 0.048139457), (-0.18427725, -0.26881233, 0.037415475), (-0.18427725, -0.26881233, 0.048139457), (-0.19166687, -0.1923371, 0.048139457), (-0.09936865, -0.0580182, 0.048139457), (-0.18476808, -0.09311868, 0.048139457), (-0.18965423, -0.23258874, 0.037415475), (-0.18965423, -0.23258874, 0.048139457), (-0.19166687, -0.1923371, 0.037415475), (-0.1919566, -0.15002751, 0.037415475), (-0.1919566, -0.15002751, 0.048139457), (-0.19167091, -0.1291733, 0.048139457), (-0.19167091, -0.1291733, 0.037415475), (-0.18974037, -0.10986757, 0.048139457), (-0.18974037, -0.10986757, 0.037415475), (-0.18476808, -0.09311868, 0.037415475), (-0.17549518, -0.07933477, 0.037415475), (-0.17549518, -0.07933477, 0.048139457), (-0.15996858, -0.06838979, 0.048139457), (-0.15996858, -0.06838979, 0.037415475), (-0.13550963, -0.060863942, 0.048139457), (-0.13550963, -0.060863942, 0.037415475), (-0.09936865, -0.0580182, 0.037415475), (-0.06145714, -0.05503304, 0.048139457), (-0.06145714, -0.05503304, 0.037415475), (-0.032854903, -0.046232346, 0.048139457), (-0.012813017, -0.032104455, 0.048139457), (0.007745969, 0.028261127, 0.048139457), (0.0080430005, 0.049944915, 0.048139457), (0.0080430005, 0.158043, 0.048139457), (-0.09195697, 0.158043, 0.048139457), (-0.079087675, 0.17727262, 0.048139457), (-0.07910968, 0.325478, 0.048139457), (-0.079087675, 0.17727262, 0.037415475), (-0.07910968, 0.325478, 0.037415475), (0.0956254, 0.1772965, 0.037415475), (0.095613204, 0.32533216, 0.037415475), (-0.07640709, 0.17995398, 0.03875597), (-0.076428294, 0.3227947, 0.03875597), (0.09294419, 0.17997713, 0.03875597), (0.09293243, 0.3226534, 0.03875597), (-0.07640709, 0.17995398, 0.019989014), (-0.076428294, 0.3227947, 0.019989014), (0.09293243, 0.3226534, 0.019989014), (0.09294419, 0.17997713, 0.019989014), (-0.043121375, 0.29469442, 0.019989014), (-0.04310852, 0.20803106, 0.019989014), (0.059632022, 0.29460865, 0.019989014), (0.059639156, 0.2080451, 0.019989014), (-0.043121375, 0.29469442, -0.049716834), (-0.04310852, 0.20803106, -0.049716834), (0.059632022, 0.29460865, -0.049716834), (0.059639156, 0.2080451, -0.049716834), (-0.043121375, 0.29469442, -0.07832771), (-0.04310852, 0.20803106, -0.07832771), (0.059632022, 0.29460865, -0.07832771), (0.059639156, 0.2080451, -0.07832771), (-0.065913215, 0.31750193, -0.0776304), (-0.065893576, 0.18523951, -0.0776304), (0.08241859, 0.31737813, -0.0776304), (0.08242948, 0.18525976, -0.0776304), (-0.065913215, 0.31750193, -0.10712133), (-0.065893576, 0.18523951, -0.10712133), (0.08241859, 0.31737813, -0.10712133), (0.08242948, 0.18525976, -0.10712133), (-0.061891135, 0.31347707, -0.119185805), (-0.061872672, 0.18926153, -0.119185805), (0.07839742, 0.31335995, -0.119185805), (0.07840766, 0.18928067, -0.119185805), (-0.055187643, 0.306769, -0.12990978), (-0.055171203, 0.19596495, -0.12990978), (0.0716955, 0.3066631, -0.12990978), (0.07170462, 0.19598226, -0.12990978), (-0.049824867, 0.3014025, -0.14063375), (-0.04980999, 0.20132764, -0.14063375), (0.06633395, 0.3013056, -0.14063375), (0.06634219, 0.2013435, -0.14063375), (-0.04178066, 0.2933528, -0.14867675), (-0.04176821, 0.20937178, -0.14867675), (0.058291614, 0.29326928, -0.14867675), (0.05829854, 0.20938542, -0.14867675), (-0.029714396, 0.28127828, -0.15806022), (-0.029705526, 0.22143789, -0.15806022), (0.04622814, 0.2812149, -0.15806022), (0.046233073, 0.22144826, -0.15806022), (-0.01630745, 0.26786214, -0.1674437), (-0.01630255, 0.23484464, -0.1674437), (0.032824285, 0.2678211, -0.1674437), (0.032827, 0.23485136, -0.1674437), (-0.0029005073, 0.25444597, -0.17548667), (-0.0028995823, 0.24825147, -0.17548667), (0.01942043, 0.2544273, -0.17548667), (0.019420955, 0.24825452, -0.17548667)]
        custom color4f[] primvars:colors
        color3f[] primvars:displayColor = [(0.13286832, 0.13286832, 0.13286832)]
        float[] primvars:displayOpacity = [1]
        custom float2[] primvars:st = []
        custom float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)]
        uniform token purpose = "default"
        token visibility = "inherited"
        custom matrix4d xformOp:transform = ( (11.229999542236328, 0, 0, 0), (0, -0.0000013387202670855913, 11.230000880956595, 0), (0, -11.230000880956595, -0.0000013387202670855913, 0), (48.654416884198156, 1.9707152119137277, -21.770031378348165, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

